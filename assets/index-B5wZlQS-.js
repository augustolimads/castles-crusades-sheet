var kh=Object.defineProperty;var Al=n=>{throw TypeError(n)};var Oh=(n,e,t)=>e in n?kh(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var za=(n,e,t)=>Oh(n,typeof e!="symbol"?e+"":e,t),Vs=(n,e,t)=>e.has(n)||Al("Cannot "+t);var et=(n,e,t)=>(Vs(n,e,"read from private field"),t?t.call(n):e.get(n)),ti=(n,e,t)=>e.has(n)?Al("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(n):e.set(n,t),_i=(n,e,t,i)=>(Vs(n,e,"write to private field"),i?i.call(n,t):e.set(n,t),t),Jn=(n,e,t)=>(Vs(n,e,"access private method"),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerPolicy&&(a.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?a.credentials="include":r.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(r){if(r.ep)return;r.ep=!0;const a=t(r);fetch(r.href,a)}})();const iu=!1;var Ss=Array.isArray,Bh=Array.prototype.indexOf,Yo=Array.from,ds=Object.defineProperty,Ar=Object.getOwnPropertyDescriptor,ru=Object.getOwnPropertyDescriptors,Uh=Object.prototype,Hh=Array.prototype,Zo=Object.getPrototypeOf,Cl=Object.isExtensible;function Kn(n){return typeof n=="function"}const jt=()=>{};function Gh(n){return n()}function ps(n){for(var e=0;e<n.length;e++)n[e]()}function Wh(){var n,e,t=new Promise((i,r)=>{n=i,e=r});return{promise:t,resolve:n,reject:e}}function Vh(n,e){if(Array.isArray(n))return n;if(!(Symbol.iterator in n))return Array.from(n);const t=[];for(const i of n)if(t.push(i),t.length===e)break;return t}const ci=2,$o=4,Es=8,Sa=16,ur=32,Bn=64,nu=128,oi=256,fs=512,Rt=1024,li=2048,rn=4096,Di=8192,nn=16384,Jo=32768,Ea=65536,Ll=1<<17,qh=1<<18,Ko=1<<19,Qo=1<<20,Bo=1<<21,el=1<<22,Xr=1<<23,Ui=Symbol("$state"),au=Symbol("legacy props"),jh=Symbol(""),tl=new class extends Error{constructor(){super(...arguments);za(this,"name","StaleReactionError");za(this,"message","The reaction that called `getAbortSignal()` was re-run or destroyed")}};function Xh(){throw new Error("https://svelte.dev/e/await_outside_boundary")}function su(n){throw new Error("https://svelte.dev/e/lifecycle_outside_component")}function Yh(){throw new Error("https://svelte.dev/e/async_derived_orphan")}function Zh(n){throw new Error("https://svelte.dev/e/effect_in_teardown")}function $h(){throw new Error("https://svelte.dev/e/effect_in_unowned_derived")}function Jh(n){throw new Error("https://svelte.dev/e/effect_orphan")}function Kh(){throw new Error("https://svelte.dev/e/effect_update_depth_exceeded")}function Qh(n){throw new Error("https://svelte.dev/e/props_invalid_value")}function ed(){throw new Error("https://svelte.dev/e/state_descriptors_fixed")}function td(){throw new Error("https://svelte.dev/e/state_prototype_fixed")}function id(){throw new Error("https://svelte.dev/e/state_unsafe_mutation")}const Ts=1,As=2,ou=4,rd=8,nd=16,ad=1,sd=2,od=4,ld=8,cd=16,ud=1,hd=2,Nt=Symbol(),dd="http://www.w3.org/1999/xhtml",pd="http://www.w3.org/2000/svg",fd="@attach";function md(){console.warn("https://svelte.dev/e/select_multiple_invalid_value")}let gd=!1;function lu(n){return n===this.v}function cu(n,e){return n!=n?e==e:n!==e||n!==null&&typeof n=="object"||typeof n=="function"}function uu(n){return!cu(n,this.v)}let Un=!1,vd=!1;function _d(){Un=!0}let gt=null;function ms(n){gt=n}function Ne(n,e=!1,t){gt={p:gt,c:null,e:null,s:n,x:null,l:Un&&!e?{s:null,u:null,$:[]}:null}}function ke(n){var e=gt,t=e.e;if(t!==null){e.e=null;for(var i of t)Eu(i)}return gt=e.p,{}}function Hn(){return!Un||gt!==null&&gt.l===null}const xd=new WeakMap;function yd(n){var e=Ve;if(e===null)return We.f|=Xr,n;if((e.f&Jo)===0){if((e.f&nu)===0)throw!e.parent&&n instanceof Error&&hu(n),n;e.b.error(n)}else il(n,e)}function il(n,e){for(;e!==null;){if((e.f&nu)!==0)try{e.b.error(n);return}catch{}e=e.parent}throw n instanceof Error&&hu(n),n}function hu(n){const e=xd.get(n);e&&(ds(n,"message",{value:e.message}),ds(n,"stack",{value:e.stack}))}let gs=[];function bd(){var n=gs;gs=[],ps(n)}function Cs(n){gs.length===0&&queueMicrotask(bd),gs.push(n)}function wd(){for(var n=Ve.b;n!==null&&!n.has_pending_snippet();)n=n.parent;return n===null&&Xh(),n}function Ta(n){var e=ci|li,t=We!==null&&(We.f&ci)!==0?We:null;return Ve===null||t!==null&&(t.f&oi)!==0?e|=oi:Ve.f|=Ko,{ctx:gt,deps:null,effects:null,equals:lu,f:e,fn:n,reactions:null,rv:0,v:Nt,wv:0,parent:t??Ve,ac:null}}function Md(n,e){let t=Ve;t===null&&Yh();var i=t.b,r=void 0,a=ga(Nt),o=null,s=!We;return Id(()=>{try{var l=n()}catch(m){l=Promise.reject(m)}var c=()=>l;r=(o==null?void 0:o.then(c,c))??Promise.resolve(l),o=r;var u=Dt,d=i.pending;s&&(i.update_pending_count(1),d||u.increment());const h=(m,g=void 0)=>{o=null,d||u.activate(),g?g!==tl&&(a.f|=Xr,va(a,g)):((a.f&Xr)!==0&&(a.f^=Xr),va(a,m)),s&&(i.update_pending_count(-1),d||u.decrement()),mu()};if(r.then(h,m=>h(null,m||"unknown")),u)return()=>{queueMicrotask(()=>u.neuter())}}),new Promise(l=>{function c(u){function d(){u===r?l(a):c(r)}u.then(d,d)}c(r)})}function Gt(n){const e=Ta(n);return Pu(e),e}function Ae(n){const e=Ta(n);return e.equals=uu,e}function du(n){var e=n.effects;if(e!==null){n.effects=null;for(var t=0;t<e.length;t+=1)Qt(e[t])}}function Sd(n){for(var e=n.parent;e!==null;){if((e.f&ci)===0)return e;e=e.parent}return null}function rl(n){var e,t=Ve;Dr(Sd(n));try{du(n),e=zu(n)}finally{Dr(t)}return e}function pu(n){var e=rl(n);if(n.equals(e)||(n.v=e,n.wv=Iu()),!an)if(Mr!==null)Mr.set(n,n.v);else{var t=(Er||(n.f&oi)!==0)&&n.deps!==null?rn:Rt;Ot(n,t)}}function fu(n,e,t){const i=Hn()?Ta:Ae;if(e.length===0){t(n.map(i));return}var r=Dt,a=Ve,o=Ed(),s=wd();Promise.all(e.map(l=>Md(l))).then(l=>{r==null||r.activate(),o();try{t([...n.map(i),...l])}catch(c){(a.f&nn)===0&&il(c,a)}r==null||r.deactivate(),mu()}).catch(l=>{s.error(l)})}function Ed(){var n=Ve,e=We,t=gt;return function(){Dr(n),Gi(e),ms(t)}}function mu(){Dr(null),Gi(null),ms(null)}const Na=new Set;let Dt=null,Mr=null,Dl=new Set,ca=[],nl=null,Uo=!1;var ba,Fn,zn,br,wa,Ma,qr,Nn,wr,nr,jr,cr,gu,vu,Ho;const Sl=class Sl{constructor(){ti(this,cr);ti(this,ba,new Map);ti(this,Fn,new Map);ti(this,zn,new Set);ti(this,br,0);ti(this,wa,null);ti(this,Ma,!1);ti(this,qr,[]);ti(this,Nn,[]);ti(this,wr,[]);ti(this,nr,[]);ti(this,jr,[]);za(this,"skipped_effects",new Set)}capture(e,t){et(this,Fn).has(e)||et(this,Fn).set(e,t),et(this,ba).set(e,e.v)}activate(){Dt=this}deactivate(){Dt=null;for(const e of Dl)if(Dl.delete(e),e(),Dt!==null)break}neuter(){_i(this,Ma,!0)}flush(){ca.length>0?this.flush_effects():Jn(this,cr,Ho).call(this),Dt===this&&(et(this,br)===0&&Na.delete(this),this.deactivate())}flush_effects(){var e=Rn;Uo=!0;try{var t=0;for(zl(!0);ca.length>0;){if(t++>1e3){var i,r;Td()}Jn(this,cr,gu).call(this,ca),Yr.clear()}}finally{Uo=!1,zl(e),nl=null}}increment(){_i(this,br,et(this,br)+1)}decrement(){if(_i(this,br,et(this,br)-1),et(this,br)===0){for(const e of et(this,wr))Ot(e,li),Cr(e);for(const e of et(this,nr))Ot(e,li),Cr(e);for(const e of et(this,jr))Ot(e,li),Cr(e);_i(this,wr,[]),_i(this,nr,[]),this.flush()}else this.deactivate()}add_callback(e){et(this,zn).add(e)}settled(){return(et(this,wa)??_i(this,wa,Wh())).promise}static ensure(e=!0){if(Dt===null){const t=Dt=new Sl;Na.add(Dt),e&&queueMicrotask(()=>{Dt===t&&t.flush()})}return Dt}};ba=new WeakMap,Fn=new WeakMap,zn=new WeakMap,br=new WeakMap,wa=new WeakMap,Ma=new WeakMap,qr=new WeakMap,Nn=new WeakMap,wr=new WeakMap,nr=new WeakMap,jr=new WeakMap,cr=new WeakSet,gu=function(e){var a;ca=[];var t=null;if(Na.size>1){t=new Map,Mr=new Map;for(const[o,s]of et(this,ba))t.set(o,{v:o.v,wv:o.wv}),o.v=s;for(const o of Na)if(o!==this)for(const[s,l]of et(o,Fn))t.has(s)||(t.set(s,{v:s.v,wv:s.wv}),s.v=l)}for(const o of e)Jn(this,cr,vu).call(this,o);if(et(this,qr).length===0&&et(this,br)===0){var i=et(this,wr),r=et(this,nr);_i(this,wr,[]),_i(this,nr,[]),_i(this,jr,[]),Jn(this,cr,Ho).call(this),Rl(i),Rl(r),(a=et(this,wa))==null||a.resolve()}else{for(const o of et(this,wr))Ot(o,Rt);for(const o of et(this,nr))Ot(o,Rt);for(const o of et(this,jr))Ot(o,Rt)}if(t){for(const[o,{v:s,wv:l}]of t)o.wv<=l&&(o.v=s);Mr=null}for(const o of et(this,qr))fa(o);for(const o of et(this,Nn))fa(o);_i(this,qr,[]),_i(this,Nn,[])},vu=function(e){var u;e.f^=Rt;for(var t=e.first;t!==null;){var i=t.f,r=(i&(ur|Bn))!==0,a=r&&(i&Rt)!==0,o=a||(i&Di)!==0||this.skipped_effects.has(t);if(!o&&t.fn!==null){if(r)t.f^=Rt;else if((i&$o)!==0)et(this,nr).push(t);else if(Is(t))if((i&el)!==0){var s=(u=t.b)!=null&&u.pending?et(this,Nn):et(this,qr);s.push(t)}else(t.f&Sa)!==0&&et(this,jr).push(t),fa(t);var l=t.first;if(l!==null){t=l;continue}}var c=t.parent;for(t=t.next;t===null&&c!==null;)t=c.next,c=c.parent}},Ho=function(){if(!et(this,Ma))for(const e of et(this,zn))e();et(this,zn).clear()};let vs=Sl;function Td(){try{Kh()}catch(n){il(n,nl)}}function Rl(n){var e=n.length;if(e!==0){for(var t=0;t<e;t++){var i=n[t];if((i.f&(nn|Di))===0&&Is(i)){var r=xs;if(fa(i),i.deps===null&&i.first===null&&i.nodes_start===null&&(i.teardown===null?Lu(i):i.fn=null),xs>r&&(i.f&Qo)!==0)break}}for(;t<e;t+=1)Cr(n[t])}}function Cr(n){for(var e=nl=n;e.parent!==null;){e=e.parent;var t=e.f;if(Uo&&e===Ve&&(t&Sa)!==0)return;if((t&(Bn|ur))!==0){if((t&Rt)===0)return;e.f^=Rt}}ca.push(e)}const Yr=new Map;function ga(n,e){var t={f:0,v:n,reactions:null,equals:lu,rv:0,wv:0};return t}function kt(n,e){const t=ga(n);return Pu(t),t}function _u(n,e=!1,t=!0){var r;const i=ga(n);return e||(i.equals=uu),Un&&t&&gt!==null&&gt.l!==null&&((r=gt.l).s??(r.s=[])).push(i),i}function at(n,e,t=!1){We!==null&&(!Oi||(We.f&Ll)!==0)&&Hn()&&(We.f&(ci|Sa|el|Ll))!==0&&!(Xt!=null&&Xt.includes(n))&&id();let i=t?Sr(e):e;return va(n,i)}function va(n,e){if(!n.equals(e)){var t=n.v;an?Yr.set(n,e):Yr.set(n,t),n.v=e,vs.ensure().capture(n,t),(n.f&ci)!==0&&((n.f&li)!==0&&rl(n),Ot(n,(n.f&oi)===0?Rt:rn)),n.wv=Iu(),xu(n,li),Hn()&&Ve!==null&&(Ve.f&Rt)!==0&&(Ve.f&(ur|Bn))===0&&(bi===null?Nd([n]):bi.push(n))}return e}function Pl(n,e=1){var t=j(n),i=e===1?t++:t--;return at(n,t),i}function qs(n){at(n,n.v+1)}function xu(n,e){var t=n.reactions;if(t!==null)for(var i=Hn(),r=t.length,a=0;a<r;a++){var o=t[a],s=o.f;(s&li)===0&&(!i&&o===Ve||(Ot(o,e),(s&(Rt|oi))!==0&&((s&ci)!==0?xu(o,rn):Cr(o))))}}function Sr(n){if(typeof n!="object"||n===null||Ui in n)return n;const e=Zo(n);if(e!==Uh&&e!==Hh)return n;var t=new Map,i=Ss(n),r=kt(0),a=Zr,o=s=>{if(Zr===a)return s();var l=We,c=Zr;Gi(null),kl(a);var u=s();return Gi(l),kl(c),u};return i&&t.set("length",kt(n.length)),new Proxy(n,{defineProperty(s,l,c){(!("value"in c)||c.configurable===!1||c.enumerable===!1||c.writable===!1)&&ed();var u=t.get(l);return u===void 0?u=o(()=>{var d=kt(c.value);return t.set(l,d),d}):at(u,c.value,!0),!0},deleteProperty(s,l){var c=t.get(l);if(c===void 0){if(l in s){const u=o(()=>kt(Nt));t.set(l,u),qs(r)}}else at(c,Nt),qs(r);return!0},get(s,l,c){var m;if(l===Ui)return n;var u=t.get(l),d=l in s;if(u===void 0&&(!d||(m=Ar(s,l))!=null&&m.writable)&&(u=o(()=>{var g=Sr(d?s[l]:Nt),f=kt(g);return f}),t.set(l,u)),u!==void 0){var h=j(u);return h===Nt?void 0:h}return Reflect.get(s,l,c)},getOwnPropertyDescriptor(s,l){var c=Reflect.getOwnPropertyDescriptor(s,l);if(c&&"value"in c){var u=t.get(l);u&&(c.value=j(u))}else if(c===void 0){var d=t.get(l),h=d==null?void 0:d.v;if(d!==void 0&&h!==Nt)return{enumerable:!0,configurable:!0,value:h,writable:!0}}return c},has(s,l){var h;if(l===Ui)return!0;var c=t.get(l),u=c!==void 0&&c.v!==Nt||Reflect.has(s,l);if(c!==void 0||Ve!==null&&(!u||(h=Ar(s,l))!=null&&h.writable)){c===void 0&&(c=o(()=>{var m=u?Sr(s[l]):Nt,g=kt(m);return g}),t.set(l,c));var d=j(c);if(d===Nt)return!1}return u},set(s,l,c,u){var y;var d=t.get(l),h=l in s;if(i&&l==="length")for(var m=c;m<d.v;m+=1){var g=t.get(m+"");g!==void 0?at(g,Nt):m in s&&(g=o(()=>kt(Nt)),t.set(m+"",g))}if(d===void 0)(!h||(y=Ar(s,l))!=null&&y.writable)&&(d=o(()=>kt(void 0)),at(d,Sr(c)),t.set(l,d));else{h=d.v!==Nt;var f=o(()=>Sr(c));at(d,f)}var p=Reflect.getOwnPropertyDescriptor(s,l);if(p!=null&&p.set&&p.set.call(u,c),!h){if(i&&typeof l=="string"){var v=t.get("length"),_=Number(l);Number.isInteger(_)&&_>=v.v&&at(v,_+1)}qs(r)}return!0},ownKeys(s){j(r);var l=Reflect.ownKeys(s).filter(d=>{var h=t.get(d);return h===void 0||h.v!==Nt});for(var[c,u]of t)u.v!==Nt&&!(c in s)&&l.push(c);return l},setPrototypeOf(){td()}})}function Il(n){try{if(n!==null&&typeof n=="object"&&Ui in n)return n[Ui]}catch{}return n}function Ad(n,e){return Object.is(Il(n),Il(e))}var Fl,yu,bu,wu;function Cd(){if(Fl===void 0){Fl=window,yu=/Firefox/.test(navigator.userAgent);var n=Element.prototype,e=Node.prototype,t=Text.prototype;bu=Ar(e,"firstChild").get,wu=Ar(e,"nextSibling").get,Cl(n)&&(n.__click=void 0,n.__className=void 0,n.__attributes=null,n.__style=void 0,n.__e=void 0),Cl(t)&&(t.__t=void 0)}}function Gn(n=""){return document.createTextNode(n)}function kn(n){return bu.call(n)}function Ls(n){return wu.call(n)}function G(n,e){return kn(n)}function nt(n,e){{var t=kn(n);return t instanceof Comment&&t.data===""?Ls(t):t}}function K(n,e=1,t=!1){let i=n;for(;e--;)i=Ls(i);return i}function Ld(n){n.textContent=""}function Mu(){return!1}function Su(n){Ve===null&&We===null&&Jh(),We!==null&&(We.f&oi)!==0&&Ve===null&&$h(),an&&Zh()}function Dd(n,e){var t=e.last;t===null?e.last=e.first=n:(t.next=n,n.prev=t,e.last=n)}function Vi(n,e,t,i=!0){var r=Ve;r!==null&&(r.f&Di)!==0&&(n|=Di);var a={ctx:gt,deps:null,nodes_start:null,nodes_end:null,f:n|li,first:null,fn:e,last:null,next:null,parent:r,b:r&&r.b,prev:null,teardown:null,transitions:null,wv:0,ac:null};if(t)try{fa(a),a.f|=Jo}catch(l){throw Qt(a),l}else e!==null&&Cr(a);var o=t&&a.deps===null&&a.first===null&&a.nodes_start===null&&a.teardown===null&&(a.f&Ko)===0;if(!o&&i&&(r!==null&&Dd(a,r),We!==null&&(We.f&ci)!==0)){var s=We;(s.effects??(s.effects=[])).push(a)}return a}function al(n){const e=Vi(Es,null,!1);return Ot(e,Rt),e.teardown=n,e}function _s(n){Su();var e=Ve.f,t=!We&&(e&ur)!==0&&(e&Jo)===0;if(t){var i=gt;(i.e??(i.e=[])).push(n)}else return Eu(n)}function Eu(n){return Vi($o|Qo,n,!1)}function Rd(n){return Su(),Vi(Es|Qo,n,!0)}function Pd(n){vs.ensure();const e=Vi(Bn,n,!0);return(t={})=>new Promise(i=>{t.outro?Rs(e,()=>{Qt(e),i(void 0)}):(Qt(e),i(void 0))})}function Ds(n){return Vi($o,n,!1)}function Id(n){return Vi(el|Ko,n,!0)}function Tu(n,e=0){return Vi(Es|e,n,!0)}function Ze(n,e=[],t=[]){fu(e,t,i=>{Vi(Es,()=>n(...i.map(j)),!0)})}function Wn(n,e=0){var t=Vi(Sa|e,n,!0);return t}function lr(n,e=!0){return Vi(ur,n,!0,e)}function Au(n){var e=n.teardown;if(e!==null){const t=an,i=We;Nl(!0),Gi(null);try{e.call(null)}finally{Nl(t),Gi(i)}}}function Cu(n,e=!1){var r;var t=n.first;for(n.first=n.last=null;t!==null;){(r=t.ac)==null||r.abort(tl);var i=t.next;(t.f&Bn)!==0?t.parent=null:Qt(t,e),t=i}}function Fd(n){for(var e=n.first;e!==null;){var t=e.next;(e.f&ur)===0&&Qt(e),e=t}}function Qt(n,e=!0){var t=!1;(e||(n.f&qh)!==0)&&n.nodes_start!==null&&n.nodes_end!==null&&(zd(n.nodes_start,n.nodes_end),t=!0),Cu(n,e&&!t),ys(n,0),Ot(n,nn);var i=n.transitions;if(i!==null)for(const a of i)a.stop();Au(n);var r=n.parent;r!==null&&r.first!==null&&Lu(n),n.next=n.prev=n.teardown=n.ctx=n.deps=n.fn=n.nodes_start=n.nodes_end=n.ac=null}function zd(n,e){for(;n!==null;){var t=n===e?null:Ls(n);n.remove(),n=t}}function Lu(n){var e=n.parent,t=n.prev,i=n.next;t!==null&&(t.next=i),i!==null&&(i.prev=t),e!==null&&(e.first===n&&(e.first=i),e.last===n&&(e.last=t))}function Rs(n,e){var t=[];sl(n,t,!0),Du(t,()=>{Qt(n),e&&e()})}function Du(n,e){var t=n.length;if(t>0){var i=()=>--t||e();for(var r of n)r.out(i)}else e()}function sl(n,e,t){if((n.f&Di)===0){if(n.f^=Di,n.transitions!==null)for(const o of n.transitions)(o.is_global||t)&&e.push(o);for(var i=n.first;i!==null;){var r=i.next,a=(i.f&Ea)!==0||(i.f&ur)!==0;sl(i,e,a?t:!1),i=r}}}function Ps(n){Ru(n,!0)}function Ru(n,e){if((n.f&Di)!==0){n.f^=Di,(n.f&Rt)===0&&(Ot(n,li),Cr(n));for(var t=n.first;t!==null;){var i=t.next,r=(t.f&Ea)!==0||(t.f&ur)!==0;Ru(t,r?e:!1),t=i}if(n.transitions!==null)for(const a of n.transitions)(a.is_global||e)&&a.in()}}let Rn=!1;function zl(n){Rn=n}let an=!1;function Nl(n){an=n}let We=null,Oi=!1;function Gi(n){We=n}let Ve=null;function Dr(n){Ve=n}let Xt=null;function Pu(n){We!==null&&(Xt===null?Xt=[n]:Xt.push(n))}let qt=null,ni=0,bi=null;function Nd(n){bi=n}let xs=1,_a=0,Zr=_a;function kl(n){Zr=n}let Er=!1;function Iu(){return++xs}function Is(n){var d;var e=n.f;if((e&li)!==0)return!0;if((e&rn)!==0){var t=n.deps,i=(e&oi)!==0;if(t!==null){var r,a,o=(e&fs)!==0,s=i&&Ve!==null&&!Er,l=t.length;if((o||s)&&(Ve===null||(Ve.f&nn)===0)){var c=n,u=c.parent;for(r=0;r<l;r++)a=t[r],(o||!((d=a==null?void 0:a.reactions)!=null&&d.includes(c)))&&(a.reactions??(a.reactions=[])).push(c);o&&(c.f^=fs),s&&u!==null&&(u.f&oi)===0&&(c.f^=oi)}for(r=0;r<l;r++)if(a=t[r],Is(a)&&pu(a),a.wv>n.wv)return!0}(!i||Ve!==null&&!Er)&&Ot(n,Rt)}return!1}function Fu(n,e,t=!0){var i=n.reactions;if(i!==null&&!(Xt!=null&&Xt.includes(n)))for(var r=0;r<i.length;r++){var a=i[r];(a.f&ci)!==0?Fu(a,e,!1):e===a&&(t?Ot(a,li):(a.f&Rt)!==0&&Ot(a,rn),Cr(a))}}function zu(n){var g;var e=qt,t=ni,i=bi,r=We,a=Er,o=Xt,s=gt,l=Oi,c=Zr,u=n.f;qt=null,ni=0,bi=null,Er=(u&oi)!==0&&(Oi||!Rn||We===null),We=(u&(ur|Bn))===0?n:null,Xt=null,ms(n.ctx),Oi=!1,Zr=++_a,n.ac!==null&&(n.ac.abort(tl),n.ac=null);try{n.f|=Bo;var d=(0,n.fn)(),h=n.deps;if(qt!==null){var m;if(ys(n,ni),h!==null&&ni>0)for(h.length=ni+qt.length,m=0;m<qt.length;m++)h[ni+m]=qt[m];else n.deps=h=qt;if(!Er||(u&ci)!==0&&n.reactions!==null)for(m=ni;m<h.length;m++)((g=h[m]).reactions??(g.reactions=[])).push(n)}else h!==null&&ni<h.length&&(ys(n,ni),h.length=ni);if(Hn()&&bi!==null&&!Oi&&h!==null&&(n.f&(ci|rn|li))===0)for(m=0;m<bi.length;m++)Fu(bi[m],n);return r!==null&&r!==n&&(_a++,bi!==null&&(i===null?i=bi:i.push(...bi))),(n.f&Xr)!==0&&(n.f^=Xr),d}catch(f){return yd(f)}finally{n.f^=Bo,qt=e,ni=t,bi=i,We=r,Er=a,Xt=o,ms(s),Oi=l,Zr=c}}function kd(n,e){let t=e.reactions;if(t!==null){var i=Bh.call(t,n);if(i!==-1){var r=t.length-1;r===0?t=e.reactions=null:(t[i]=t[r],t.pop())}}t===null&&(e.f&ci)!==0&&(qt===null||!qt.includes(e))&&(Ot(e,rn),(e.f&(oi|fs))===0&&(e.f^=fs),du(e),ys(e,0))}function ys(n,e){var t=n.deps;if(t!==null)for(var i=e;i<t.length;i++)kd(n,t[i])}function fa(n){var e=n.f;if((e&nn)===0){Ot(n,Rt);var t=Ve,i=Rn;Ve=n,Rn=!0;try{(e&Sa)!==0?Fd(n):Cu(n),Au(n);var r=zu(n);n.teardown=typeof r=="function"?r:null,n.wv=xs;var a;iu&&vd&&(n.f&li)!==0&&n.deps}finally{Rn=i,Ve=t}}}function j(n){var e=n.f,t=(e&ci)!==0;if(We!==null&&!Oi){var i=Ve!==null&&(Ve.f&nn)!==0;if(!i&&!(Xt!=null&&Xt.includes(n))){var r=We.deps;if((We.f&Bo)!==0)n.rv<_a&&(n.rv=_a,qt===null&&r!==null&&r[ni]===n?ni++:qt===null?qt=[n]:(!Er||!qt.includes(n))&&qt.push(n));else{(We.deps??(We.deps=[])).push(n);var a=n.reactions;a===null?n.reactions=[We]:a.includes(We)||a.push(We)}}}else if(t&&n.deps===null&&n.effects===null){var o=n,s=o.parent;s!==null&&(s.f&oi)===0&&(o.f^=oi)}if(an){if(Yr.has(n))return Yr.get(n);if(t){o=n;var l=o.v;return((o.f&Rt)!==0||Nu(o))&&(l=rl(o)),Yr.set(o,l),l}}else if(t){if(o=n,Mr!=null&&Mr.has(o))return Mr.get(o);Is(o)&&pu(o)}if((n.f&Xr)!==0)throw n.v;return n.v}function Nu(n){if(n.v===Nt)return!0;if(n.deps===null)return!1;for(const e of n.deps)if(Yr.has(e)||(e.f&ci)!==0&&Nu(e))return!0;return!1}function ht(n){var e=Oi;try{return Oi=!0,n()}finally{Oi=e}}const Od=-7169;function Ot(n,e){n.f=n.f&Od|e}function Bd(n){if(!(typeof n!="object"||!n||n instanceof EventTarget)){if(Ui in n)Go(n);else if(!Array.isArray(n))for(let e in n){const t=n[e];typeof t=="object"&&t&&Ui in t&&Go(t)}}}function Go(n,e=new Set){if(typeof n=="object"&&n!==null&&!(n instanceof EventTarget)&&!e.has(n)){e.add(n),n instanceof Date&&n.getTime();for(let i in n)try{Go(n[i],e)}catch{}const t=Zo(n);if(t!==Object.prototype&&t!==Array.prototype&&t!==Map.prototype&&t!==Set.prototype&&t!==Date.prototype){const i=ru(t);for(let r in i){const a=i[r].get;if(a)try{a.call(n)}catch{}}}}}function Ud(n){return n.endsWith("capture")&&n!=="gotpointercapture"&&n!=="lostpointercapture"}const Hd=["beforeinput","click","change","dblclick","contextmenu","focusin","focusout","input","keydown","keyup","mousedown","mousemove","mouseout","mouseover","mouseup","pointerdown","pointermove","pointerout","pointerover","pointerup","touchend","touchmove","touchstart"];function Gd(n){return Hd.includes(n)}const Wd={formnovalidate:"formNoValidate",ismap:"isMap",nomodule:"noModule",playsinline:"playsInline",readonly:"readOnly",defaultvalue:"defaultValue",defaultchecked:"defaultChecked",srcobject:"srcObject",novalidate:"noValidate",allowfullscreen:"allowFullscreen",disablepictureinpicture:"disablePictureInPicture",disableremoteplayback:"disableRemotePlayback"};function Vd(n){return n=n.toLowerCase(),Wd[n]??n}const qd=["touchstart","touchmove"];function jd(n){return qd.includes(n)}function Xd(n,e){if(e){const t=document.body;n.autofocus=!0,Cs(()=>{document.activeElement===t&&n.focus()})}}let Ol=!1;function Yd(){Ol||(Ol=!0,document.addEventListener("reset",n=>{Promise.resolve().then(()=>{var e;if(!n.defaultPrevented)for(const t of n.target.elements)(e=t.__on_r)==null||e.call(t)})},{capture:!0}))}function ku(n){var e=We,t=Ve;Gi(null),Dr(null);try{return n()}finally{Gi(e),Dr(t)}}function Ou(n,e,t,i=t){n.addEventListener(e,()=>ku(t));const r=n.__on_r;r?n.__on_r=()=>{r(),i(!0)}:n.__on_r=()=>i(!0),Yd()}const Bu=new Set,Wo=new Set;function Uu(n,e,t,i={}){function r(a){if(i.capture||ua.call(e,a),!a.cancelBubble)return ku(()=>t==null?void 0:t.call(this,a))}return n.startsWith("pointer")||n.startsWith("touch")||n==="wheel"?Cs(()=>{e.addEventListener(n,r,i)}):e.addEventListener(n,r,i),r}function tt(n,e,t,i,r){var a={capture:i,passive:r},o=Uu(n,e,t,a);(e===document.body||e===window||e===document||e instanceof HTMLMediaElement)&&al(()=>{e.removeEventListener(n,o,a)})}function vt(n){for(var e=0;e<n.length;e++)Bu.add(n[e]);for(var t of Wo)t(n)}function ua(n){var _;var e=this,t=e.ownerDocument,i=n.type,r=((_=n.composedPath)==null?void 0:_.call(n))||[],a=r[0]||n.target,o=0,s=n.__root;if(s){var l=r.indexOf(s);if(l!==-1&&(e===document||e===window)){n.__root=e;return}var c=r.indexOf(e);if(c===-1)return;l<=c&&(o=l)}if(a=r[o]||n.target,a!==e){ds(n,"currentTarget",{configurable:!0,get(){return a||t}});var u=We,d=Ve;Gi(null),Dr(null);try{for(var h,m=[];a!==null;){var g=a.assignedSlot||a.parentNode||a.host||null;try{var f=a["__"+i];if(f!=null&&(!a.disabled||n.target===a))if(Ss(f)){var[p,...v]=f;p.apply(a,[n,...v])}else f.call(a,n)}catch(y){h?m.push(y):h=y}if(n.cancelBubble||g===e||g===null)break;a=g}if(h){for(let y of m)queueMicrotask(()=>{throw y});throw h}}finally{n.__root=e,delete n.currentTarget,Gi(u),Dr(d)}}}function Hu(n){var e=document.createElement("template");return e.innerHTML=n.replaceAll("<!>","<!---->"),e.content}function xa(n,e){var t=Ve;t.nodes_start===null&&(t.nodes_start=n,t.nodes_end=e)}function de(n,e){var t=(e&ud)!==0,i=(e&hd)!==0,r,a=!n.startsWith("<!>");return()=>{r===void 0&&(r=Hu(a?n:"<!>"+n),t||(r=kn(r)));var o=i||yu?document.importNode(r,!0):r.cloneNode(!0);if(t){var s=kn(o),l=o.lastChild;xa(s,l)}else xa(o,o);return o}}function Zd(n,e,t="svg"){var i=!n.startsWith("<!>"),r=`<${t}>${i?n:"<!>"+n}</${t}>`,a;return()=>{if(!a){var o=Hu(r),s=kn(o);a=kn(s)}var l=a.cloneNode(!0);return xa(l,l),l}}function $d(n,e){return Zd(n,e,"svg")}function st(){var n=document.createDocumentFragment(),e=document.createComment(""),t=Gn();return n.append(e,t),xa(e,t),n}function re(n,e){n!==null&&n.before(e)}function Ie(n,e){var t=e==null?"":typeof e=="object"?e+"":e;t!==(n.__t??(n.__t=n.nodeValue))&&(n.__t=t,n.nodeValue=t+"")}function Jd(n,e){return Kd(n,e)}const hn=new Map;function Kd(n,{target:e,anchor:t,props:i={},events:r,context:a,intro:o=!0}){Cd();var s=new Set,l=d=>{for(var h=0;h<d.length;h++){var m=d[h];if(!s.has(m)){s.add(m);var g=jd(m);e.addEventListener(m,ua,{passive:g});var f=hn.get(m);f===void 0?(document.addEventListener(m,ua,{passive:g}),hn.set(m,1)):hn.set(m,f+1)}}};l(Yo(Bu)),Wo.add(l);var c=void 0,u=Pd(()=>{var d=t??e.appendChild(Gn());return lr(()=>{if(a){Ne({});var h=gt;h.c=a}r&&(i.$$events=r),c=n(d,i)||{},a&&ke()}),()=>{var g;for(var h of s){e.removeEventListener(h,ua);var m=hn.get(h);--m===0?(document.removeEventListener(h,ua),hn.delete(h)):hn.set(h,m)}Wo.delete(l),d!==t&&((g=d.parentNode)==null||g.removeChild(d))}});return Qd.set(c,u),c}let Qd=new WeakMap;function Ge(n,e,t=!1){var i=n,r=null,a=null,o=Nt,s=t?Ea:0,l=!1;const c=(m,g=!0)=>{l=!0,h(g,m)};var u=null;function d(){u!==null&&(u.lastChild.remove(),i.before(u),u=null);var m=o?r:a,g=o?a:r;m&&Ps(m),g&&Rs(g,()=>{o?a=null:r=null})}const h=(m,g)=>{if(o!==(o=m)){var f=Mu(),p=i;if(f&&(u=document.createDocumentFragment(),u.append(p=Gn())),o?r??(r=g&&lr(()=>g(p))):a??(a=g&&lr(()=>g(p))),f){var v=Dt,_=o?r:a,y=o?a:r;_&&v.skipped_effects.delete(_),y&&v.skipped_effects.add(y),v.add_callback(d)}else d()}};Wn(()=>{l=!1,e(c),l||h(null,null)},s)}function ol(n,e){return e}function ep(n,e,t){for(var i=n.items,r=[],a=e.length,o=0;o<a;o++)sl(e[o].e,r,!0);var s=a>0&&r.length===0&&t!==null;if(s){var l=t.parentNode;Ld(l),l.append(t),i.clear(),Ni(n,e[0].prev,e[a-1].next)}Du(r,()=>{for(var c=0;c<a;c++){var u=e[c];s||(i.delete(u.k),Ni(n,u.prev,u.next)),Qt(u.e,!s)}})}function Pr(n,e,t,i,r,a=null){var o=n,s={flags:e,items:new Map,first:null},l=(e&ou)!==0;if(l){var c=n;o=c.appendChild(Gn())}var u=null,d=!1,h=new Map,m=Ae(()=>{var v=t();return Ss(v)?v:v==null?[]:Yo(v)}),g,f;function p(){tp(f,g,s,h,o,r,e,i,t),a!==null&&(g.length===0?u?Ps(u):u=lr(()=>a(o)):u!==null&&Rs(u,()=>{u=null}))}Wn(()=>{f??(f=Ve),g=j(m);var v=g.length;if(!(d&&v===0)){d=v===0;var _,y,x,w;if(Mu()){var S=new Set,T=Dt;for(y=0;y<v;y+=1){x=g[y],w=i(x,y);var b=s.items.get(w)??h.get(w);b?(e&(Ts|As))!==0&&Gu(b,x,y,e):(_=Wu(null,s,null,null,x,w,y,r,e,t,!0),h.set(w,_)),S.add(w)}for(const[E,D]of s.items)S.has(E)||T.skipped_effects.add(D.e);T.add_callback(p)}else p();j(m)}})}function tp(n,e,t,i,r,a,o,s,l){var k,V,ie,U;var c=(o&rd)!==0,u=(o&(Ts|As))!==0,d=e.length,h=t.items,m=t.first,g=m,f,p=null,v,_=[],y=[],x,w,S,T;if(c)for(T=0;T<d;T+=1)x=e[T],w=s(x,T),S=h.get(w),S!==void 0&&((k=S.a)==null||k.measure(),(v??(v=new Set)).add(S));for(T=0;T<d;T+=1){if(x=e[T],w=s(x,T),S=h.get(w),S===void 0){var b=i.get(w);if(b!==void 0){i.delete(w),h.set(w,b);var E=p?p.next:g;Ni(t,p,b),Ni(t,b,E),js(b,E,r),p=b}else{var D=g?g.e.nodes_start:r;p=Wu(D,t,p,p===null?t.first:p.next,x,w,T,a,o,l)}h.set(w,p),_=[],y=[],g=p.next;continue}if(u&&Gu(S,x,T,o),(S.e.f&Di)!==0&&(Ps(S.e),c&&((V=S.a)==null||V.unfix(),(v??(v=new Set)).delete(S))),S!==g){if(f!==void 0&&f.has(S)){if(_.length<y.length){var I=y[0],N;p=I.prev;var z=_[0],L=_[_.length-1];for(N=0;N<_.length;N+=1)js(_[N],I,r);for(N=0;N<y.length;N+=1)f.delete(y[N]);Ni(t,z.prev,L.next),Ni(t,p,z),Ni(t,L,I),g=I,p=L,T-=1,_=[],y=[]}else f.delete(S),js(S,g,r),Ni(t,S.prev,S.next),Ni(t,S,p===null?t.first:p.next),Ni(t,p,S),p=S;continue}for(_=[],y=[];g!==null&&g.k!==w;)(g.e.f&Di)===0&&(f??(f=new Set)).add(g),y.push(g),g=g.next;if(g===null)continue;S=g}_.push(S),p=S,g=S.next}if(g!==null||f!==void 0){for(var P=f===void 0?[]:Yo(f);g!==null;)(g.e.f&Di)===0&&P.push(g),g=g.next;var F=P.length;if(F>0){var H=(o&ou)!==0&&d===0?r:null;if(c){for(T=0;T<F;T+=1)(ie=P[T].a)==null||ie.measure();for(T=0;T<F;T+=1)(U=P[T].a)==null||U.fix()}ep(t,P,H)}}c&&Cs(()=>{var te;if(v!==void 0)for(S of v)(te=S.a)==null||te.apply()}),n.first=t.first&&t.first.e,n.last=p&&p.e;for(var X of i.values())Qt(X.e);i.clear()}function Gu(n,e,t,i){(i&Ts)!==0&&va(n.v,e),(i&As)!==0?va(n.i,t):n.i=t}function Wu(n,e,t,i,r,a,o,s,l,c,u){var d=(l&Ts)!==0,h=(l&nd)===0,m=d?h?_u(r,!1,!1):ga(r):r,g=(l&As)===0?o:ga(o),f={i:g,v:m,k:a,a:null,e:null,prev:t,next:i};try{if(n===null){var p=document.createDocumentFragment();p.append(n=Gn())}return f.e=lr(()=>s(n,m,g,c),gd),f.e.prev=t&&t.e,f.e.next=i&&i.e,t===null?u||(e.first=f):(t.next=f,t.e.next=f.e),i!==null&&(i.prev=f,i.e.prev=f.e),f}finally{}}function js(n,e,t){for(var i=n.next?n.next.e.nodes_start:t,r=e?e.e.nodes_start:t,a=n.e.nodes_start;a!==null&&a!==i;){var o=Ls(a);r.before(a),a=o}}function Ni(n,e,t){e===null?n.first=t:(e.next=t,e.e.next=t&&t.e),t!==null&&(t.prev=e,t.e.prev=e&&e.e)}function sn(n,e,...t){var i=n,r=jt,a;Wn(()=>{r!==(r=e())&&(a&&(Qt(a),a=null),a=lr(()=>r(i,...t)))},Ea)}function ip(n,e,t,i,r,a){var o,s,l=null,c=n,u;Wn(()=>{const d=e()||null;var h=pd;d!==o&&(u&&(d===null?Rs(u,()=>{u=null,s=null}):d===s?Ps(u):Qt(u)),d&&d!==s&&(u=lr(()=>{if(l=document.createElementNS(h,d),xa(l,l),i){var m=l.appendChild(Gn());i(l,m)}Ve.nodes_end=l,c.before(l)})),o=d,o&&(s=o))},Ea)}function rp(n,e){var t=void 0,i;Wn(()=>{t!==(t=e())&&(i&&(Qt(i),i=null),t&&(i=lr(()=>{Ds(()=>t(n))})))})}function Vu(n){var e,t,i="";if(typeof n=="string"||typeof n=="number")i+=n;else if(typeof n=="object")if(Array.isArray(n)){var r=n.length;for(e=0;e<r;e++)n[e]&&(t=Vu(n[e]))&&(i&&(i+=" "),i+=t)}else for(t in n)n[t]&&(i&&(i+=" "),i+=t);return i}function np(){for(var n,e,t=0,i="",r=arguments.length;t<r;t++)(n=arguments[t])&&(e=Vu(n))&&(i&&(i+=" "),i+=e);return i}function Pn(n){return typeof n=="object"?np(n):n??""}const Bl=[...` 	
\r\f \v\uFEFF`];function ap(n,e,t){var i=n==null?"":""+n;if(e&&(i=i?i+" "+e:e),t){for(var r in t)if(t[r])i=i?i+" "+r:r;else if(i.length)for(var a=r.length,o=0;(o=i.indexOf(r,o))>=0;){var s=o+a;(o===0||Bl.includes(i[o-1]))&&(s===i.length||Bl.includes(i[s]))?i=(o===0?"":i.substring(0,o))+i.substring(s+1):o=s}}return i===""?null:i}function Ul(n,e=!1){var t=e?" !important;":";",i="";for(var r in n){var a=n[r];a!=null&&a!==""&&(i+=" "+r+": "+a+t)}return i}function Xs(n){return n[0]!=="-"||n[1]!=="-"?n.toLowerCase():n}function sp(n,e){if(e){var t="",i,r;if(Array.isArray(e)?(i=e[0],r=e[1]):i=e,n){n=String(n).replaceAll(/\s*\/\*.*?\*\/\s*/g,"").trim();var a=!1,o=0,s=!1,l=[];i&&l.push(...Object.keys(i).map(Xs)),r&&l.push(...Object.keys(r).map(Xs));var c=0,u=-1;const f=n.length;for(var d=0;d<f;d++){var h=n[d];if(s?h==="/"&&n[d-1]==="*"&&(s=!1):a?a===h&&(a=!1):h==="/"&&n[d+1]==="*"?s=!0:h==='"'||h==="'"?a=h:h==="("?o++:h===")"&&o--,!s&&a===!1&&o===0){if(h===":"&&u===-1)u=d;else if(h===";"||d===f-1){if(u!==-1){var m=Xs(n.substring(c,u).trim());if(!l.includes(m)){h!==";"&&d++;var g=n.substring(c,d).trim();t+=" "+g+";"}}c=d+1,u=-1}}}}return i&&(t+=Ul(i)),r&&(t+=Ul(r,!0)),t=t.trim(),t===""?null:t}return n==null?null:String(n)}function Lr(n,e,t,i,r,a){var o=n.__className;if(o!==t||o===void 0){var s=ap(t,i,a);s==null?n.removeAttribute("class"):e?n.className=s:n.setAttribute("class",s),n.__className=t}else if(a&&r!==a)for(var l in a){var c=!!a[l];(r==null||c!==!!r[l])&&n.classList.toggle(l,c)}return a}function Ys(n,e={},t,i){for(var r in t){var a=t[r];e[r]!==a&&(t[r]==null?n.style.removeProperty(r):n.style.setProperty(r,a,i))}}function ll(n,e,t,i){var r=n.__style;if(r!==e){var a=sp(e,i);a==null?n.removeAttribute("style"):n.style.cssText=a,n.__style=e}else i&&(Array.isArray(i)?(Ys(n,t==null?void 0:t[0],i[0]),Ys(n,t==null?void 0:t[1],i[1],"important")):Ys(n,t,i));return i}function bs(n,e,t=!1){if(n.multiple){if(e==null)return;if(!Ss(e))return md();for(var i of n.options)i.selected=e.includes(ma(i));return}for(i of n.options){var r=ma(i);if(Ad(r,e)){i.selected=!0;return}}(!t||e!==void 0)&&(n.selectedIndex=-1)}function qu(n){var e=new MutationObserver(()=>{bs(n,n.__value)});e.observe(n,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["value"]}),al(()=>{e.disconnect()})}function op(n,e,t=e){var i=!0;Ou(n,"change",r=>{var a=r?"[selected]":":checked",o;if(n.multiple)o=[].map.call(n.querySelectorAll(a),ma);else{var s=n.querySelector(a)??n.querySelector("option:not([disabled])");o=s&&ma(s)}t(o)}),Ds(()=>{var r=e();if(bs(n,r,i),i&&r===void 0){var a=n.querySelector(":checked");a!==null&&(r=ma(a),t(r))}n.__value=r,i=!1}),qu(n)}function ma(n){return"__value"in n?n.__value:n.value}const Qn=Symbol("class"),ea=Symbol("style"),ju=Symbol("is custom element"),Xu=Symbol("is html");function Yt(n,e){var t=cl(n);t.value===(t.value=e??void 0)||n.value===e&&(e!==0||n.nodeName!=="PROGRESS")||(n.value=e??"")}function lp(n,e){e?n.hasAttribute("selected")||n.setAttribute("selected",""):n.removeAttribute("selected")}function De(n,e,t,i){var r=cl(n);r[e]!==(r[e]=t)&&(e==="loading"&&(n[jh]=t),t==null?n.removeAttribute(e):typeof t!="string"&&Yu(n).includes(e)?n[e]=t:n.setAttribute(e,t))}function cp(n,e,t,i,r=!1){var a=cl(n),o=a[ju],s=!a[Xu],l=e||{},c=n.tagName==="OPTION";for(var u in e)u in t||(t[u]=null);t.class?t.class=Pn(t.class):t[Qn]&&(t.class=null),t[ea]&&(t.style??(t.style=null));var d=Yu(n);for(const y in t){let x=t[y];if(c&&y==="value"&&x==null){n.value=n.__value="",l[y]=x;continue}if(y==="class"){var h=n.namespaceURI==="http://www.w3.org/1999/xhtml";Lr(n,h,x,i,e==null?void 0:e[Qn],t[Qn]),l[y]=x,l[Qn]=t[Qn];continue}if(y==="style"){ll(n,x,e==null?void 0:e[ea],t[ea]),l[y]=x,l[ea]=t[ea];continue}var m=l[y];if(!(x===m&&!(x===void 0&&n.hasAttribute(y)))){l[y]=x;var g=y[0]+y[1];if(g!=="$$")if(g==="on"){const w={},S="$$"+y;let T=y.slice(2);var f=Gd(T);if(Ud(T)&&(T=T.slice(0,-7),w.capture=!0),!f&&m){if(x!=null)continue;n.removeEventListener(T,l[S],w),l[S]=null}if(x!=null)if(f)n[`__${T}`]=x,vt([T]);else{let b=function(E){l[y].call(this,E)};var _=b;l[S]=Uu(T,n,b,w)}else f&&(n[`__${T}`]=void 0)}else if(y==="style")De(n,y,x);else if(y==="autofocus")Xd(n,!!x);else if(!o&&(y==="__value"||y==="value"&&x!=null))n.value=n.__value=x;else if(y==="selected"&&c)lp(n,x);else{var p=y;s||(p=Vd(p));var v=p==="defaultValue"||p==="defaultChecked";if(x==null&&!o&&!v)if(a[y]=null,p==="value"||p==="checked"){let w=n;const S=e===void 0;if(p==="value"){let T=w.defaultValue;w.removeAttribute(p),w.defaultValue=T,w.value=w.__value=S?T:null}else{let T=w.defaultChecked;w.removeAttribute(p),w.defaultChecked=T,w.checked=S?T:!1}}else n.removeAttribute(y);else v||d.includes(p)&&(o||typeof x!="string")?n[p]=x:typeof x!="function"&&De(n,p,x)}}}return l}function Hl(n,e,t=[],i=[],r,a=!1){fu(t,i,o=>{var s=void 0,l={},c=n.nodeName==="SELECT",u=!1;if(Wn(()=>{var h=e(...o.map(j)),m=cp(n,s,h,r,a);u&&c&&"value"in h&&bs(n,h.value);for(let f of Object.getOwnPropertySymbols(l))h[f]||Qt(l[f]);for(let f of Object.getOwnPropertySymbols(h)){var g=h[f];f.description===fd&&(!s||g!==s[f])&&(l[f]&&Qt(l[f]),l[f]=lr(()=>rp(n,()=>g))),m[f]=g}s=m}),c){var d=n;Ds(()=>{bs(d,s.value,!0),qu(d)})}u=!0})}function cl(n){return n.__attributes??(n.__attributes={[ju]:n.nodeName.includes("-"),[Xu]:n.namespaceURI===dd})}var Gl=new Map;function Yu(n){var e=Gl.get(n.nodeName);if(e)return e;Gl.set(n.nodeName,e=[]);for(var t,i=n,r=Element.prototype;r!==i;){t=ru(i);for(var a in t)t[a].set&&e.push(a);i=Zo(i)}return e}function Vn(n,e,t=e){var i=Hn(),r=new WeakSet;Ou(n,"input",a=>{var o=a?n.defaultValue:n.value;if(o=Zs(n)?$s(o):o,t(o),Dt!==null&&r.add(Dt),i&&o!==(o=e())){var s=n.selectionStart,l=n.selectionEnd;n.value=o??"",l!==null&&(n.selectionStart=s,n.selectionEnd=Math.min(l,n.value.length))}}),ht(e)==null&&n.value&&(t(Zs(n)?$s(n.value):n.value),Dt!==null&&r.add(Dt)),Tu(()=>{var a=e();n===document.activeElement&&r.has(Dt)||Zs(n)&&a===$s(n.value)||n.type==="date"&&!a&&!n.value||a!==n.value&&(n.value=a??"")})}function Zs(n){var e=n.type;return e==="number"||e==="range"}function $s(n){return n===""?null:+n}function Wl(n,e){return n===e||(n==null?void 0:n[Ui])===e}function ul(n={},e,t,i){return Ds(()=>{var r,a;return Tu(()=>{r=a,a=[],ht(()=>{n!==t(...a)&&(e(n,...a),r&&Wl(t(...r),n)&&e(null,...r))})}),()=>{Cs(()=>{a&&Wl(t(...a),n)&&e(null,...a)})}}),n}function hi(n=!1){const e=gt,t=e.l.u;if(!t)return;let i=()=>Bd(e.s);if(n){let r=0,a={};const o=Ta(()=>{let s=!1;const l=e.s;for(const c in l)l[c]!==a[c]&&(a[c]=l[c],s=!0);return s&&r++,r});i=()=>j(o)}t.b.length&&Rd(()=>{Vl(e,i),ps(t.b)}),_s(()=>{const r=ht(()=>t.m.map(Gh));return()=>{for(const a of r)typeof a=="function"&&a()}}),t.a.length&&_s(()=>{Vl(e,i),ps(t.a)})}function Vl(n,e){if(n.l.s)for(const t of n.l.s)j(t);e()}function hl(n,e,t){if(n==null)return e(void 0),t&&t(void 0),jt;const i=ht(()=>n.subscribe(e,t));return i.unsubscribe?()=>i.unsubscribe():i}const dn=[];function up(n,e){return{subscribe:Ri(n,e).subscribe}}function Ri(n,e=jt){let t=null;const i=new Set;function r(s){if(cu(n,s)&&(n=s,t)){const l=!dn.length;for(const c of i)c[1](),dn.push(c,n);if(l){for(let c=0;c<dn.length;c+=2)dn[c][0](dn[c+1]);dn.length=0}}}function a(s){r(s(n))}function o(s,l=jt){const c=[s,l];return i.add(c),i.size===1&&(t=e(r,a)||jt),s(n),()=>{i.delete(c),i.size===0&&t&&(t(),t=null)}}return{set:r,update:a,subscribe:o}}function hp(n,e,t){const i=!Array.isArray(n),r=i?[n]:n;if(!r.every(Boolean))throw new Error("derived() expects stores as input, got a falsy value");const a=e.length<2;return up(t,(o,s)=>{let l=!1;const c=[];let u=0,d=jt;const h=()=>{if(u)return;d();const g=e(i?c[0]:c,o,s);a?o(g):d=typeof g=="function"?g:jt},m=r.map((g,f)=>hl(g,p=>{c[f]=p,u&=~(1<<f),l&&h()},()=>{u|=1<<f}));return l=!0,h(),function(){ps(m),d(),l=!1}})}function Pt(n){let e;return hl(n,t=>e=t)(),e}let ka=!1,Vo=Symbol();function Ce(n,e,t){const i=t[e]??(t[e]={store:null,source:_u(void 0),unsubscribe:jt});if(i.store!==n&&!(Vo in t))if(i.unsubscribe(),i.store=n??null,n==null)i.source.v=void 0,i.unsubscribe=jt;else{var r=!0;i.unsubscribe=hl(n,a=>{r?i.source.v=a:at(i.source,a)}),r=!1}return n&&Vo in t?Pt(n):j(i.source)}function ha(n,e){return n.set(e),e}function dt(){const n={};function e(){al(()=>{for(var t in n)n[t].unsubscribe();ds(n,Vo,{enumerable:!1,value:!0})})}return[n,e]}function Ir(n,e,t){return n.set(t),e}function dp(n){var e=ka;try{return ka=!1,[n(),ka]}finally{ka=e}}const pp={get(n,e){if(!n.exclude.includes(e))return n.props[e]},set(n,e){return!1},getOwnPropertyDescriptor(n,e){if(!n.exclude.includes(e)&&e in n.props)return{enumerable:!0,configurable:!0,value:n.props[e]}},has(n,e){return n.exclude.includes(e)?!1:e in n.props},ownKeys(n){return Reflect.ownKeys(n.props).filter(e=>!n.exclude.includes(e))}};function qn(n,e,t){return new Proxy({props:n,exclude:e},pp)}const fp={get(n,e){let t=n.props.length;for(;t--;){let i=n.props[t];if(Kn(i)&&(i=i()),typeof i=="object"&&i!==null&&e in i)return i[e]}},set(n,e,t){let i=n.props.length;for(;i--;){let r=n.props[i];Kn(r)&&(r=r());const a=Ar(r,e);if(a&&a.set)return a.set(t),!0}return!1},getOwnPropertyDescriptor(n,e){let t=n.props.length;for(;t--;){let i=n.props[t];if(Kn(i)&&(i=i()),typeof i=="object"&&i!==null&&e in i){const r=Ar(i,e);return r&&!r.configurable&&(r.configurable=!0),r}}},has(n,e){if(e===Ui||e===au)return!1;for(let t of n.props)if(Kn(t)&&(t=t()),t!=null&&e in t)return!0;return!1},ownKeys(n){const e=[];for(let t of n.props)if(Kn(t)&&(t=t()),!!t){for(const i in t)e.includes(i)||e.push(i);for(const i of Object.getOwnPropertySymbols(t))e.includes(i)||e.push(i)}return e}};function Aa(...n){return new Proxy({props:n},fp)}function ar(n,e,t,i){var y;var r=!Un||(t&sd)!==0,a=(t&ld)!==0,o=(t&cd)!==0,s=i,l=!0,c=()=>(l&&(l=!1,s=o?ht(i):i),s),u;if(a){var d=Ui in n||au in n;u=((y=Ar(n,e))==null?void 0:y.set)??(d&&e in n?x=>n[e]=x:void 0)}var h,m=!1;a?[h,m]=dp(()=>n[e]):h=n[e],h===void 0&&i!==void 0&&(h=c(),u&&(r&&Qh(),u(h)));var g;if(r?g=()=>{var x=n[e];return x===void 0?c():(l=!0,x)}:g=()=>{var x=n[e];return x!==void 0&&(s=void 0),x===void 0?s:x},r&&(t&od)===0)return g;if(u){var f=n.$$legacy;return function(x,w){return arguments.length>0?((!r||!w||f||m)&&u(w?g():x),x):g()}}var p=!1,v=((t&ad)!==0?Ta:Ae)(()=>(p=!1,g()));a&&j(v);var _=Ve;return function(x,w){if(arguments.length>0){const S=w?j(v):r&&a?Sr(x):x;return at(v,S),p=!0,s!==void 0&&(s=S),x}return an&&p||(_.f&nn)!==0?v.v:j(v)}}function qi(n){gt===null&&su(),Un&&gt.l!==null?mp(gt).m.push(n):_s(()=>{const e=ht(n);if(typeof e=="function")return e})}function Zu(n){gt===null&&su(),qi(()=>()=>ht(n))}function mp(n){var e=n.l;return e.u??(e.u={a:[],b:[],m:[]})}const gp="5";var tu;typeof window<"u"&&((tu=window.__svelte??(window.__svelte={})).v??(tu.v=new Set)).add(gp);_d();const zt=[];for(let n=0;n<256;++n)zt.push((n+256).toString(16).slice(1));function vp(n,e=0){return(zt[n[e+0]]+zt[n[e+1]]+zt[n[e+2]]+zt[n[e+3]]+"-"+zt[n[e+4]]+zt[n[e+5]]+"-"+zt[n[e+6]]+zt[n[e+7]]+"-"+zt[n[e+8]]+zt[n[e+9]]+"-"+zt[n[e+10]]+zt[n[e+11]]+zt[n[e+12]]+zt[n[e+13]]+zt[n[e+14]]+zt[n[e+15]]).toLowerCase()}let Js;const _p=new Uint8Array(16);function xp(){if(!Js){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");Js=crypto.getRandomValues.bind(crypto)}return Js(_p)}const yp=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),ql={randomUUID:yp};function Fs(n,e,t){var r;if(ql.randomUUID&&!n)return ql.randomUUID();n=n||{};const i=n.random??((r=n.rng)==null?void 0:r.call(n))??xp();if(i.length<16)throw new Error("Random bytes length must be >= 16");return i[6]=i[6]&15|64,i[8]=i[8]&63|128,vp(i)}const zs="myapp_character_";function bp(n){localStorage.setItem(zs+n.id,JSON.stringify(n))}function wp(n){localStorage.removeItem(zs+n)}function Mp(n){const e=localStorage.getItem(zs+n);return e?JSON.parse(e):null}function Sp(){const n=Object.keys(localStorage),e=[];for(const t of n)if(t.startsWith(zs)){const i=localStorage.getItem(t);i&&e.push(JSON.parse(i))}return e}function Ep(){return Sp().map(e=>({id:e.id,name:e.name,race:e.info.race,charClass:e.info.charClass,level:e.info.level,bg:e.bg,portrait:e.portrait}))}const or=Ri({level:{lv0:0,lv1:0,lv2:0,lv3:0,lv4:0,lv5:0,lv6:0,lv7:0,lv8:0,lv9:0},known:[]}),Mi=Ri({weapons:[],items:[]}),dl=Ri({isDeleteMode:!1});function Tp(n){dl.set({isDeleteMode:n})}const Ee=Ri({id:"",name:"",portrait:"https://i.imgur.com/35Rt7n0.png",bg:"https://i.imgur.com/vGsKDFx.jpeg",attr:{str:{value:10,isPrimary:!1},dex:{value:10,isPrimary:!1},con:{value:10,isPrimary:!1},int:{value:10,isPrimary:!1},wis:{value:10,isPrimary:!1},cha:{value:10,isPrimary:!1}},ac:{head:0,main:10},hp:{current:1,max:1,temp:0},stats:{init:0,speed:"30ft",bth:0},info:{charClass:"",race:"",disposition:"",level:1,xp:0,nextLevel:0,languages:"Common"},armor:{helm:"",main:"",shield:"",magicalItem:""},treasure:{platinum:0,gold:0,silver:0,copper:0},encumbrance:{total:0,rating:0,enc3x:0},tracking:{water:0,food:0,arrows:0,torches:0,conditions:""},notes:""}),$u=Ri([]);function Ap(){$u.set(Ep())}function Oe(){Pt(Ee).id&&(bp({...Pt(Ee),spells:{...Pt(or)},weapons:[...Pt(Mi).weapons],items:[...Pt(Mi).items]}),ot(!1))}function Ks(n){ot();const e=n.target;Ee.update(r=>({...r,name:e.value})),Ju(),new URL(window.location.href).searchParams.get("char")||Lp(),Oe(),pl.set({hasUnsavedChanges:!1})}function Cp(){const e=new URL(window.location.href).searchParams.get("char");if(e){const t=Mp(e);Ee.set({...t}),or.set({...t.spells}),Mi.set({items:[...t.items],weapons:[...t.weapons]}),Ju()}}function Lp(){Ee.update(e=>({...e,id:Fs()}));const n=new URLSearchParams(window.location.search);Pt(Ee).id?n.set("char",Pt(Ee).id):n.delete("char"),window.history.replaceState({},"",`${window.location.pathname}?${n}`)}function Ju(){document.title=Pt(Ee).name?`C&C: ${Pt(Ee).name}`:"Castles & Crusades"}const pl=Ri({hasUnsavedChanges:!1});function ot(n){Pt(Ee).name||pl.set({hasUnsavedChanges:n??!0})}function jl(n){Pt(pl).hasUnsavedChanges&&(n.preventDefault(),n.returnValue="")}function xe(n){n.target.select()}const Dp={en:{brand:"Castles & Crusades",title:"Castles & Crusades character sheet",newCharacterBtn:"New Character Sheet",saveBtn:"Save",namePlaceholder:"Character Name",classInput:"Class",raceInput:"Race",dispositionInput:"Disposition",dwarf:"Dwarf",elf:"Elf",gnome:"Gnome",halfling:"Halfling",human:"Human",halfElf:"Half-Elf",halfOrc:"Half-Orc",assassin:"Assassin",barbarian:"Barbarian",bard:"Bard",cleric:"Cleric",druid:"Druid",fighter:"Fighter",knight:"Knight",illusionist:"Illusionist",paladin:"Paladin",ranger:"Ranger",rogue:"Rogue",monk:"Monk",wizard:"Wizard",lawfulGood:"Lawful Good",neutralGood:"Neutral Good",chaoticGood:"Chaotic Good",lawfulNeutral:"Lawful Neutral",trueNeutral:"True Neutral",chaoticNeutral:"Chaotic Neutral",lawfulEvil:"Lawful Evil",neutralEvil:"Neutral Evil",chaoticEvil:"Chaotic Evil",levelInput:"Level",level:"Lv",nextLevelInput:"Next Level",str:"Strength",dex:"Dexterity",con:"Constitution",int:"Intelligence",wis:"Wisdom",cha:"Charisma",strDesc:"Paralysis & Constriction",dexDesc:"Breath weapon & Traps",conDesc:"Disease, Energy drain & Poison",intDesc:"Arcane magic & Illusion",wisDesc:"Death attack, charm & fear",chaDesc:"Confusion, divine magic, gaze attack & polymorph",acHead:"Head",acMain:"AC",hpMax:"Max. HP",hpCurrent:"Current HP",hpTemp:"Temp. HP",init:"Init.",speed:"Speed",bth:"BTH",armors:"Armors",magicalItem:"Magical Item",equipments:"Equipments",equipment:"Equipment",helm:"Helm",shield:"Shield",armor:"Armor",weapons:"Weapons",columnName:"Name",damage:"dmg",inventory:"Inventory",name:"Name",quantity:"Qty",ev:"EV",spells:"Spells",notes:"Notes",treasure:"Treasure",platinum:"Platinum",gold:"Gold",silver:"Silver",copper:"Copper",encumbrance:"Encumbrance",rating:"Rating",enburdened:"Enburdened",enburdenedDesc:"-10 ft (minimum 5ft), +2 CL of all Dex checks",overburdened:"Overburdened",overburdenedDesc:"move is 5ft/round, fail Dex checks, lose Dex on AC",slot:"Slot","1st":"1st","2nd":"2nd","3rd":"3rd","4th":"4th","5th":"5th","6th":"6th","7th":"7th","8th":"8th","9th":"9th",languages:"Languages",common:"Common",tracking:"Tracking",water:"Water",food:"Food",arrows:"Arrows",torches:"Torches",conditions:"Conditions",combat:"Combat",portrait:"Portrait",background:"Background",madeWithLove:"Made with ❤️ by",smallTermOfUse00:"This character sheet is a fan-made tool for use with the Castles & Crusades role-playing game.",smallTermOfUse01:"Castles & Crusades® is a trademark of Troll Lord Games. This site is non-commercial and does not store any user data on the server. All rights to Castles & Crusades belong to Troll Lord Games."},pt:{brand:"Castelos & Cruzadas",title:"Castelos & Cruzadas ficha de personagem",newCharacterBtn:"Nova ficha de personagem",saveBtn:"Salvar",namePlaceholder:"Nome do personagem",classInput:"Classe",raceInput:"Raça",dispositionInput:"Disposição",dwarf:"Anão",elf:"Elfo",gnome:"Gnomo",halfling:"Halfling",human:"Humano",halfElf:"Meio-Elfo",halfOrc:"Meio-Orc",assassin:"Assassino",barbarian:"Bárbaro",bard:"Bardo",cleric:"Clérigo",druid:"Druida",fighter:"Guerreiro",knight:"Cavaleiro",illusionist:"Ilusionista",paladin:"Paladino",ranger:"Ranger",rogue:"Ladino",monk:"Monge",wizard:"Mago",lawfulGood:"Leal e Bom",neutralGood:"Neutro e Bom",chaoticGood:"Caótico e Bom",lawfulNeutral:"Leal e Neutro",trueNeutral:"Verdadeiramente Neutro",chaoticNeutral:"Caótico e Neutro",lawfulEvil:"Leal e Maligno",neutralEvil:"Neutro e Maligno",chaoticEvil:"Caótico e Maligno",levelInput:"Nível",level:"Nv",nextLevelInput:"Próximo Nv",str:"Força",dex:"Destreza",con:"Constituição",int:"Inteligência",wis:"Sabedoria",cha:"Carisma",strDesc:"Paralisia & Constrição",dexDesc:"Arma de sopro & Armadilhas",conDesc:"Doença, Drenagem de energia & Veneno",intDesc:"Magia arcana & Ilusão",wisDesc:"Ataque de morte, encanto & medo",chaDesc:"Confusão, magia divina, ataque de olhar & polimorfia",acHead:"Cabeça",acMain:"CA",hpMax:"PV Máx.",hpCurrent:"PV atual",hpTemp:"PV Temp.",init:"Inic.",speed:"Desloc.",bth:"BA",armors:"Armaduras",magicalItem:"Item Mágico",equipments:"Equipamentos",equipment:"Equipamento",helm:"Elmo",shield:"Escudo",armor:"Armadura",weapons:"Armas",columnName:"Nome",damage:"dano",inventory:"Inventário",name:"Nome",quantity:"Qtd",ev:"EV",spells:"Feitiços",notes:"Notas",treasure:"Tesouro",platinum:"Platina",gold:"Ouro",silver:"Prata",copper:"Cobre",encumbrance:"Sobrecarga",rating:"Valor",enburdened:"Pesado",enburdenedDesc:"-3m (mínimo 1.5m), +2 CL em todos os testes de Des",overburdened:"Sobrecarregado",overburdenedDesc:"desloc. é 1.5m/turno, falha em testes de Des, perde a Des na CA",slot:"Slot","1st":"1º","2nd":"2º","3rd":"3º","4th":"4º","5th":"5º","6th":"6º","7th":"7º","8th":"8º","9th":"9º",languages:"Idiomas",common:"Comum",tracking:"Rastreando",water:"Água",food:"Comida",arrows:"Flechas",torches:"Tochas",conditions:"Condições",combat:"Combate",portrait:"Retrato",background:"Imagem de Fundo",madeWithLove:"Feito com ❤️ por",smallTermOfUse00:"Esta ficha de personagem é uma ferramenta criada por um fã para uso com o RPG Castles & Crusades.",smallTermOfUse01:"Castles & Crusades® é uma marca registrada da Troll Lord Games. Este site não é comercial e não armazena dados do usuário em servidor. Todos os direitos de Castles & Crusades pertencem à Troll Lord Games."}},Hr=Ri("en"),It=hp(Hr,n=>e=>Dp[n][e]);var Rp=de('<div><dir class="flex items-center gap-1 justify-between"><div class="flex-1 pl-1"><svg width="188" height="23" xmlns="http://www.w3.org/2000/svg"><text x="0" y="16" font-size="18" font-family="Arial, sans-serif" font-weight="bold" fill="#030712" stroke="white" stroke-width="2" paint-order="stroke fill"> </text></svg></div></dir> <input id="CharacterName" class="input w-full card border-r-none! rounded-r-none! text-3xl py-2"/></div>');function Pp(n,e){Ne(e,!1);const[t,i]=dt(),r=()=>Ce(Ee,"$character",t),a=()=>Ce(It,"$txt",t);let o;qi(()=>(Cp(),r().name&&(o=setInterval(Oe,5*60*1e3),Oe()),()=>{r().name&&window.removeEventListener("beforeunload",Oe)})),Zu(()=>{Oe(),clearInterval(o)}),hi();var s=Rp(),l=G(s),c=G(l),u=G(c),d=G(u),h=G(d),m=K(l,2);m.__input=function(...g){Ks==null||Ks.apply(this,g)},Ze((g,f)=>{Ie(h,g),De(m,"placeholder",f)},[()=>a()("brand"),()=>a()("namePlaceholder")]),tt("focus",m,function(...g){xe==null||xe.apply(this,g)}),Vn(m,()=>r().name,g=>Ir(Ee,ht(r).name=g,ht(r))),re(n,s),ke(),i()}vt(["input"]);function Ku(n){const e=Number(n);return e===1?"-4":e>=2&&e<=3?"-3":e>=4&&e<=5?"-2":e>=6&&e<=8?"-1":e>=9&&e<=12?"+0":e>=13&&e<=15?"+1":e>=16&&e<=17?"+2":e>=18?"+3":"0"}const Qu=Ri({formula:""});function Ns(n){Qu.set({formula:n})}const Ip={webhook:"",title:"",isWeaponRoll:!1,weaponAttackMod:""},Rr=Ri(Ip);function Fp(){Rr.update(n=>({...n,title:"",isWeaponRoll:!1,weaponAttackMod:""}))}function zp(n){Rr.update(e=>({...e,webhook:n}))}function fl(n){Rr.update(e=>({...e,title:n}))}async function Np(n,e){if(Pt(Ee).name==="")return;const t=Pt(Ee).portrait.includes("http")?Pt(Ee).portrait:"";await fetch(Pt(Rr).webhook,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:null,embeds:[{title:n,description:`🎲 ${e}`,color:5814783,author:{name:Pt(Ee).name,icon_url:t},thumbnail:{url:t}}],username:Pt(Ee).name,avatar_url:t,attachments:[]})})}function kp(n,e,t){Ns("1d20"+j(e)),fl(t.name)}var Op=(n,e,t)=>{ot();const i=n.target;e.updateAttr(e.id,i.value),at(t,Ku(Number(i.value)),!0),Oe()},Bp=(n,e)=>{ot(),e.togglePrimary(e.id,!e.score.isPrimary),Oe()},Up=de('<div><div><label class="text-xs text-center"> </label> <input class="text-4xl pb-3.5 text-center my-1 input" placeholder="10" type="number" min="1" max="99"/> <button> </button> <button title="Toggle Primary Attribute" aria-label="Toggle Primary Attribute"></button></div></div>');function pn(n,e){Ne(e,!0);let t=kt("0");qi(()=>{at(t,Ku(e.score.value),!0)});var i=Up(),r=G(i),a=G(r),o=G(a),s=K(a,2);s.__input=[Op,e,t];var l=K(s,2);l.__click=[kp,t,e];var c=G(l),u=K(l,2);u.__click=[Bp,e],Ze(()=>{De(i,"id",e.id),Lr(r,1,Pn(["card-xs flex flex-col relative",{"border-yellow-600!":e.score.isPrimary}])),De(a,"for",e.id+"Score"),Ie(o,e.name),De(s,"id",e.id+"Score"),Yt(s,e.score.value),De(l,"title",e.desc),Lr(l,1,Pn(["cursor-pointer badge w-10",{"border-yellow-600!":e.score.isPrimary}])),Ie(c,j(t)),Lr(u,1,Pn(["absolute -left-2.5 top-1/2 -translate-y-1/2 w-5 h-5 rounded-full flex justify-center align-center cursor-pointer bg-white",{"bg-yellow-600":e.score.isPrimary}]))}),tt("focus",s,function(...d){xe==null||xe.apply(this,d)}),re(n,i),ke()}vt(["input","click"]);var Hp=de('<div class="grid grid-cols-3 gap-y-5 gap-x-2 md:flex md:flex-col md:gap-10 md:justify-between"><!> <!> <!> <!> <!> <!></div>');function Gp(n,e){Ne(e,!1);const[t,i]=dt(),r=()=>Ce(It,"$txt",t),a=()=>Ce(Ee,"$character",t);function o(){Ee.update(p=>{const v=p.attr.str.isPrimary?3:0,_=p.attr.con.isPrimary?3:0,y=p.attr.str.value+v+_;return{...p,encumbrance:{...p.encumbrance,rating:y,enc3x:y*3}}})}function s(p,v){(p==="str"||p==="dex"||p==="con"||p==="int"||p==="wis"||p==="cha")&&(Ee.update(_=>({..._,attr:{..._.attr,[p]:{..._.attr[p],value:parseInt(v)}}})),o())}function l(p,v){(p==="str"||p==="dex"||p==="con"||p==="int"||p==="wis"||p==="cha")&&(Ee.update(_=>({..._,attr:{..._.attr,[p]:{..._.attr[p],isPrimary:!!v}}})),o())}qi(()=>{o()}),hi();var c=Hp(),u=G(c);{let p=Ae(()=>r()("str")),v=Ae(()=>r()("strDesc"));pn(u,{id:"str",get name(){return j(p)},get desc(){return j(v)},get score(){return a().attr.str},updateAttr:s,togglePrimary:l})}var d=K(u,2);{let p=Ae(()=>r()("dex")),v=Ae(()=>r()("dexDesc"));pn(d,{id:"dex",get name(){return j(p)},get desc(){return j(v)},get score(){return a().attr.dex},updateAttr:s,togglePrimary:l})}var h=K(d,2);{let p=Ae(()=>r()("con")),v=Ae(()=>r()("conDesc"));pn(h,{id:"con",get name(){return j(p)},get desc(){return j(v)},get score(){return a().attr.con},updateAttr:s,togglePrimary:l})}var m=K(h,2);{let p=Ae(()=>r()("int")),v=Ae(()=>r()("intDesc"));pn(m,{id:"int",get name(){return j(p)},get desc(){return j(v)},get score(){return a().attr.int},updateAttr:s,togglePrimary:l})}var g=K(m,2);{let p=Ae(()=>r()("wis")),v=Ae(()=>r()("wisDesc"));pn(g,{id:"wis",get name(){return j(p)},get desc(){return j(v)},get score(){return a().attr.wis},updateAttr:s,togglePrimary:l})}var f=K(g,2);{let p=Ae(()=>r()("cha")),v=Ae(()=>r()("chaDesc"));pn(f,{id:"cha",get name(){return j(p)},get desc(){return j(v)},get score(){return a().attr.cha},updateAttr:s,togglePrimary:l})}re(n,c),ke(),i()}var Wp=de("<option></option>"),Vp=de("<datalist></datalist>"),qp=de('<div class="flex flex-col text-left"><input class="input w-full pl-1"/> <!> <label class="text-sm"> </label></div>');function Bt(n,e){Ne(e,!0);let t=ar(e,"value",7);var i=qp(),r=G(i);r.__input=c=>{ot();const u=e.isNumber?parseFloat(c.currentTarget.value):c.currentTarget.value;e.updateInput(e.id,u)};var a=K(r,2);{var o=c=>{var u=Vp();Pr(u,21,()=>e.list,ol,(d,h)=>{var m=Wp(),g={};Ze(()=>{g!==(g=j(h))&&(m.value=(m.__value=j(h))??"")}),re(d,m)}),Ze(()=>De(u,"id","list"+e.id)),re(c,u)};Ge(a,c=>{e.list&&c(o)})}var s=K(a,2),l=G(s);Ze(()=>{De(r,"id",e.id),De(r,"placeholder",e.name),De(r,"list","list"+e.id),De(r,"type",e.isNumber?"number":"text"),r.disabled=e.disabled,De(s,"for",e.id),Ie(l,e.name)}),tt("focus",r,function(...c){xe==null||xe.apply(this,c)}),Vn(r,t),re(n,i),ke()}vt(["input"]);var jp=de('<div id="Info" class="grid grid-cols-3 gap-x-2"><!> <!> <!> <!> <!> <!></div>');function Xp(n,e){Ne(e,!0);const[t,i]=dt(),r=()=>Ce(It,"$txt",t),a=()=>Ce(Ee,"$character",t);function o(v,_){ot(),v==="charClass"||v==="race"||v==="disposition"||v==="languages"&&typeof _=="string"?Ee.update(y=>({...y,info:{...y.info,[v]:_}})):(v==="level"||v==="xp"||v==="nextLevel"&&typeof _=="number")&&Ee.update(y=>({...y,info:{...y.info,[v]:_}})),Oe()}let s=Gt(()=>[r()("dwarf"),r()("elf"),r()("gnome"),r()("halfling"),r()("human"),r()("halfElf"),r()("halfOrc")]),l=Gt(()=>[r()("assassin"),r()("barbarian"),r()("bard"),r()("cleric"),r()("druid"),r()("fighter"),r()("illusionist"),r()("knight"),r()("monk"),r()("paladin"),r()("ranger"),r()("rogue"),r()("wizard")]),c=Gt(()=>[r()("lawfulGood"),r()("neutralGood"),r()("chaoticGood"),r()("lawfulNeutral"),r()("trueNeutral"),r()("chaoticNeutral"),r()("lawfulEvil"),r()("neutralEvil"),r()("chaoticEvil")]);var u=jp(),d=G(u);{let v=Gt(()=>r()("classInput"));Bt(d,{id:"charClass",get name(){return j(v)},get list(){return j(l)},get value(){return a().info.charClass},updateInput:o})}var h=K(d,2);{let v=Gt(()=>r()("raceInput"));Bt(h,{id:"race",get name(){return j(v)},get list(){return j(s)},get value(){return a().info.race},updateInput:o})}var m=K(h,2);{let v=Gt(()=>r()("dispositionInput"));Bt(m,{id:"disposition",get name(){return j(v)},get list(){return j(c)},get value(){return a().info.disposition},updateInput:o})}var g=K(m,2);{let v=Gt(()=>r()("levelInput"));Bt(g,{id:"level",get name(){return j(v)},isNumber:!0,get value(){return a().info.level},updateInput:o})}var f=K(g,2);Bt(f,{id:"xp",name:"XP",isNumber:!0,get value(){return a().info.xp},updateInput:o});var p=K(f,2);{let v=Gt(()=>r()("nextLevelInput"));Bt(p,{id:"nextLevel",get name(){return j(v)},isNumber:!0,get value(){return a().info.nextLevel},updateInput:o})}re(n,u),ke(),i()}var Yp=(n,e)=>{ot(),Ir(Ee,ht(e).ac.head=Number(n.target.value),ht(e)),Oe()},Zp=(n,e)=>{ot(),Ir(Ee,ht(e).ac.main=Number(n.target.value),ht(e)),Oe()},$p=de('<div id="AC" class="flex flex-col justify-between relative card rounded-t-none!"><div id="ACHead" class="flex flex-col w-10 text-center"><input id="ACHeadValue" class="border-b text-center input" type="number"/> <label for="ACHeadValue"> </label></div> <div id="ACMain" class="flex flex-col flex-1"><input id="ACMainValue" class="text-4xl text-center input flex flex-1" type="number"/> <label for="ACMainValue"> </label></div></div>');function Jp(n,e){Ne(e,!1);const[t,i]=dt(),r=()=>Ce(Ee,"$character",t),a=()=>Ce(It,"$txt",t);hi();var o=$p(),s=G(o),l=G(s);l.__input=[Yp,r];var c=K(l,2),u=G(c),d=K(s,2),h=G(d);h.__input=[Zp,r];var m=K(h,2),g=G(m);Ze((f,p)=>{Yt(l,r().ac.head),Ie(u,f),Yt(h,r().ac.main),Ie(g,p)},[()=>a()("acHead"),()=>a()("acMain")]),tt("focus",l,function(...f){xe==null||xe.apply(this,f)}),tt("focus",h,function(...f){xe==null||xe.apply(this,f)}),re(n,o),ke(),i()}vt(["input"]);var Kp=(n,e)=>{ot(),Ir(Ee,ht(e).hp.max=Number(n.target.value),ht(e)),Oe()},Qp=(n,e)=>{ot(),Ir(Ee,ht(e).hp.current=Number(n.target.value),ht(e)),Oe()},ef=(n,e)=>{ot(),Ir(Ee,ht(e).hp.temp=Number(n.target.value),ht(e)),Oe()},tf=de('<div id="HP"><div id="CurrentHP" class="card rounded-b-none! p-2 text-center flex flex-col mb-1 relative"><div class="flex gap-1 align-center"><input id="MaxHP" class="input text-center border-b w-10" type="number" placeholder="0" min="0"/> <span class="text-xs"> </span></div> <input id="CurrentHPValue" class="input text-4xl text-center" placeholder="0" type="number"/> <label for="CurrentHPValue" class="text-xs"> </label></div> <div id="TempHP" class="card rounded-none! px-3 py-1 text-white text-center flex flex-col relative"><input id="TempHPValue" class="input text-center" type="number" placeholder="0"/> <label for="TempHPValue" class="text-xs"> </label></div></div>');function rf(n,e){Ne(e,!1);const[t,i]=dt(),r=()=>Ce(Ee,"$character",t),a=()=>Ce(It,"$txt",t);hi();var o=tf(),s=G(o),l=G(s),c=G(l);c.__input=[Kp,r];var u=K(c,2),d=G(u),h=K(l,2);h.__input=[Qp,r];var m=K(h,2),g=G(m),f=K(s,2),p=G(f);p.__input=[ef,r];var v=K(p,2),_=G(v);Ze((y,x,w)=>{Yt(c,r().hp.max),Ie(d,y),Yt(h,r().hp.current),Ie(g,x),Yt(p,r().hp.temp),Ie(_,w)},[()=>a()("hpMax"),()=>a()("hpCurrent"),()=>a()("hpTemp")]),tt("focus",c,function(...y){xe==null||xe.apply(this,y)}),tt("focus",h,function(...y){xe==null||xe.apply(this,y)}),tt("focus",p,function(...y){xe==null||xe.apply(this,y)}),re(n,o),ke(),i()}vt(["input"]);function nf(n,e,t){Ns("1d20"+e()),fl(t.name)}var af=(n,e)=>{ot(),e.updateStat(e.id,n.currentTarget.value),Oe()},sf=de('<label class="badge px-2 text-xs"> </label>'),of=de('<button class="badge px-2 text-xs cursor-pointer"> </button>'),lf=de('<div class="card flex flex-col mb-1 relative px-2! pb-3!"><input class="input flex flex-1 text-center py-2"/> <!></div>');function Qs(n,e){Ne(e,!0);let t=ar(e,"value",7);var i=lf(),r=G(i);r.__input=[af,e];var a=K(r,2);{var o=l=>{var c=sf(),u=G(c);Ze(()=>{De(c,"for",e.id+"Value"),Ie(u,e.name)}),re(l,c)},s=l=>{var c=of();c.__click=[nf,t,e];var u=G(c);Ze(()=>Ie(u,e.name)),re(l,c)};Ge(a,l=>{e.id==="speed"?l(o):l(s,!1)})}Ze(()=>{De(i,"id",e.id),De(r,"id",e.id+"Value"),De(r,"type",e.id==="speed"?"string":"number")}),tt("focus",r,function(...l){xe==null||xe.apply(this,l)}),Vn(r,t),re(n,i),ke()}vt(["input","click"]);var cf=de('<div id="StatList" class="flex flex-col gap-4"><div class="grid grid-cols-2 gap-4"><!> <!></div> <div class="grid grid-cols-3 gap-4"><!> <!> <!></div></div>');function uf(n,e){Ne(e,!1);const[t,i]=dt(),r=()=>Ce(It,"$txt",t),a=()=>Ce(Ee,"$character",t);function o(f,p){Ee.update(v=>({...v,stats:{...v.stats,[f]:p}})),Oe()}hi();var s=cf(),l=G(s),c=G(l);Jp(c,{});var u=K(c,2);rf(u,{});var d=K(l,2),h=G(d);{let f=Ae(()=>r()("init"));Qs(h,{id:"init",get name(){return j(f)},get value(){return a().stats.init},updateStat:o})}var m=K(h,2);{let f=Ae(()=>r()("speed"));Qs(m,{id:"speed",get name(){return j(f)},get value(){return a().stats.speed},updateStat:o})}var g=K(m,2);{let f=Ae(()=>r()("bth"));Qs(g,{id:"bth",get name(){return j(f)},get value(){return a().stats.bth},updateStat:o})}re(n,s),ke(),i()}/**
 * @license @lucide/svelte v0.513.0 - ISC
 *
 * ISC License
 * 
 * Copyright (c) for portions of Lucide are held by Cole Bemis 2013-2022 as part of Feather (MIT). All other copyright (c) for Lucide are held by Lucide Contributors 2022.
 * 
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 * 
 */const hf={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"};var df=$d("<svg><!><!></svg>");function Ca(n,e){Ne(e,!0);const t=ar(e,"color",3,"currentColor"),i=ar(e,"size",3,24),r=ar(e,"strokeWidth",3,2),a=ar(e,"absoluteStrokeWidth",3,!1),o=ar(e,"iconNode",19,()=>[]),s=qn(e,["$$slots","$$events","$$legacy","name","color","size","strokeWidth","absoluteStrokeWidth","iconNode","children"]);var l=df();Hl(l,d=>({...hf,...s,width:i(),height:i(),stroke:t(),"stroke-width":d,class:["lucide-icon lucide",e.name&&`lucide-${e.name}`,e.class]}),[()=>a()?Number(r())*24/Number(i()):r()]);var c=G(l);Pr(c,17,o,ol,(d,h)=>{var m=Gt(()=>Vh(j(h),2));let g=()=>j(m)[0],f=()=>j(m)[1];var p=st(),v=nt(p);ip(v,g,!0,(_,y)=>{Hl(_,()=>({...f()}))}),re(d,p)});var u=K(c);sn(u,()=>e.children??jt),re(n,l),ke()}function pf(n,e){Ne(e,!0);/**
 * @license @lucide/svelte v0.513.0 - ISC
 *
 * ISC License
 *
 * Copyright (c) for portions of Lucide are held by Cole Bemis 2013-2022 as part of Feather (MIT). All other copyright (c) for Lucide are held by Lucide Contributors 2022.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */let t=qn(e,["$$slots","$$events","$$legacy"]);const i=[["rect",{width:"12",height:"12",x:"2",y:"10",rx:"2",ry:"2"}],["path",{d:"m17.92 14 3.5-3.5a2.24 2.24 0 0 0 0-3l-5-4.92a2.24 2.24 0 0 0-3 0L10 6"}],["path",{d:"M6 18h.01"}],["path",{d:"M10 14h.01"}],["path",{d:"M15 6h.01"}],["path",{d:"M18 9h.01"}]];Ca(n,Aa({name:"dices"},()=>t,{get iconNode(){return i},children:(r,a)=>{var o=st(),s=nt(o);sn(s,()=>e.children??jt),re(r,o)},$$slots:{default:!0}})),ke()}function ff(n,e){Ne(e,!0);/**
 * @license @lucide/svelte v0.513.0 - ISC
 *
 * ISC License
 *
 * Copyright (c) for portions of Lucide are held by Cole Bemis 2013-2022 as part of Feather (MIT). All other copyright (c) for Lucide are held by Lucide Contributors 2022.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */let t=qn(e,["$$slots","$$events","$$legacy"]);const i=[["path",{d:"M4 12h16"}],["path",{d:"M4 18h16"}],["path",{d:"M4 6h16"}]];Ca(n,Aa({name:"menu"},()=>t,{get iconNode(){return i},children:(r,a)=>{var o=st(),s=nt(o);sn(s,()=>e.children??jt),re(r,o)},$$slots:{default:!0}})),ke()}function mf(n,e){Ne(e,!0);/**
 * @license @lucide/svelte v0.513.0 - ISC
 *
 * ISC License
 *
 * Copyright (c) for portions of Lucide are held by Cole Bemis 2013-2022 as part of Feather (MIT). All other copyright (c) for Lucide are held by Lucide Contributors 2022.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */let t=qn(e,["$$slots","$$events","$$legacy"]);const i=[["path",{d:"M5 12h14"}]];Ca(n,Aa({name:"minus"},()=>t,{get iconNode(){return i},children:(r,a)=>{var o=st(),s=nt(o);sn(s,()=>e.children??jt),re(r,o)},$$slots:{default:!0}})),ke()}function ml(n,e){Ne(e,!0);/**
 * @license @lucide/svelte v0.513.0 - ISC
 *
 * ISC License
 *
 * Copyright (c) for portions of Lucide are held by Cole Bemis 2013-2022 as part of Feather (MIT). All other copyright (c) for Lucide are held by Lucide Contributors 2022.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */let t=qn(e,["$$slots","$$events","$$legacy"]);const i=[["path",{d:"M5 12h14"}],["path",{d:"M12 5v14"}]];Ca(n,Aa({name:"plus"},()=>t,{get iconNode(){return i},children:(r,a)=>{var o=st(),s=nt(o);sn(s,()=>e.children??jt),re(r,o)},$$slots:{default:!0}})),ke()}function ks(n,e){Ne(e,!0);/**
 * @license @lucide/svelte v0.513.0 - ISC
 *
 * ISC License
 *
 * Copyright (c) for portions of Lucide are held by Cole Bemis 2013-2022 as part of Feather (MIT). All other copyright (c) for Lucide are held by Lucide Contributors 2022.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */let t=qn(e,["$$slots","$$events","$$legacy"]);const i=[["path",{d:"M18 6 6 18"}],["path",{d:"m6 6 12 12"}]];Ca(n,Aa({name:"x"},()=>t,{get iconNode(){return i},children:(r,a)=>{var o=st(),s=nt(o);sn(s,()=>e.children??jt),re(r,o)},$$slots:{default:!0}})),ke()}var gf=(n,e)=>{var t,i;return(i=(t=e.secondary).action)==null?void 0:i.call(t)},vf=de('<button class="btn-xs cursor-pointer flex justify-center"> </button>'),_f=(n,e)=>{var t,i;return(i=(t=e.primary).action)==null?void 0:i.call(t)},xf=de('<button class="cursor-pointer flex justify-center"><!></button>'),yf=de('<div class="flex items-center justify-between"><h2 class="font-bold text-xl text-left pb-1"> </h2> <div class="flex gap-2"><!> <!></div></div>');function In(n,e){Ne(e,!0);var t=yf(),i=G(t),r=G(i),a=K(i,2),o=G(a);{var s=u=>{var d=vf();d.__click=[gf,e];var h=G(d);Ze(()=>{De(d,"title",e.secondary.title),Ie(h,e.secondary.title)}),re(u,d)};Ge(o,u=>{var d;(d=e.secondary)!=null&&d.action&&u(s)})}var l=K(o,2);{var c=u=>{var d=xf();d.__click=[_f,e];var h=G(d);ml(h,{}),Ze(()=>De(d,"title",e.primary.title)),re(u,d)};Ge(l,u=>{var d;(d=e.primary)!=null&&d.action&&u(c)})}Ze(()=>Ie(r,e.name)),re(n,t),ke()}vt(["click"]);function eo(n,e){n.code==="Enter"&&e.newWeapon(),n.target.value===""&&n.code==="Backspace"&&e.deleteWeapon(e.data.id),Oe()}function bf(n,e){Ns(`1d20+${e.data.dmg}`),Rr.update(t=>({...t,title:e.data.name,isWeaponRoll:!0,weaponAttackMod:e.data.bth}))}var wf=(n,e)=>e.deleteWeapon(e.data.id),Mf=de('<button class="w-12 cursor-pointer"><!></button>'),Sf=de('<button class="w-12 cursor-pointer"><!></button>'),Ef=(n,e,t)=>{const i=n.target;e(t.data.id,"name",i.value)},Tf=(n,e,t)=>{const i=n.target;e(t.data.id,"bth",i.value)},Af=(n,e,t)=>{const i=n.target;e(t.data.id,"dmg",i.value)},Cf=de('<div role="button" tabindex="0" class="flex gap-2" draggable=""><!> <input id="name" class="input w-full"/> <input id="bth" type="number" class="input w-10"/> <input id="dmg" class="input w-16"/></div>');function Lf(n,e){Ne(e,!0);const[t,i]=dt(),r=()=>Ce(dl,"$weapons",t),a=()=>Ce(It,"$txt",t);let o,s=kt(!1);function l(){at(s,!0)}function c(){at(s,!1)}function u(_,y,x){ot(),Mi.update(w=>({...w,weapons:[...w.weapons.map(S=>S.id===_?{...S,[y]:x}:S)]})),Oe()}qi(()=>{o.focus()});var d=Cf(),h=G(d);{var m=_=>{var y=Mf();y.__click=[wf,e];var x=G(y);{var w=S=>{ks(S,{size:12})};Ge(x,S=>{j(s)&&S(w)})}re(_,y)},g=_=>{var y=Sf();y.__click=[bf,e];var x=G(y);pf(x,{size:14}),re(_,y)};Ge(h,_=>{r().isDeleteMode?_(m):_(g,!1)})}var f=K(h,2);f.__keydown=[eo,e],f.__input=[Ef,u,e],ul(f,_=>o=_,()=>o);var p=K(f,2);p.__keydown=[eo,e],p.__input=[Tf,u,e];var v=K(p,2);v.__keydown=[eo,e],v.__input=[Af,u,e],Ze((_,y,x)=>{De(d,"id",e.data.id),De(f,"placeholder",_),Yt(f,e.data.name),De(p,"placeholder",y),Yt(p,e.data.bth),De(v,"placeholder",x),Yt(v,e.data.dmg)},[()=>a()("columnName"),()=>a()("bth"),()=>a()("damage")]),tt("mouseenter",d,l),tt("focus",d,()=>{}),tt("mouseleave",d,c),tt("blur",d,()=>{}),tt("focus",f,function(..._){xe==null||xe.apply(this,_)}),tt("focus",p,function(..._){xe==null||xe.apply(this,_)}),tt("focus",v,function(..._){xe==null||xe.apply(this,_)}),re(n,d),ke(),i()}vt(["click","keydown","input"]);var Df=(n,e)=>{ot();const t=n.currentTarget;e.updateInput(e.id,t.value)},Rf=de('<div class="flex flex-col text-left py-1 px-2"><textarea class="input"></textarea></div>');function Pf(n,e){Ne(e,!0);var t=Rf(),i=G(t);De(i,"rows",3),i.__input=[Df,e],Ze(()=>{De(i,"id",e.id),De(i,"placeholder",e.name),Yt(i,e.value)}),re(n,t),ke()}vt(["input"]);var If=de('<div class="overflow-hidden flex flex-col gap-2"><!> <div class="grid grid-cols-2 gap-x-1"><!> <!> <div class="col-span-2"><!></div> <div class="col-span-2"><!></div></div> <hr/> <!> <div class="overflow-y-auto h-[256px] pt-1 flex flex-col gap-2"><div class="flex gap-10 text-left pl-8 pr-7 text-xs"><span class="flex-1"> </span> <span> </span> <span> </span></div> <!></div></div>');function eh(n,e){Ne(e,!1);const[t,i]=dt(),r=()=>Ce(Ee,"$character",t),a=()=>Ce(Mi,"$inventory",t),o=()=>Ce(dl,"$weapons",t),s=()=>Ce(It,"$txt",t);function l(P,F){ot(),(P==="helm"||P==="main"||P==="shield"||P==="magicalItem"&&typeof F=="string")&&(Ir(Ee,ht(r).armor[P]=String(F),ht(r)),Oe())}function c(){ot(),Mi.update(P=>({...P,weapons:[...P.weapons||[],{id:Fs(),name:"",bth:"",dmg:""}]})),Oe()}function u(P){ot();const F=a().weapons.filter(H=>H.id!==P);Mi.update(H=>({...H,weapons:F})),Oe()}function d(){Tp(!o().isDeleteMode)}hi();var h=If(),m=G(h);{let P=Ae(()=>s()("equipments"));In(m,{get name(){return j(P)}})}var g=K(m,2),f=G(g);{let P=Ae(()=>s()("helm"));Bt(f,{id:"helm",get name(){return j(P)},get value(){return r().armor.helm},updateInput:l})}var p=K(f,2);{let P=Ae(()=>s()("shield"));Bt(p,{id:"shield",get name(){return j(P)},get value(){return r().armor.shield},updateInput:l})}var v=K(p,2),_=G(v);{let P=Ae(()=>s()("armor"));Bt(_,{id:"main",get name(){return j(P)},get value(){return r().armor.main},updateInput:l})}var y=K(v,2),x=G(y);{let P=Ae(()=>s()("magicalItem"));Bt(x,{id:"magicalItem",get name(){return j(P)},get value(){return r().armor.magicalItem},updateInput:l})}var w=K(g,4);{let P=Ae(()=>s()("weapons")),F=Ae(()=>({title:o().isDeleteMode?"roll":"delete",action:d}));In(w,{get name(){return j(P)},primary:{title:"new Weapon",action:c},get secondary(){return j(F)}})}var S=K(w,2),T=G(S),b=G(T),E=G(b),D=K(b,2),I=G(D),N=K(D,2),z=G(N),L=K(T,2);Pr(L,1,()=>a().weapons,P=>P.id,(P,F)=>{Lf(P,{newWeapon:c,deleteWeapon:u,get data(){return j(F)}})}),Ze((P,F,H)=>{Ie(E,P),Ie(I,F),Ie(z,H)},[()=>s()("columnName"),()=>s()("bth"),()=>s()("damage")]),re(n,h),ke(),i()}var Ff=(n,e,t)=>e.handleSelected(j(t).id),zf=de("<button> </button>"),Nf=de('<div class="flex justify-between -mt-1 -mx-3 mb-2"></div>');function Xl(n,e){Ne(e,!0);var t=Nf();Pr(t,21,()=>e.tabs,ol,(i,r)=>{var a=zf();a.__mouseover=[Ff,e,r];var o=G(a);Ze(s=>{Lr(a,1,s),Ie(o,j(r).name)},[()=>Pn(["flex-1 p-1",`${e.selectedId===j(r).id?"tab-selected":""}`].join(" "))]),tt("focus",a,()=>{}),re(i,a)}),re(n,t),ke()}vt(["mouseover"]);function to(n,e,t){n.code==="Enter"&&e.newItem(),e.data.name===""&&n.target.value===""&&n.code==="Backspace"&&t(e.data.id),Oe()}var kf=(n,e,t)=>e(t.data.id),Of=(n,e,t)=>{const i=n.target;e(t.data.id,"qtd",i.value)},Bf=(n,e,t)=>{const i=n.target;e(t.data.id,"name",i.value)},Uf=(n,e,t)=>{const i=n.target;e(t.data.id,"ev",i.value)},Hf=de('<div role="button" tabindex="0" class="flex gap-2" draggable=""><button class="w-12 cursor-pointer"><!></button> <input id="qtd" class="input w-8" type="number" min="1"/> <input id="name" class="input w-full"/> <input id="ev" class="input w-10" type="number"/></div>');function Gf(n,e){Ne(e,!0);const[t,i]=dt(),r=()=>Ce(Mi,"$inventory",t),a=()=>Ce(It,"$txt",t);let o,s=kt(!1);function l(){at(s,!0)}function c(){at(s,!1)}function u(y){ot();const x=r().items.filter(w=>w.id!==y);Mi.update(w=>({...w,items:x})),Oe()}function d(y,x,w){ot(),Mi.update(S=>{const T=Number(w),b=x==="qtd"||x==="ev"?T:w;return{...S,items:[...S.items.map(E=>E.id===y?{...E,[x]:b}:E)]}}),Oe()}qi(()=>{o.focus()});var h=Hf(),m=G(h);m.__click=[kf,u,e];var g=G(m);{var f=y=>{ks(y,{size:12})};Ge(g,y=>{j(s)&&y(f)})}var p=K(m,2);p.__keydown=[to,e,u],p.__input=[Of,d,e];var v=K(p,2);v.__keydown=[to,e,u],v.__input=[Bf,d,e],ul(v,y=>o=y,()=>o);var _=K(v,2);_.__keydown=[to,e,u],_.__input=[Uf,d,e],Ze((y,x,w)=>{De(h,"id",e.data.id),De(p,"placeholder",y),Yt(p,e.data.qtd),De(v,"placeholder",x),Yt(v,e.data.name),De(_,"placeholder",w),Yt(_,e.data.ev)},[()=>a()("quantity"),()=>a()("name"),()=>a()("ev")]),tt("mouseenter",h,l),tt("focus",h,()=>{}),tt("mouseleave",h,c),tt("blur",h,()=>{}),tt("focus",p,function(...y){xe==null||xe.apply(this,y)}),tt("focus",v,function(...y){xe==null||xe.apply(this,y)}),tt("focus",_,function(...y){xe==null||xe.apply(this,y)}),re(n,h),ke(),i()}vt(["click","keydown","input"]);var Wf=(n,e)=>{ot();const t=Number(n.target.value);isNaN(t)||e.updateValue(e.id,t)},Vf=de('<div class="text-left gap-2 items-center grid grid-cols-3"><label class="text-sm"> </label> <input class="input w-full col-span-2" type="number"/></div>');function Tr(n,e){Ne(e,!0);let t=ar(e,"value",7);var i=Vf(),r=G(i),a=G(r),o=K(r,2);o.__input=[Wf,e],Ze(()=>{De(r,"for",e.id),Ie(a,e.label),De(o,"id",e.id),De(o,"placeholder",e.placeholder),o.disabled=e.disabled}),tt("focus",o,function(...s){xe==null||xe.apply(this,s)}),Vn(o,t),re(n,i),ke()}vt(["input"]);var qf=de('<div id="Inventory" class="flex flex-col gap-4 h-full pb-12 justify-between"><div class="flex flex-col gap-2 flex-1"><!> <div class="flex flex-col gap-2 overflow-y-auto h-[22rem] pt-1"><div class="flex gap-8 text-left pl-8 pr-7 text-xs"><span> </span> <span class="flex-1"> </span> <span> </span></div> <!></div></div> <hr/> <div class="grid grid-cols-2 gap-4"><div id="treasure"><!> <div class="flex flex-col gap-2"><!> <!> <!> <!></div></div> <div id="encumbrance"><!> <div class="grid grid-cols-3 gap-4 mb-4"><!> <!> <!></div> <div class="text-left text-xs flex flex-col gap-1"><p><span class="font-bold"> </span> </p> <p><span class="font-bold"> </span> </p></div></div></div></div>');function jf(n,e){Ne(e,!1);const[t,i]=dt(),r=()=>Ce(It,"$txt",t),a=()=>Ce(Mi,"$inventory",t),o=()=>Ce(Ee,"$character",t);function s(ae,ne){(ae==="platinum"||ae==="gold"||ae==="silver"||ae==="copper")&&(Ee.update(He=>({...He,treasure:{...He.treasure,[ae]:ne}})),Oe())}function l(ae,ne){ae==="total"&&typeof ne=="number"&&(Ee.update(He=>({...He,encumbrance:{...He.encumbrance,[ae]:Number(ne)}})),Oe())}function c(){const ae={id:Fs(),name:"",qtd:1,description:"",ev:0};Mi.update(ne=>({...ne,items:[...ne.items,ae]})),Oe(),ot()}hi();var u=qf(),d=G(u),h=G(d);In(h,{name:"Items",primary:{title:"new Item",action:c}});var m=K(h,2),g=G(m),f=G(g),p=G(f),v=K(f,2),_=G(v),y=K(v,2),x=G(y),w=K(g,2);Pr(w,1,()=>a().items,ae=>ae.id,(ae,ne)=>{Gf(ae,{get data(){return j(ne)},newItem:c})});var S=K(d,4),T=G(S),b=G(T);{let ae=Ae(()=>r()("treasure"));In(b,{get name(){return j(ae)}})}var E=K(b,2),D=G(E);{let ae=Ae(()=>r()("platinum")),ne=Ae(()=>r()("platinum"));Tr(D,{id:"platinum",get label(){return j(ae)},get placeholder(){return j(ne)},get value(){return o().treasure.platinum},updateValue:s})}var I=K(D,2);{let ae=Ae(()=>r()("gold")),ne=Ae(()=>r()("gold"));Tr(I,{id:"gold",get label(){return j(ae)},get placeholder(){return j(ne)},get value(){return o().treasure.gold},updateValue:s})}var N=K(I,2);{let ae=Ae(()=>r()("silver")),ne=Ae(()=>r()("silver"));Tr(N,{id:"silver",get label(){return j(ae)},get placeholder(){return`${j(ne)??""}}`},get value(){return o().treasure.silver},updateValue:s})}var z=K(N,2);{let ae=Ae(()=>r()("copper")),ne=Ae(()=>r()("copper"));Tr(z,{id:"copper",get label(){return j(ae)},get placeholder(){return j(ne)},get value(){return o().treasure.copper},updateValue:s})}var L=K(T,2),P=G(L);{let ae=Ae(()=>r()("encumbrance"));In(P,{get name(){return j(ae)}})}var F=K(P,2),H=G(F);Bt(H,{id:"total",name:"Total",isNumber:!0,get value(){return o().encumbrance.total},updateInput:l});var X=K(H,2);{let ae=Ae(()=>r()("rating"));Bt(X,{id:"rating",get name(){return j(ae)},isNumber:!0,disabled:!0,get value(){return o().encumbrance.rating},updateInput:()=>{}})}var k=K(X,2);Bt(k,{id:"enc3x",name:"3x",isNumber:!0,disabled:!0,get value(){return o().encumbrance.enc3x},updateInput:()=>{}});var V=K(F,2),ie=G(V),U=G(ie),te=G(U),oe=K(U),Re=K(ie,2),Q=G(Re),Be=G(Q),Se=K(Q);Ze((ae,ne,He,Pe,be,Je,_t)=>{Ie(p,ae),Ie(_,ne),Ie(x,He),Ie(te,`${Pe??""}:`),Ie(oe,` ${be??""}`),Ie(Be,`${Je??""}:`),Ie(Se,` ${_t??""}`)},[()=>r()("quantity"),()=>r()("name"),()=>r()("ev"),()=>r()("enburdened"),()=>r()("enburdenedDesc"),()=>r()("overburdened"),()=>r()("overburdenedDesc")]),re(n,u),ke(),i()}var Xf=de('<textarea id="notes" class="h-[650px] w-full p-0.5"></textarea>');function Yf(n,e){Ne(e,!1);const[t,i]=dt(),r=()=>Ce(Ee,"$character",t);function a(s){ot(),Ee.update(l=>({...l,notes:s.target.value})),Oe()}hi();var o=Xf();o.__input=a,Vn(o,()=>r().notes,s=>Ir(Ee,ht(r).notes=s,ht(r))),re(n,o),ke(),i()}vt(["input"]);function Yl(n,e){n.code==="Enter"&&e.newSpell(),e.data.name===""&&n.target.value===""&&n.code==="Backspace"&&e.deleteSpell(e.data.id),Oe()}var Zf=(n,e)=>e.deleteSpell(e.data.id),$f=(n,e,t)=>{const i=n.target;e(t.data.id,"slots",i.value),Oe()},Jf=(n,e,t)=>{const i=n.target;e(t.data.id,"name",i.value),Oe()},Kf=de('<div role="button" tabindex="0" class="flex gap-2" draggable=""><button class="w-12 cursor-pointer"><!></button> <input id="slots" class="input w-8" type="number"/> <input id="name" class="input w-full"/></div>');function Qf(n,e){Ne(e,!0);const[t,i]=dt(),r=()=>Ce(It,"$txt",t);let a,o=kt(!1);function s(){at(o,!0)}function l(){at(o,!1)}function c(p,v,_){ot(),or.update(y=>({...y,known:[...y.known.map(x=>x.id===p?{...x,[v]:_}:x)]})),Oe()}qi(()=>{a.focus()});var u=Kf(),d=G(u);d.__click=[Zf,e];var h=G(d);{var m=p=>{ks(p,{size:12})};Ge(h,p=>{j(o)&&p(m)})}var g=K(d,2);g.__keydown=[Yl,e],g.__input=[$f,c,e];var f=K(g,2);f.__keydown=[Yl,e],f.__input=[Jf,c,e],ul(f,p=>a=p,()=>a),Ze((p,v)=>{De(u,"id",e.data.id),De(g,"placeholder",p),Yt(g,e.data.slots),De(f,"placeholder",v),Yt(f,e.data.name)},[()=>r()("slot"),()=>r()("name")]),tt("mouseenter",u,s),tt("focus",u,()=>{}),tt("mouseleave",u,l),tt("blur",u,()=>{}),tt("focus",g,function(...p){xe==null||xe.apply(this,p)}),tt("focus",f,function(...p){xe==null||xe.apply(this,p)}),re(n,u),ke(),i()}vt(["click","keydown","input"]);var em=(n,e)=>{var t,i;return(i=(t=e.secondary).action)==null?void 0:i.call(t)},tm=de('<button class="btn-xs cursor-pointer flex justify-center"> </button>'),im=(n,e)=>{var t,i;return(i=(t=e.primary).action)==null?void 0:i.call(t)},rm=de('<button class="cursor-pointer flex justify-center"><!></button>'),nm=de('<div><h2 class="font-bold text-xl text-left pb-1"> </h2> <div class="flex gap-2"><div class="flex gap-1 w-15 items-center"><span>slots</span> <!></div> <!> <!></div></div>');function am(n,e){Ne(e,!0);const[t,i]=dt(),r=()=>Ce(or,"$spells",t),a=e.bg?"bg-gray-700 bg-opacity-100 pl-4 pr-2":"",o=`${e.lv}slots`;let s=r().level[`lv${e.lv}`];function l(y,x){or.update(w=>({...w,level:{...w.level,[`lv${e.lv}`]:Number(x)}})),Oe()}var c=nm(),u=G(c),d=G(u),h=K(u,2),m=G(h),g=K(G(m),2);Bt(g,{get id(){return o},name:"",get value(){return s},updateInput:l,isNumber:!0});var f=K(m,2);{var p=y=>{var x=tm();x.__click=[em,e];var w=G(x);Ze(()=>{De(x,"title",e.secondary.title),Ie(w,e.secondary.title)}),re(y,x)};Ge(f,y=>{var x;(x=e.secondary)!=null&&x.action&&y(p)})}var v=K(f,2);{var _=y=>{var x=rm();x.__click=[im,e];var w=G(x);ml(w,{}),Ze(()=>De(x,"title",e.primary.title)),re(y,x)};Ge(v,y=>{var x;(x=e.primary)!=null&&x.action&&y(_)})}Ze(()=>{Lr(c,1,Pn([" flex items-center justify-between",a])),Ie(d,e.name)}),re(n,c),ke(),i()}vt(["click"]);var sm=de('<div><!> <div class="flex flex-col gap-2 pt-1"><div class="flex gap-7 text-left pl-10 text-xs"><span> </span> <span class="flex-1"> </span></div> <div></div></div></div>');function om(n,e){Ne(e,!0);const[t,i]=dt(),r=()=>Ce(or,"$spells",t),a=()=>Ce(It,"$txt",t);let o=Sr(e.spellLevel.split("lv").join("")),s=Gt(()=>r().known.filter(y=>y.level===o));function l(){ot();const y={id:Fs(),name:"",level:o,slots:0,description:""};or.update(x=>({...x,known:[...x.known,y]})),Oe()}function c(y){ot();const x=r().known.filter(w=>w.id!==y);or.update(w=>({...w,known:x})),Oe()}var u=sm(),d=G(u);{let y=Gt(()=>`${a()("level")} ${o}`);am(d,{get name(){return j(y)},get lv(){return o},bg:!0,primary:{title:"new Spells",action:l}})}var h=K(d,2),m=G(h),g=G(m),f=G(g),p=K(g,2),v=G(p),_=K(m,2);Pr(_,21,()=>j(s),y=>y.id,(y,x)=>{Qf(y,{newSpell:l,deleteSpell:c,get data(){return j(x)}})}),Ze((y,x)=>{Ie(f,y),Ie(v,x)},[()=>a()("slot"),()=>a()("name")]),re(n,u),ke(),i()}var lm=de('<div class="flex flex-col gap-2 overflow-y-auto max-h-[680px]"></div>');function cm(n,e){Ne(e,!1);const[t,i]=dt(),a=Object.keys(Ce(or,"$spells",t).level);hi();var o=lm();Pr(o,5,()=>a,s=>s,(s,l)=>{om(s,{get spellLevel(){return j(l)}})}),re(n,o),ke(),i()}var um=de('<div id="More" class="card overflow-hidden h-full"><div class="block lg:hidden"><!></div> <div class="hidden lg:block"><!></div> <!></div>');function hm(n,e){Ne(e,!0);const[t,i]=dt(),r=()=>Ce(It,"$txt",t);let a=Gt(()=>[{id:"inventory",name:r()("inventory")},{id:"spells",name:r()("spells")},{id:"notes",name:r()("notes")}]),o=Gt(()=>[{id:"combat",name:r()("combat")},...j(a)]),s=kt("inventory");function l(v){at(s,v,!0)}var c=um(),u=G(c),d=G(u);Xl(d,{get tabs(){return j(o)},get selectedId(){return j(s)},handleSelected:l});var h=K(u,2),m=G(h);Xl(m,{get tabs(){return j(a)},get selectedId(){return j(s)},handleSelected:l});var g=K(h,2);{var f=v=>{jf(v,{})},p=v=>{var _=st(),y=nt(_);{var x=S=>{cm(S,{})},w=S=>{var T=st(),b=nt(T);{var E=I=>{Yf(I,{})},D=I=>{var N=st(),z=nt(N);{var L=P=>{eh(P,{})};Ge(z,P=>{j(s)==="combat"&&P(L)},!0)}re(I,N)};Ge(b,I=>{j(s)==="notes"?I(E):I(D,!1)},!0)}re(S,T)};Ge(y,S=>{j(s)==="spells"?S(x):S(w,!1)},!0)}re(v,_)};Ge(g,v=>{j(s)==="inventory"?v(f):v(p,!1)})}re(n,c),ke(),i()}var dm=(n,e)=>{ot();const t=n.target;t&&e.onChange(t.value??"")},pm=de('<input type="text" class="px-1 cursor-pointer w-full text-sm text-white bg-zinc-900/80 border border-gray-300 rounded-md shadow-sm focus:ring-rose-500 focus:border-rose-500"/>');function th(n,e){Ne(e,!0);let t=ar(e,"image",7);var i=pm();i.__input=[dm,e],Ze(()=>De(i,"id",e.id)),tt("focus",i,function(...r){xe==null||xe.apply(this,r)}),Vn(i,t),re(n,i),ke()}vt(["input"]);var fm=de('<div id="portrait" class="h-full md:h-auto"><div class="border rounded-2xl overflow-hidden relative h-full"><img alt="player character" class="object-cover h-[394px] md:h-[300px] w-full"/> <div class="absolute left-0 right-0 top-0 bottom-0 bg-gray-900/80 opacity-0 hover:opacity-100 text-white transition-opacity duration-300 flex flex-col items-center justify-center px-2"><label for="portrait"> </label> <!></div></div></div>');function mm(n,e){Ne(e,!1);const[t,i]=dt(),r=()=>Ce(Ee,"$character",t),a=()=>Ce(It,"$txt",t);function o(g){Ee.update(f=>({...f,portrait:g})),Oe()}hi();var s=fm(),l=G(s),c=G(l),u=K(c,2),d=G(u),h=G(d),m=K(d,2);th(m,{id:"portrait",get image(){return r().portrait},onChange:o}),Ze(g=>{De(c,"src",r().portrait),Ie(h,g)},[()=>a()("portrait")]),re(n,s),ke(),i()}function gm(n,e,t,i,r){j(e)&&(Ns(String(j(e))),at(e,""),at(t,0),fl(""),at(i,r,!0))}var vm=(n,e)=>e("d3"),_m=(n,e)=>e(n,"d3"),xm=(n,e)=>e("d4"),ym=(n,e)=>e(n,"d4"),bm=(n,e)=>e("d6"),wm=(n,e)=>e(n,"d6"),Mm=(n,e)=>e("d8"),Sm=(n,e)=>e(n,"d8"),Em=(n,e)=>e("d10"),Tm=(n,e)=>e(n,"d10"),Am=(n,e)=>e("d12"),Cm=(n,e)=>e(n,"d12"),Lm=(n,e)=>e("d20"),Dm=(n,e)=>e(n,"d20"),Rm=(n,e)=>e("d100"),Pm=(n,e)=>e(n,"d100"),Im=(n,e)=>e("minus"),Fm=(n,e)=>e("plus"),zm=de('<div><div class="border border-stone-700 rounded-md mb-1 bg-stone-900"><!></div> <div class="grid grid-cols-4"><button class="btn-xs">d3</button> <button class="btn-xs">d4</button> <button class="btn-xs">d6</button> <button class="btn-xs">d8</button> <button class="btn-xs">d10</button> <button class="btn-xs">d12</button> <button class="btn-xs">d20</button> <button class="btn-xs">d100</button></div> <div class="flex items-center gap-1"><button class="btn-xs"><!></button> <!> <button class="btn-xs"><!></button> <button class="btn-xs bg-yellow-600!">Roll</button></div></div>');function Nm(n,e){Ne(e,!0);let t=kt(""),i=kt(0);const r={d3:0,d4:0,d6:0,d8:0,d10:0,d12:0,d20:0,d100:0};let a=kt(Sr(r));function o(z){at(a,{...j(a),[z]:j(a)[z]+1},!0),c()}function s(z,L){z.preventDefault(),j(a)[L]>0&&(at(a,{...j(a),[L]:j(a)[L]-1},!0),c())}function l(z){z==="plus"?Pl(i):Pl(i,-1),c()}function c(){let z=[];for(const L of Object.keys(j(a)))j(a)[L]>0&&z.push(`${j(a)[L]}${L}`);if(at(t,z.join("+"),!0),j(i)>0){at(t,`${j(t)}+${j(i)}`);return}j(i)<0&&at(t,`${j(t)}-${j(i)}`)}var u=zm(),d=G(u),h=G(d);Bt(h,{id:"rollResult",name:"",updateInput:c,get value(){return j(t)},disabled:!0});var m=K(d,2),g=G(m);g.__click=[vm,o],g.__contextmenu=[_m,s];var f=K(g,2);f.__click=[xm,o],f.__contextmenu=[ym,s];var p=K(f,2);p.__click=[bm,o],p.__contextmenu=[wm,s];var v=K(p,2);v.__click=[Mm,o],v.__contextmenu=[Sm,s];var _=K(v,2);_.__click=[Em,o],_.__contextmenu=[Tm,s];var y=K(_,2);y.__click=[Am,o],y.__contextmenu=[Cm,s];var x=K(y,2);x.__click=[Lm,o],x.__contextmenu=[Dm,s];var w=K(x,2);w.__click=[Rm,o],w.__contextmenu=[Pm,s];var S=K(m,2),T=G(S);T.__click=[Im,l];var b=G(T);mf(b,{size:14});var E=K(T,2);Bt(E,{id:"",name:"",updateInput:()=>{},get value(){return j(i)},isNumber:!0,disabled:!0});var D=K(E,2);D.__click=[Fm,l];var I=G(D);ml(I,{size:14});var N=K(D,2);N.__click=[gm,t,i,a,r],re(n,u),ke()}vt(["click","contextmenu"]);var km=de('<div class="card flex flex-col gap-2 h-full"><!> <!> <hr/> <!> <!> <!> <!> <hr class="mb-2"/> <!></div>');function Om(n,e){Ne(e,!1);const[t,i]=dt(),r=()=>Ce(It,"$txt",t),a=()=>Ce(Ee,"$character",t);function o(p="languages",v){p==="languages"&&(Ee.update(_=>({..._,info:{..._.info,languages:v}})),Oe())}function s(p,v){(p==="water"||p==="food"||p==="arrows"||p==="torches")&&(Ee.update(_=>({..._,tracking:{..._.tracking,[p]:v}})),Oe())}hi();var l=km(),c=G(l);{let p=Ae(()=>r()("languages"));In(c,{get name(){return j(p)}})}var u=K(c,2);{let p=Ae(()=>r()("languages"));Pf(u,{id:"languages",get name(){return j(p)},updateInput:o,get value(){return a().info.languages}})}var d=K(u,4);{let p=Ae(()=>r()("water")),v=Ae(()=>r()("water"));Tr(d,{id:"water",get label(){return j(p)},get placeholder(){return j(v)},get value(){return a().tracking.water},updateValue:s})}var h=K(d,2);{let p=Ae(()=>r()("food")),v=Ae(()=>r()("food"));Tr(h,{id:"food",get label(){return j(p)},get placeholder(){return j(v)},get value(){return a().tracking.food},updateValue:s})}var m=K(h,2);{let p=Ae(()=>r()("arrows")),v=Ae(()=>r()("arrows"));Tr(m,{id:"arrows",get label(){return j(p)},get placeholder(){return j(v)},get value(){return a().tracking.arrows},updateValue:s})}var g=K(m,2);{let p=Ae(()=>r()("torches")),v=Ae(()=>r()("torches"));Tr(g,{id:"torches",get label(){return j(p)},get placeholder(){return j(v)},get value(){return a().tracking.torches},updateValue:s})}var f=K(g,4);Nm(f,{}),re(n,l),ke(),i()}var Bm=de('<div class="race-class-info"><p>Case target(WIS): casing for weakness/info about opponent</p> <p>Climb(DEX): climb any surface</p> <p>Death attack: Kill target instantly upon successful sneak attack</p> <p>Disguise(CHA): able to conceal/change identity</p> <p>Hide(DEX): hide themselves from others</p> <p>Listen(WIS): hear faint or obscure sound</p> <p>Move silently(DEX): check to move quietly indoors and outdoors</p> <p>Identify poison(INT): identify and make poisons</p> <p>Sneak attack: +2 to hit and +4 damage</p> <p>Traps(INT): check to find, disable or set trap</p> <hr/> <p>Prime: DEX</p> <p>HD: d6</p> <p>Lv1 Atk: +0</p> <p>Weapons: any</p> <p>Armours: Leather, leather coat, and padded</p> <p>Starting gold: 3d4x10</p> <p>Lv2: 1751</p> <hr/> <h3>COMBAT MANEUVERS</h3> <p>Charge: x.2 or x4 mov e, -4 AC, +2 Damage</p> <p>Dodge: + 2 AC vrs 3 opponents, no other action.</p> <h4>Disengage from Combat:</h4> <ul><li>Fighting withdrawal: -1/2 move</li> <li>Hasty withdrawal: -2</li> <li>Full withdrawal: Opponent gets free swing</li></ul> <p>Disarm: Must hit AC 18+level+HD of opponent.</p> <p>Evade: +4AC vrs 1 opponent, no other action</p> <p>Flank Attack: + 1 to hit</p> <p>Rear Attack: + 2 to hit</p> <p>Two Weapon Fighting: -3 primary hand; -6 off hand, modified by dex.</p></div>');function Um(n){var e=Bm();re(n,e)}var Hm=de(`<div class="race-class-info"><p>Combat Sense: +2 bonus to surprise checks and halves an attacker’s back
    attack bonus</p> <p>Deerstalker: outdoor survival skills, determine direction, find shelter and
    food, climbing and swimming</p> <p>Intimidate(CON): -2 to 1 opponent’s combat rolls, attribute checks & saves</p> <p>Primeval instincts: immediate action gains +4 to any physical checks</p> <hr/> <p>Prime: CON</p> <p>HD: d12</p> <p>Lv1 Atk: +0</p> <p>Weapons: any</p> <p>Armours: any</p> <p>Starting gold: 2d4x10</p> <p>Lv2: 2101</p> <hr/> <h3>COMBAT MANEUVERS</h3> <p>Charge: x.2 or x4 mov e, -4 AC, +2 Damage</p> <p>Dodge: + 2 AC vrs 3 opponents, no other action.</p> <h4>Disengage from Combat:</h4> <ul><li>Fighting withdrawal: -1/2 move</li> <li>Hasty withdrawal: -2</li> <li>Full withdrawal: Opponent gets free swing</li></ul> <p>Disarm: Must hit AC 18+level+HD of opponent.</p> <p>Evade: +4AC vrs 1 opponent, no other action</p> <p>Flank Attack: + 1 to hit</p> <p>Rear Attack: + 2 to hit</p> <p>Two Weapon Fighting: -3 primary hand; -6 off hand, modified by dex.</p></div>`);function Gm(n){var e=Hm();re(n,e)}var Wm=de(`<div class="race-class-info"><p>Decipher script(INT): decipher unfamiliar writing</p> <p>Exalt(CHA): inspire companions by exaltation. +2 to any one attribute check</p> <p>Legend Lore(CHA): check specific fact or event</p> <hr/> <p>Prime: CHA</p> <p>HD: d10</p> <p>Lv1 Atk: +0</p> <p>Weapons: Broadsword, bows, club, dagger, dart, hand axe, hammers, javelin,
    longsword, rapier, scimitar, short sword, sling, spear, staff</p> <p>Armours: Breastplates, chain shirt, cuir bouille, greek ensemble, hide,
    laminar leather, leather, leather coat, padded, ring mail, studded leather</p> <p>Starting gold: 3d4x10</p> <p>Lv2: 1501</p> <hr/> <h3>COMBAT MANEUVERS</h3> <p>Charge: x.2 or x4 mov e, -4 AC, +2 Damage</p> <p>Dodge: + 2 AC vrs 3 opponents, no other action.</p> <h4>Disengage from Combat:</h4> <ul><li>Fighting withdrawal: -1/2 move</li> <li>Hasty withdrawal: -2</li> <li>Full withdrawal: Opponent gets free swing</li></ul> <p>Disarm: Must hit AC 18+level+HD of opponent.</p> <p>Evade: +4AC vrs 1 opponent, no other action</p> <p>Flank Attack: + 1 to hit</p> <p>Rear Attack: + 2 to hit</p> <p>Two Weapon Fighting: -3 primary hand; -6 off hand, modified by dex.</p></div>`);function Vm(n){var e=Wm();re(n,e)}var qm=de(`<div class="race-class-info"><p>Turn undead(WIS): turn or destroy undead monsters</p> <p>Weapon selection: weapon of their deity</p> <hr/> <p>Prime: WIS</p> <p>HD: d8</p> <p>Lv1 Atk: +0</p> <p>Weapons: Special, club, crowbill hammer, dagger, light or heavy flail, light
    hammer, light or heavy mace, morningstar, quarterstaff, war hammer</p> <p>Armours: any</p> <p>Starting gold: 2d10x10</p> <p>Spells per day (Lv0: 3, Lv1: 1)</p> <p>Lv2: 2251</p></div>`);function jm(n){var e=qm();re(n,e)}var Xm=de(`<div class="race-class-info"><p>Bonus language: speak druidic language</p> <p>Nature lore(WIS): find shelter or forage for food and identify species of
    plant and animal</p> <hr/> <p>Prime: WIS</p> <p>HD: d8</p> <p>Lv1 Atk: +0</p> <p>Weapons: Bows, club, dagger, dart, hand axe, hammers, scythe, sling, sickle,
    spears, sword (any), staff</p> <p>Armours: Cuir bouille, laminar leather, padded, leather, leather coat, hide</p> <p>Starting gold: 2d10x10</p> <p>Spells per day (Lv0: 3, Lv1: 1)</p> <p>Lv2: 2001</p></div>`);function Ym(n){var e=Xm();re(n,e)}var Zm=de(`<div class="race-class-info"><p>Weapon specialization: Choose 1 weapon to specialize in. +1 BTH and damage</p> <p>Every 4 levels: Gain 1 attack against 1 HD monsters.</p> <p>10th level: Gain 1 extra attack per round.</p> <hr/> <p>Prime: STR</p> <p>HD: d10</p> <p>Lv1 Atk: +1</p> <p>Weapons: any</p> <p>Armours: any</p> <p>Starting gold: 3d8x10</p> <p>Lv2: 2001</p> <hr/> <h3>COMBAT MANEUVERS</h3> <p>Charge: x.2 or x4 mov
    e, -4 AC, +2 Damage</p> <p>Dodge: + 2 AC vrs 3 opponents, no other action.</p> <h4>Disengage from Combat:</h4> <ul><li>Fighting withdrawal: -1/2 move</li> <li>Hasty withdrawal: -2</li> <li>Full withdrawal: Opponent gets free swing</li></ul> <p>Disarm: Must hit AC 18+level+HD of opponent.</p> <p>Evade: +4AC vrs 1 opponent, no other action</p> <p>Flank Attack: + 1 to hit</p> <p>Rear Attack: + 2 to hit</p> <p>Two Weapon Fighting: -3 primary hand; -6 off hand, modified by dex.</p></div>`);function $m(n){var e=Zm();re(n,e)}var Jm=de(`<div class="race-class-info"><p>Spell use: INT 13-15 +1 Lv1 spell, INT 16-17 +1 Lv2 spell, INT 18-19 + 1 Lv3
    spell</p> <p>Disguise(CHA): disguise themselves and impersonate others</p> <p>Sharp senses: +1 to illusion saving throws</p> <hr/> <p>Prime: INT</p> <p>HD: d4</p> <p>Lv1 Atk: +0</p> <p>Weapons: Club, dagger, dart, staff</p> <p>Armours: none</p> <p>Starting gold: 1d10x10</p> <p>Spells per day (Lv0: 4, Lv1: 2)</p> <p>Lv2: 2601</p> <hr/></div>`);function Km(n){var e=Jm();re(n,e)}var Qm=de(`<div class="race-class-info"><p>Birthright Mount: starts with a birthright mount, fully equipped.</p> <p>Horsemanship(DEX): trained in mounted combat: fight, deflect, cover, fall
    softly, leap, charge.</p> <p>Inspire: Giving companions bonus to hit equal to charisma bonus of knight.</p> <hr/> <p>Prime: CHA</p> <p>HD: d10</p> <p>Lv1 Atk: +0</p> <p>Weapons: Any except Code of Conduct limitations</p> <p>Armours: any</p> <p>Starting gold: 6d4x10</p> <p>Lv2: 2251</p> <hr/> <h3>COMBAT MANEUVERS</h3> <p>Charge: x.2 or x4 mov e, -4 AC, +2 Damage</p> <p>Dodge: + 2 AC vrs 3 opponents, no other action.</p> <h4>Disengage from Combat:</h4> <ul><li>Fighting withdrawal: -1/2 move</li> <li>Hasty withdrawal: -2</li> <li>Full withdrawal: Opponent gets free swing</li></ul> <p>Disarm: Must hit AC 18+level+HD of opponent.</p> <p>Evade: +4AC vrs 1 opponent, no other action</p> <p>Flank Attack: + 1 to hit</p> <p>Rear Attack: + 2 to hit</p> <p>Two Weapon Fighting: -3 primary hand; -6 off hand, modified by dex.</p></div>`);function eg(n){var e=Qm();re(n,e)}var tg=de(`<div class="race-class-info"><p>Cure Disease: cure disease once per week</p> <p>Detect Evil: detect evil up to 60 feet</p> <p>Divine Aura: emanate divine aura +2 AC and saves against evil , and cannot
    be touched, by evil creatures</p> <p>Divine Health: Immune to disease</p> <p>Lay on Hands: heal 2 hit points per level once per day</p> <hr/> <p>Prime: CHA</p> <p>HD: d10</p> <p>Lv1 Atk: +0</p> <p>Weapons: any</p> <p>Armours: any</p> <p>Starting gold: 6d4x10</p> <p>Lv2: 2701</p> <hr/> <h3>COMBAT MANEUVERS</h3> <p>Charge: x.2 or x4 mov e, -4 AC, +2 Damage</p> <p>Dodge: + 2 AC vrs 3 opponents, no other action.</p> <h4>Disengage from Combat:</h4> <ul><li>Fighting withdrawal: -1/2 move</li> <li>Hasty withdrawal: -2</li> <li>Full withdrawal: Opponent gets free swing</li></ul> <p>Disarm: Must hit AC 18+level+HD of opponent.</p> <p>Evade: +4AC vrs 1 opponent, no other action</p> <p>Flank Attack: + 1 to hit</p> <p>Rear Attack: + 2 to hit</p> <p>Two Weapon Fighting: -3 primary hand; -6 off hand, modified by dex.</p></div>`);function ig(n){var e=tg();re(n,e)}var rg=de(`<div class="race-class-info"><p>Combat marauder: +1 damage against Humanoids per level</p> <p>Conceal(DEX): themselves in wilderness areas</p> <p>Delay/neutralize poison(WIS): create natural remedies for poison</p> <p>Move silently: in wilderness areas</p> <p>Scale(DEX): natural surfaces and inclines. Climb dangerous inclines with
    successful check</p> <p>Traps(DEX): detect, build and disable simple wilderness traps. +2 bonus to
    checks when actively searching</p> <p>Survival(WIS): find shelter, food and water in wilderness areas for
    themselves and others, determine direction, start a fire</p> <p>Track(WIS): track creatures or hide tracks in wilderness, determine number
    and type of tracked creatures</p> <hr/> <p>Prime: STR</p> <p>HD: d10</p> <p>Lv1 Atk: +0</p> <p>Weapons: any</p> <p>Armours: Breastplates, chainmail hauberk & shirt, cuir bouille, greek
    ensemble, leather, chain coif, leather coat, padded, ring mail, scale mail,
    studded leather</p> <p>Starting gold: 3d8x10</p> <p>Lv2: 2251</p> <hr/> <h3>COMBAT MANEUVERS</h3> <p>Charge: x.2 or x4 mov e, -4 AC, +2 Damage</p> <p>Dodge: + 2 AC vrs 3 opponents, no other action.</p> <h4>Disengage from Combat:</h4> <ul><li>Fighting withdrawal: -1/2 move</li> <li>Hasty withdrawal: -2</li> <li>Full withdrawal: Opponent gets free swing</li></ul> <p>Disarm: Must hit AC 18+level+HD of opponent.</p> <p>Evade: +4AC vrs 1 opponent, no other action</p> <p>Flank Attack: + 1 to hit</p> <p>Rear Attack: + 2 to hit</p> <p>Two Weapon Fighting: -3 primary hand; -6 off hand, modified by dex.</p></div>`);function ng(n){var e=rg();re(n,e)}var ag=de(`<div class="race-class-info"><p>Back attack: +4 BTH and 2x dmg (hide/move silently)</p> <p>Cant: speak cant in coded words and gestures</p> <p>Climb(DEX): climb any surface</p> <p>Decipher script(INT): decipher script/ language/ code.</p> <p>Hide(DEX): conceal themselves from others</p> <p>Listen(WIS): hear noise up to 30 feet</p> <p>Move silently(DEX): move silently indoors and outdoors</p> <p>Open locks(DEX): open mechanical lock</p> <p>Pick pockets(DEX): remove contents of pouch or pocket, perform
    sleight-of-hand</p> <p>Find/disable trap(INT): find, disable or set trap</p> <hr/> <p>Prime: DEX</p> <p>HD: d6</p> <p>Lv1 Atk: +0</p> <p>Weapons: Blowpipe, broadsword, cat-o-nine-tails, cestus, club, dagger, dart,
    light hammer, hand axe, hand crossbow, javelin, knife, light crossbow,
    longsword, mace, main gauche, quarterstaff, rapier, sap, shortbow, short
    sword, sickle, sleeve tangler, spiked gauntlet, sling, whip</p> <p>Armours: Leather, leather coat, and padded</p> <p>Starting gold: 3d4x10</p> <p>Lv2: 1251</p> <hr/></div>`);function sg(n){var e=ag();re(n,e)}var og=de('<div class="race-class-info"><hr/> <p>Prime: INT</p> <p>HD: d4</p> <p>Lv1 Atk: +0</p> <p>Weapons: Club, dagger, dart, staff</p> <p>Armours: none</p> <p>Starting gold: 1d10x10</p> <p>Spells per day (Lv0: 4, Lv1: 2)</p> <p>Lv2: 2601</p></div>');function lg(n){var e=og();re(n,e)}var cg=de('<div class="race-class-info"><p>Animosity (elves): -2 CHA checks</p> <p>Deepvision: can see in complete darkness for up to 120 feet</p> <p>Determine depth and direction: in the depps can sense depth and direction</p> <p>Enmity (goblins/orcs): +1 to hit. -4 CHA checks</p> <p>Defensive expertise(giant/ogres): +4 AC</p> <p>Resistant to arcane magic: saving throw +3</p> <p>Resitant to fear: saving throw +2</p> <p>Resitant to poison: saving throw +2</p> <p>Stonecraft(WIS): +2 spotting sliding walls, stone traps (+4 when examining actively, until 10ft)</p> <p>Class modifier: +2 Find Traps In Structures Only</p> <hr/> <p>Size: small</p> <p>Speed: 20ft</p> <p>Attr: +1 CON, -1 DEX</p> <p>Languages: Common, Dwarven, Gnome, Goblinoid, Halfling, Elven, Ogrish, Giant, Troll</p> <p>Typical Classes: Fighter, Rogue, Barbarian, Cleric, Bard</p></div>');function ug(n){var e=cg();re(n,e)}var hg=de('<div class="race-class-info"><p>Enhanced senses: +2 checks involving listening</p> <p>Twilight vision: under starlight, moonlight or torchlight</p> <p>Move silently(DEX): wilderness. 1/2 speed. Full speed -5 to check</p> <p>Spell Resistance: +10 vs sleep, charm</p> <p>Spot hidden doors (WIS): check when passing withing 5ft.  +2 when actively search</p> <p>Weapon training: +1 bth, in one weapon type: composite longbow, composite shortbow, longbow, shortbow, longsword, shortsword</p> <p>Class Modifier: +2 Listen, +2 Move Silent, +2 Find Traps</p> <hr/> <p>Attr: +1 DEX, -1 CON</p> <p>Languages: Common, Elf, Dwarf, Gnome, Goblin, Halfling, and Orc</p> <p>Typical Classes: Fighter, Ranger, Rogue, Wizard, Druid, Knight, Bard</p></div>');function dg(n){var e=hg();re(n,e)}var pg=de('<div class="race-class-info"><p>Animal empathy: communicate with burrowing mammals (badger, fox, mole, rabbit, etc.)</p> <p>Combat Exertise (goblins, kobolds): +1 to hit in melee combat</p> <p>Darkvision: can see in complete darkness for up to 60 feet</p> <p>Enhanced hearing: +3 checks involving listening</p> <p>Spells: cast 1 spell/day: dancing lights, ghost sound or prestidigitation</p> <p>Class Modifier: +3 Listen</p> <hr/> <p>Size: small</p> <p>Speed: 20ft</p> <p>Attr: +1 INT, -1 STR</p> <p>Languages: Common, Dwarf, Elf, Gnome, Goblin, Kobold</p> <p>Typical Classes: Rogue, Illusionist, Druid, Bard</p></div>');function fg(n){var e=pg();re(n,e)}var mg=de('<div class="race-class-info"><p>Empathy: +2 all CHA checks</p> <p>Move silently(DEX): wilderness. 1/2 speed. Full speed -5 to check</p> <p>Spot hidden doors (WIS): check when passing withing 5ft.  +1 when actively search</p> <p>Enhanced senses: +2 checks involving listening</p> <p>Spell Resistance: +4 vs sleep, charm</p> <p>Class Modifier: +2 Listen, +2 Move Silent, +2 Find Traps</p> <hr/> <p>Attr: +1 DEX, -1 CON</p> <p>Languages: Common, Elf, and three of the following: Dwarf, Gnome, Goblin, Halfling, and Orc</p> <p>Typical classes: any</p></div>');function gg(n){var e=mg();re(n,e)}var vg=de('<div class="race-class-info"><p>Fearless: +2 against fear</p> <p>Hide (DEX): almost invisible. at 1/2 speed check -5, full speed check -10</p> <p>Move silently(DEX): wilderness. 1/2 speed. Full speed -5 to check</p> <p>Duskvision: under starlight, moonlight</p> <p>Resistant: +1 to all CON saving throws</p> <p>Class Modifier:+ 2 Conceal, +2 Hide, +2 Move Silent</p> <hr/> <p>Size: small</p> <p>Speed: 20ft</p> <p>Attr: +1 DEX, -1 STR</p> <p>Languages: Halfling, Common, Dwarven, Gnome, Elvish, Sylvan, Goblinoid</p> <p>Typical Classes: Fighter, Ranger, Rogue, Cleric, Druid, Bard</p></div>');function _g(n){var e=vg();re(n,e)}var xg=de('<div class="race-class-info"><p>Darkvision: can see in complete darkness for up to 60 feet</p> <p>Enhanced sense of smell: detect the presence of creatures within 30 feet (60ft upwind). Can recognize individual scent</p> <p>Martial Prowess: +1 to AC whenever they are not wearing armor of any type</p> <p>Resistant to disease: +2 to all disease saving throws</p> <p>Attribute modifiers: +1 CON, +1 STR, -2 CHA</p> <p>Class Modifier: +2 Track</p> <p>Typical Classes: Fighter, Ranger, Rogue, Assassin, Barbarian, Monk, Cleric, Knight</p></div>');function yg(n){var e=xg();re(n,e)}var bg=de('<div class="race-class-info"><p>3 primary attributes</p> <p>Typical Classes: Any</p></div>');function wg(n){var e=bg();re(n,e)}var Mg=de("<!>.toLowerCase().trim()",1),Sg=de("<div></div>"),Eg=de('<div id="raceInfo" class="card flex-1 py-3!"><h2 class="font-bold text-2xl text-left"> </h2> <!></div>'),Tg=de("<div></div>"),Ag=de('<div id="classeInfo" class="card flex-1 py-3!"><h2 class="font-bold text-2xl text-left"> </h2> <!></div>'),Cg=de('<div class="mt-4 grid grid-cols-1 md:grid-cols-2 m-auto max-w-[1200px] justify-between gap-4"><!> <!></div>');function Lg(n,e){Ne(e,!0);const[t,i]=dt(),r=()=>Ce(Ee,"$character",t),a=()=>Ce(It,"$txt",t),o=Gt(()=>r().info.race.toLowerCase().trim()),s=Gt(()=>r().info.charClass.toLowerCase().trim());var l=Cg(),c=G(l);{var u=m=>{var g=Eg(),f=G(g),p=G(f),v=K(f,2);{var _=x=>{ug(x)},y=x=>{var w=st(),S=nt(w);{var T=E=>{var D=Mg(),I=nt(D);dg(I),re(E,D)},b=E=>{var D=st(),I=nt(D);{var N=L=>{fg(L)},z=L=>{var P=st(),F=nt(P);{var H=k=>{gg(k)},X=k=>{var V=st(),ie=nt(V);{var U=oe=>{yg(oe)},te=oe=>{var Re=st(),Q=nt(Re);{var Be=ae=>{_g(ae)},Se=ae=>{var ne=st(),He=nt(ne);{var Pe=Je=>{wg(Je)},be=Je=>{var _t=Sg();re(Je,_t)};Ge(He,Je=>{j(o)===(a()("human").toLowerCase().trim()||"human")?Je(Pe):Je(be,!1)},!0)}re(ae,ne)};Ge(Q,ae=>{j(o)===(a()("halfling").toLowerCase().trim()||"halfling")?ae(Be):ae(Se,!1)},!0)}re(oe,Re)};Ge(ie,oe=>{j(o)===(a()("halfOrc").toLowerCase().trim()||"half-orc")?oe(U):oe(te,!1)},!0)}re(k,V)};Ge(F,k=>{j(o)===(a()("halfElf").toLowerCase().trim()||"half-elf")?k(H):k(X,!1)},!0)}re(L,P)};Ge(I,L=>{j(o)===(a()("gnome").toLowerCase().trim()||"gnome")?L(N):L(z,!1)},!0)}re(E,D)};Ge(S,E=>{j(o)===(a()("elf").toLowerCase().trim()||"elf")?E(T):E(b,!1)},!0)}re(x,w)};Ge(v,x=>{j(o)===(a()("dwarf").toLowerCase().trim()||"dwarf")?x(_):x(y,!1)})}Ze(()=>Ie(p,j(o))),re(m,g)};Ge(c,m=>{(j(o)||j(o)!=="")&&m(u)})}var d=K(c,2);{var h=m=>{var g=Ag(),f=G(g),p=G(f),v=K(f,2);{var _=x=>{Um(x)},y=x=>{var w=st(),S=nt(w);{var T=E=>{lg(E)},b=E=>{var D=st(),I=nt(D);{var N=L=>{sg(L)},z=L=>{var P=st(),F=nt(P);{var H=k=>{ng(k)},X=k=>{var V=st(),ie=nt(V);{var U=oe=>{ig(oe)},te=oe=>{var Re=st(),Q=nt(Re);{var Be=ae=>{eg(ae)},Se=ae=>{var ne=st(),He=nt(ne);{var Pe=Je=>{Km(Je)},be=Je=>{var _t=st(),Ft=nt(_t);{var pi=qe=>{$m(qe)},wt=qe=>{var fi=st(),mi=nt(fi);{var R=$=>{Ym($)},A=$=>{var se=st(),le=nt(se);{var pe=Y=>{jm(Y)},Le=Y=>{var we=st(),ve=nt(we);{var ye=Te=>{Vm(Te)},_e=Te=>{var Ke=st(),ut=nt(Ke);{var O=Z=>{Gm(Z)},fe=Z=>{var me=Tg();re(Z,me)};Ge(ut,Z=>{j(s)===(a()("barbarian").toLowerCase().trim()||"barbarian")?Z(O):Z(fe,!1)},!0)}re(Te,Ke)};Ge(ve,Te=>{j(s)===(a()("bard").toLowerCase().trim()||"bard")?Te(ye):Te(_e,!1)},!0)}re(Y,we)};Ge(le,Y=>{j(s)===(a()("cleric").toLowerCase().trim()||"cleric")?Y(pe):Y(Le,!1)},!0)}re($,se)};Ge(mi,$=>{j(s)===(a()("druid").toLowerCase().trim()||"druid")?$(R):$(A,!1)},!0)}re(qe,fi)};Ge(Ft,qe=>{j(s)===(a()("fighter").toLowerCase().trim()||"fighter")?qe(pi):qe(wt,!1)},!0)}re(Je,_t)};Ge(He,Je=>{j(s)===(a()("illusionist").toLowerCase().trim()||"illusionist")?Je(Pe):Je(be,!1)},!0)}re(ae,ne)};Ge(Q,ae=>{j(s)===(a()("knight").toLowerCase().trim()||"knight")?ae(Be):ae(Se,!1)},!0)}re(oe,Re)};Ge(ie,oe=>{j(s)===(a()("paladin").toLowerCase().trim()||"paladin")?oe(U):oe(te,!1)},!0)}re(k,V)};Ge(F,k=>{j(s)===(a()("ranger").toLowerCase().trim()||"ranger")?k(H):k(X,!1)},!0)}re(L,P)};Ge(I,L=>{j(s)===(a()("rogue").toLowerCase().trim()||"rogue")?L(N):L(z,!1)},!0)}re(E,D)};Ge(S,E=>{j(s)===(a()("wizard").toLowerCase().trim()||"wizard")?E(T):E(b,!1)},!0)}re(x,w)};Ge(v,x=>{j(s)===(a()("assassin").toLowerCase().trim()||"assassin")?x(_):x(y,!1)})}Ze(()=>Ie(p,j(s))),re(m,g)};Ge(d,m=>{(j(s)||j(s)!=="")&&m(h)})}re(n,l),ke(),i()}const Dg="0.5.2",Rg={version:Dg};var Pg=de('<footer class="bg-zinc-900 text-white px-4 py-5 mt-8 flex flex-col items-center"><div class="m-auto w-full max-w-[1200px] flex justify-between items-center flex-col md:flex-row gap-2"><div class="flex items-center flex-1 max-w-[350px] gap-2"><label for="bg"> </label> <!></div></div> <div class="text-center mt-5 w-[50vw] max-w-[1200px]"><small> <br/> </small> <p><a href="https://github.com/augustolimads/castles-crusades-sheet" class="mt-5 text-xs px-1"> </a></p></div></footer>');function Ig(n,e){Ne(e,!1);const[t,i]=dt(),r=()=>Ce(It,"$txt",t),a=()=>Ce(Ee,"$character",t);function o(w){Ee.update(S=>({...S,bg:w})),Oe()}const s=new Date().getFullYear();hi();var l=Pg(),c=G(l),u=G(c),d=G(u),h=G(d),m=K(d,2);th(m,{id:"bg",get image(){return a().bg},onChange:o});var g=K(c,2),f=G(g),p=G(f),v=K(p,2,!0),_=K(f,2),y=G(_),x=G(y);Ze((w,S,T,b)=>{Ie(h,w),Ie(p,S),Ie(v,T),Ie(x,`${b??""}
        Augusto © ${s??""} - Version ${Rg.version}`)},[()=>r()("background"),()=>r()("smallTermOfUse00"),()=>r()("smallTermOfUse01"),()=>r()("madeWithLove")]),re(n,l),ke(),i()}var Fg=(n,e)=>e.handleOpenDrawer(!1),zg=de('<div aria-labelledby="drawer-title" role="dialog" aria-modal="true"><div id="drawer-overlay" class="fixed inset-0 bg-gray-950/75 transition-opacity" aria-hidden="true"></div> <div class="fixed inset-0 overflow-hidden"><div class="absolute inset-0 overflow-hidden"><div><div class="pointer-events-auto relative w-screen max-w-md"><div class="absolute top-0 right-0 md:-ml-8 flex pt-4 pl-2 -mr-8 sm:-mr-10 sm:pl-4"><button type="button" class="cursor-pointer relative rounded-md text-gray-300 hover:text-white focus-visible:ring-2 focus-visible:ring-white focus-visible:outline-hidden"><span class="absolute -inset-2.5"></span> <span class="sr-only">Close panel</span> <svg class="size-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" data-slot="icon"><path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12"></path></svg></button></div> <div class="flex h-full flex-col bg-gray-950/98 border border-l-0 border-white py-6 shadow-xl rounded-r-2xl text-white"><div class="px-4 sm:px-6"><h2 class="text-base font-semibold" id="drawer-title"> </h2></div> <div class="relative mt-6 flex-1 px-4 sm:px-6 overflow-y-auto"><!></div></div></div></div></div></div></div>');function Ng(n,e){Ne(e,!0);var t=zg(),i=K(G(t),2),r=G(i),a=G(r);let o;var s=G(a),l=G(s),c=G(l);c.__click=[Fg,e];var u=K(l,2),d=G(u),h=G(d),m=G(h),g=K(d,2),f=G(g);sn(f,()=>e.children),Ze(p=>{Lr(t,1,"relative z-10 "+(e.open?"opacity-100 pointer-events-auto":"opacity-0 pointer-events-none")),o=Lr(a,1,"pointer-events-none fixed inset-y-0 left-0 flex max-w-full pr-10 sm:pr-16 transform transition-transform duration-300 ease-in-out",null,o,p),Ie(m,e.title)},[()=>({"translate-x-0":e.open,"-translate-x-full":!e.open})]),re(n,t),ke()}vt(["click"]);function kg(n,e){wp(e.character.id),window.location.href="/castles-crusades-sheet/",e.handleOpenDrawer(!1)}var Og=de('<div class="flex align-center gap-2"><div class="border rounded-2xl overflow-hidden h-16 hover:text-rose-500 brightness-60 hover:brightness-100 transition-all duration-300 ease-in-out flex-1"><a class="flex items-center gap-2 rounded-2xl overflow-hidden p-2"><img width="48" height="48" class="object-cover rounded-full w-12 h-12"/> <span> </span> <span> </span> <span> </span> <span> </span></a></div> <button class="flex justify-center items-center cursor-pointer"><!></button></div>');function Bg(n,e){Ne(e,!0);var t=Og(),i=G(t),r=G(i),a=G(r),o=K(a,2),s=G(o),l=K(o,2),c=G(l),u=K(l,2),d=G(u),h=K(u,2),m=G(h),g=K(i,2);g.__click=[kg,e];var f=G(g);ks(f,{class:"text-white",size:24}),Ze(()=>{ll(i,`background-image: url(${e.character.bg??""})`),De(r,"href",`?char=${e.character.id}`),De(a,"src",e.character.portrait),De(a,"alt",e.character.name),Ie(s,e.character.name),Ie(c,e.character.race),Ie(d,e.character.charClass),Ie(m,e.character.level)}),re(n,t),ke()}vt(["click"]);var Ug=de('<div class="flex flex-col gap-4 h-[45rem] overflow-y-auto"></div>');function Hg(n,e){var t=Ug();Pr(t,21,()=>e.characters,i=>i.id,(i,r)=>{Bg(i,{get character(){return j(r)},get handleOpenDrawer(){return e.handleOpenDrawer}})}),re(n,t)}function Gg(){return localStorage.getItem("locale")??"en"}function ih(n){localStorage.setItem("locale",n)}const Wg=Ri(Gg());Wg.subscribe(n=>{ih(n)});function Vg(n,e){const t=n.target;ha(Hr,t.value);const i=new URL(window.location.href);i.searchParams.set("lang",String(e())),window.history.pushState({},"",i.toString()),ih(e())}var qg=(n,e)=>e(!0),jg=de('<div class="flex flex-col gap-2"><a class="btn-xs"> </a> <hr/> <!></div> <div id="footer" class="flex items-center flex-col gap-2"><select class="bg-gray-800! input"><option>English</option><option>Português</option></select> <hr/> <div class="w-full"><!></div></div>',1),Xg=de('<div class="text-white flex justify-center text-center w-full pt-4 md:py-8"><button class="flex cursor-pointer px-2 py-1.5"><!></button> <!></div>');function Yg(n,e){Ne(e,!0);const[t,i]=dt(),r=()=>Ce(Hr,"$locale",t),a=()=>Ce(Rr,"$discord",t),o=()=>Ce(It,"$txt",t),s=()=>Ce($u,"$characterList",t);let l=kt(!1);function c(f){at(l,f,!0),f&&Ap()}function u(f,p){zp(String(p)),localStorage.setItem("discord_webhook",String(a().webhook))}qi(()=>{const p=new URL(window.location.href).searchParams.get("lang"),v=localStorage.getItem("lang"),_=localStorage.getItem("discord_webhook");if(p){ha(Hr,p);return}if(v){ha(Hr,v);return}ha(Hr,"en"),_&&Rr.update(y=>({...y,webhook:_}))});var d=Xg(),h=G(d);h.__click=[qg,c];var m=G(h);ff(m,{size:32});var g=K(h,2);{let f=Gt(()=>o()("title"));Ng(g,{get open(){return j(l)},get title(){return j(f)},handleOpenDrawer:c,children:(p,v)=>{var _=jg(),y=nt(_),x=G(y),w=G(x),S=K(x,4);Hg(S,{get characters(){return s()},handleOpenDrawer:c});var T=K(y,2),b=G(T);b.__change=[Vg,r];var E=G(b);E.value=E.__value="en";var D=K(E);D.value=D.__value="pt";var I=K(b,4),N=G(I);Bt(N,{id:"discord",name:"link discord webhook",updateInput:u,get value(){return a().webhook}}),Ze(z=>{De(x,"href","/castles-crusades-sheet/"),Ie(w,z)},[()=>o()("newCharacterBtn")]),op(b,r,z=>ha(Hr,z)),re(p,_)},$$slots:{default:!0}})}re(n,d),ke(),i()}vt(["click","change"]);var Zg=Object.defineProperty,$g=(n,e,t)=>e in n?Zg(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,Jg=(n,e,t)=>($g(n,e+"",t),t);/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const gl="143",rr="srgb",Vr="srgb-linear",Zl="300 es";class jn{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const t=this._listeners[e.type];if(t!==void 0){e.target=this;const i=t.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}const Ut=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],io=Math.PI/180,qo=180/Math.PI;function La(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Ut[n&255]+Ut[n>>8&255]+Ut[n>>16&255]+Ut[n>>24&255]+"-"+Ut[e&255]+Ut[e>>8&255]+"-"+Ut[e>>16&15|64]+Ut[e>>24&255]+"-"+Ut[t&63|128]+Ut[t>>8&255]+"-"+Ut[t>>16&255]+Ut[t>>24&255]+Ut[i&255]+Ut[i>>8&255]+Ut[i>>16&255]+Ut[i>>24&255]).toLowerCase()}function ai(n,e,t){return Math.max(e,Math.min(t,n))}function Kg(n,e){return(n%e+e)%e}function ro(n,e,t){return(1-t)*n+t*e}function $l(n){return(n&n-1)===0&&n!==0}function jo(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}class $e{constructor(e=0,t=0){$e.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),a=this.x-e.x,o=this.y-e.y;return this.x=a*i-o*r+e.x,this.y=a*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class wi{constructor(){wi.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,i,r,a,o,s,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=s,u[3]=t,u[4]=a,u[5]=l,u[6]=i,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,a=this.elements,o=i[0],s=i[3],l=i[6],c=i[1],u=i[4],d=i[7],h=i[2],m=i[5],g=i[8],f=r[0],p=r[3],v=r[6],_=r[1],y=r[4],x=r[7],w=r[2],S=r[5],T=r[8];return a[0]=o*f+s*_+l*w,a[3]=o*p+s*y+l*S,a[6]=o*v+s*x+l*T,a[1]=c*f+u*_+d*w,a[4]=c*p+u*y+d*S,a[7]=c*v+u*x+d*T,a[2]=h*f+m*_+g*w,a[5]=h*p+m*y+g*S,a[8]=h*v+m*x+g*T,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],a=e[3],o=e[4],s=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*s*c-i*a*u+i*s*l+r*a*c-r*o*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],a=e[3],o=e[4],s=e[5],l=e[6],c=e[7],u=e[8],d=u*o-s*c,h=s*l-u*a,m=c*a-o*l,g=t*d+i*h+r*m;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/g;return e[0]=d*f,e[1]=(r*c-u*i)*f,e[2]=(s*i-r*o)*f,e[3]=h*f,e[4]=(u*t-r*l)*f,e[5]=(r*a-s*t)*f,e[6]=m*f,e[7]=(i*l-c*t)*f,e[8]=(o*t-i*a)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,a,o,s){const l=Math.cos(a),c=Math.sin(a);return this.set(i*l,i*c,-i*(l*o+c*s)+o+e,-r*c,r*l,-r*(-c*o+l*s)+s+t,0,0,1),this}scale(e,t){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){const t=Math.cos(e),i=Math.sin(e),r=this.elements,a=r[0],o=r[3],s=r[6],l=r[1],c=r[4],u=r[7];return r[0]=t*a+i*l,r[3]=t*o+i*c,r[6]=t*s+i*u,r[1]=-i*a+t*l,r[4]=-i*o+t*c,r[7]=-i*s+t*u,this}translate(e,t){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function rh(n){for(let e=n.length-1;e>=0;--e)if(n[e]>65535)return!0;return!1}function ws(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function $r(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function us(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}const no={[rr]:{[Vr]:$r},[Vr]:{[rr]:us}},Si={legacyMode:!0,get workingColorSpace(){return Vr},set workingColorSpace(n){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(n,e,t){if(this.legacyMode||e===t||!e||!t)return n;if(no[e]&&no[e][t]!==void 0){const i=no[e][t];return n.r=i(n.r),n.g=i(n.g),n.b=i(n.b),n}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(n,e){return this.convert(n,this.workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this.workingColorSpace)}},nh={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Mt={r:0,g:0,b:0},Ei={h:0,s:0,l:0},Oa={h:0,s:0,l:0};function ao(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}function Ba(n,e){return e.r=n.r,e.g=n.g,e.b=n.b,e}class Ye{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&i===void 0?this.set(e):this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=rr){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Si.toWorkingColorSpace(this,t),this}setRGB(e,t,i,r=Vr){return this.r=e,this.g=t,this.b=i,Si.toWorkingColorSpace(this,r),this}setHSL(e,t,i,r=Vr){if(e=Kg(e,1),t=ai(t,0,1),i=ai(i,0,1),t===0)this.r=this.g=this.b=i;else{const a=i<=.5?i*(1+t):i+t-i*t,o=2*i-a;this.r=ao(o,a,e+1/3),this.g=ao(o,a,e),this.b=ao(o,a,e-1/3)}return Si.toWorkingColorSpace(this,r),this}setStyle(e,t=rr){function i(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let a;const o=r[1],s=r[2];switch(o){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,Si.toWorkingColorSpace(this,t),i(a[4]),this;if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,Si.toWorkingColorSpace(this,t),i(a[4]),this;break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){const l=parseFloat(a[1])/360,c=parseInt(a[2],10)/100,u=parseInt(a[3],10)/100;return i(a[4]),this.setHSL(l,c,u,t)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const a=r[1],o=a.length;if(o===3)return this.r=parseInt(a.charAt(0)+a.charAt(0),16)/255,this.g=parseInt(a.charAt(1)+a.charAt(1),16)/255,this.b=parseInt(a.charAt(2)+a.charAt(2),16)/255,Si.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(a.charAt(0)+a.charAt(1),16)/255,this.g=parseInt(a.charAt(2)+a.charAt(3),16)/255,this.b=parseInt(a.charAt(4)+a.charAt(5),16)/255,Si.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=rr){const i=nh[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=$r(e.r),this.g=$r(e.g),this.b=$r(e.b),this}copyLinearToSRGB(e){return this.r=us(e.r),this.g=us(e.g),this.b=us(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=rr){return Si.fromWorkingColorSpace(Ba(this,Mt),e),ai(Mt.r*255,0,255)<<16^ai(Mt.g*255,0,255)<<8^ai(Mt.b*255,0,255)<<0}getHexString(e=rr){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Vr){Si.fromWorkingColorSpace(Ba(this,Mt),t);const i=Mt.r,r=Mt.g,a=Mt.b,o=Math.max(i,r,a),s=Math.min(i,r,a);let l,c;const u=(s+o)/2;if(s===o)l=0,c=0;else{const d=o-s;switch(c=u<=.5?d/(o+s):d/(2-o-s),o){case i:l=(r-a)/d+(r<a?6:0);break;case r:l=(a-i)/d+2;break;case a:l=(i-r)/d+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=Vr){return Si.fromWorkingColorSpace(Ba(this,Mt),t),e.r=Mt.r,e.g=Mt.g,e.b=Mt.b,e}getStyle(e=rr){return Si.fromWorkingColorSpace(Ba(this,Mt),e),e!==rr?`color(${e} ${Mt.r} ${Mt.g} ${Mt.b})`:`rgb(${Mt.r*255|0},${Mt.g*255|0},${Mt.b*255|0})`}offsetHSL(e,t,i){return this.getHSL(Ei),Ei.h+=e,Ei.s+=t,Ei.l+=i,this.setHSL(Ei.h,Ei.s,Ei.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Ei),e.getHSL(Oa);const i=ro(Ei.h,Oa.h,t),r=ro(Ei.s,Oa.s,t),a=ro(Ei.l,Oa.l,t);return this.setHSL(i,r,a),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Ye.NAMES=nh;let fn;class ah{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{fn===void 0&&(fn=ws("canvas")),fn.width=e.width,fn.height=e.height;const i=fn.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=fn}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ws("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),a=r.data;for(let o=0;o<a.length;o++)a[o]=$r(a[o]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor($r(t[i]/255)*255):t[i]=$r(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class sh{constructor(e=null){this.isSource=!0,this.uuid=La(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let a;if(Array.isArray(r)){a=[];for(let o=0,s=r.length;o<s;o++)r[o].isDataTexture?a.push(so(r[o].image)):a.push(so(r[o]))}else a=so(r);i.url=a}return t||(e.images[this.uuid]=i),i}}function so(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?ah.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Qg=0;class ui extends jn{constructor(e=ui.DEFAULT_IMAGE,t=ui.DEFAULT_MAPPING,i=1001,r=1001,a=1006,o=1008,s=1023,l=1009,c=1,u=3e3){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Qg++}),this.uuid=La(),this.name="",this.source=new sh(e),this.mipmaps=[],this.mapping=t,this.wrapS=i,this.wrapT=r,this.magFilter=a,this.minFilter=o,this.anisotropy=c,this.format=s,this.internalFormat=null,this.type=l,this.offset=new $e(0,0),this.repeat=new $e(1,1),this.center=new $e(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new wi,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==300)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}ui.DEFAULT_IMAGE=null;ui.DEFAULT_MAPPING=300;class Et{constructor(e=0,t=0,i=0,r=1){Et.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,a=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*r+o[12]*a,this.y=o[1]*t+o[5]*i+o[9]*r+o[13]*a,this.z=o[2]*t+o[6]*i+o[10]*r+o[14]*a,this.w=o[3]*t+o[7]*i+o[11]*r+o[15]*a,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,a;const o=e.elements,s=o[0],l=o[4],c=o[8],u=o[1],d=o[5],h=o[9],m=o[2],g=o[6],f=o[10];if(Math.abs(l-u)<.01&&Math.abs(c-m)<.01&&Math.abs(h-g)<.01){if(Math.abs(l+u)<.1&&Math.abs(c+m)<.1&&Math.abs(h+g)<.1&&Math.abs(s+d+f-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const v=(s+1)/2,_=(d+1)/2,y=(f+1)/2,x=(l+u)/4,w=(c+m)/4,S=(h+g)/4;return v>_&&v>y?v<.01?(i=0,r=.707106781,a=.707106781):(i=Math.sqrt(v),r=x/i,a=w/i):_>y?_<.01?(i=.707106781,r=0,a=.707106781):(r=Math.sqrt(_),i=x/r,a=S/r):y<.01?(i=.707106781,r=.707106781,a=0):(a=Math.sqrt(y),i=w/a,r=S/a),this.set(i,r,a,t),this}let p=Math.sqrt((g-h)*(g-h)+(c-m)*(c-m)+(u-l)*(u-l));return Math.abs(p)<.001&&(p=1),this.x=(g-h)/p,this.y=(c-m)/p,this.z=(u-l)/p,this.w=Math.acos((s+d+f-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class en extends jn{constructor(e,t,i={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Et(0,0,e,t),this.scissorTest=!1,this.viewport=new Et(0,0,e,t);const r={width:e,height:t,depth:1};this.texture=new ui(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:1006,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new sh(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class oh extends ui{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ev extends ui{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Da{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,a,o,s){let l=i[r+0],c=i[r+1],u=i[r+2],d=i[r+3];const h=a[o+0],m=a[o+1],g=a[o+2],f=a[o+3];if(s===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=d;return}if(s===1){e[t+0]=h,e[t+1]=m,e[t+2]=g,e[t+3]=f;return}if(d!==f||l!==h||c!==m||u!==g){let p=1-s;const v=l*h+c*m+u*g+d*f,_=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){const w=Math.sqrt(y),S=Math.atan2(w,v*_);p=Math.sin(p*S)/w,s=Math.sin(s*S)/w}const x=s*_;if(l=l*p+h*x,c=c*p+m*x,u=u*p+g*x,d=d*p+f*x,p===1-s){const w=1/Math.sqrt(l*l+c*c+u*u+d*d);l*=w,c*=w,u*=w,d*=w}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=d}static multiplyQuaternionsFlat(e,t,i,r,a,o){const s=i[r],l=i[r+1],c=i[r+2],u=i[r+3],d=a[o],h=a[o+1],m=a[o+2],g=a[o+3];return e[t]=s*g+u*d+l*m-c*h,e[t+1]=l*g+u*h+c*d-s*m,e[t+2]=c*g+u*m+s*h-l*d,e[t+3]=u*g-s*d-l*h-c*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,a=e._z,o=e._order,s=Math.cos,l=Math.sin,c=s(i/2),u=s(r/2),d=s(a/2),h=l(i/2),m=l(r/2),g=l(a/2);switch(o){case"XYZ":this._x=h*u*d+c*m*g,this._y=c*m*d-h*u*g,this._z=c*u*g+h*m*d,this._w=c*u*d-h*m*g;break;case"YXZ":this._x=h*u*d+c*m*g,this._y=c*m*d-h*u*g,this._z=c*u*g-h*m*d,this._w=c*u*d+h*m*g;break;case"ZXY":this._x=h*u*d-c*m*g,this._y=c*m*d+h*u*g,this._z=c*u*g+h*m*d,this._w=c*u*d-h*m*g;break;case"ZYX":this._x=h*u*d-c*m*g,this._y=c*m*d+h*u*g,this._z=c*u*g-h*m*d,this._w=c*u*d+h*m*g;break;case"YZX":this._x=h*u*d+c*m*g,this._y=c*m*d+h*u*g,this._z=c*u*g-h*m*d,this._w=c*u*d-h*m*g;break;case"XZY":this._x=h*u*d-c*m*g,this._y=c*m*d-h*u*g,this._z=c*u*g+h*m*d,this._w=c*u*d+h*m*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],a=t[8],o=t[1],s=t[5],l=t[9],c=t[2],u=t[6],d=t[10],h=i+s+d;if(h>0){const m=.5/Math.sqrt(h+1);this._w=.25/m,this._x=(u-l)*m,this._y=(a-c)*m,this._z=(o-r)*m}else if(i>s&&i>d){const m=2*Math.sqrt(1+i-s-d);this._w=(u-l)/m,this._x=.25*m,this._y=(r+o)/m,this._z=(a+c)/m}else if(s>d){const m=2*Math.sqrt(1+s-i-d);this._w=(a-c)/m,this._x=(r+o)/m,this._y=.25*m,this._z=(l+u)/m}else{const m=2*Math.sqrt(1+d-i-s);this._w=(o-r)/m,this._x=(a+c)/m,this._y=(l+u)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ai(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,a=e._z,o=e._w,s=t._x,l=t._y,c=t._z,u=t._w;return this._x=i*u+o*s+r*c-a*l,this._y=r*u+o*l+a*s-i*c,this._z=a*u+o*c+i*l-r*s,this._w=o*u-i*s-r*l-a*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,a=this._z,o=this._w;let s=o*e._w+i*e._x+r*e._y+a*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=o,this._x=i,this._y=r,this._z=a,this;const l=1-s*s;if(l<=Number.EPSILON){const m=1-t;return this._w=m*o+t*this._w,this._x=m*i+t*this._x,this._y=m*r+t*this._y,this._z=m*a+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,s),d=Math.sin((1-t)*u)/c,h=Math.sin(t*u)/c;return this._w=o*d+this._w*h,this._x=i*d+this._x*h,this._y=r*d+this._y*h,this._z=a*d+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),a=2*Math.PI*Math.random();return this.set(t*Math.cos(r),i*Math.sin(a),i*Math.cos(a),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class B{constructor(e=0,t=0,i=0){B.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Jl.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Jl.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,a=e.elements;return this.x=a[0]*t+a[3]*i+a[6]*r,this.y=a[1]*t+a[4]*i+a[7]*r,this.z=a[2]*t+a[5]*i+a[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,a=e.elements,o=1/(a[3]*t+a[7]*i+a[11]*r+a[15]);return this.x=(a[0]*t+a[4]*i+a[8]*r+a[12])*o,this.y=(a[1]*t+a[5]*i+a[9]*r+a[13])*o,this.z=(a[2]*t+a[6]*i+a[10]*r+a[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,a=e.x,o=e.y,s=e.z,l=e.w,c=l*t+o*r-s*i,u=l*i+s*t-a*r,d=l*r+a*i-o*t,h=-a*t-o*i-s*r;return this.x=c*l+h*-a+u*-s-d*-o,this.y=u*l+h*-o+d*-a-c*-s,this.z=d*l+h*-s+c*-o-u*-a,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*r,this.y=a[1]*t+a[5]*i+a[9]*r,this.z=a[2]*t+a[6]*i+a[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,a=e.z,o=t.x,s=t.y,l=t.z;return this.x=r*l-a*s,this.y=a*o-i*l,this.z=i*s-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return oo.copy(this).projectOnVector(e),this.sub(oo)}reflect(e){return this.sub(oo.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(ai(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const oo=new B,Jl=new Da;class Ra{constructor(e=new B(1/0,1/0,1/0),t=new B(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,r=1/0,a=-1/0,o=-1/0,s=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],d=e[l+1],h=e[l+2];u<t&&(t=u),d<i&&(i=d),h<r&&(r=h),u>a&&(a=u),d>o&&(o=d),h>s&&(s=h)}return this.min.set(t,i,r),this.max.set(a,o,s),this}setFromBufferAttribute(e){let t=1/0,i=1/0,r=1/0,a=-1/0,o=-1/0,s=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),d=e.getY(l),h=e.getZ(l);u<t&&(t=u),d<i&&(i=d),h<r&&(r=h),u>a&&(a=u),d>o&&(o=d),h>s&&(s=h)}return this.min.set(t,i,r),this.max.set(a,o,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=zr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0)if(t&&i.attributes!=null&&i.attributes.position!==void 0){const a=i.attributes.position;for(let o=0,s=a.count;o<s;o++)zr.fromBufferAttribute(a,o).applyMatrix4(e.matrixWorld),this.expandByPoint(zr)}else i.boundingBox===null&&i.computeBoundingBox(),lo.copy(i.boundingBox),lo.applyMatrix4(e.matrixWorld),this.union(lo);const r=e.children;for(let a=0,o=r.length;a<o;a++)this.expandByObject(r[a],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,zr),zr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ta),Ua.subVectors(this.max,ta),mn.subVectors(e.a,ta),gn.subVectors(e.b,ta),vn.subVectors(e.c,ta),pr.subVectors(gn,mn),fr.subVectors(vn,gn),Nr.subVectors(mn,vn);let t=[0,-pr.z,pr.y,0,-fr.z,fr.y,0,-Nr.z,Nr.y,pr.z,0,-pr.x,fr.z,0,-fr.x,Nr.z,0,-Nr.x,-pr.y,pr.x,0,-fr.y,fr.x,0,-Nr.y,Nr.x,0];return!co(t,mn,gn,vn,Ua)||(t=[1,0,0,0,1,0,0,0,1],!co(t,mn,gn,vn,Ua))?!1:(Ha.crossVectors(pr,fr),t=[Ha.x,Ha.y,Ha.z],co(t,mn,gn,vn,Ua))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return zr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(zr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Xi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Xi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Xi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Xi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Xi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Xi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Xi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Xi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Xi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Xi=[new B,new B,new B,new B,new B,new B,new B,new B],zr=new B,lo=new Ra,mn=new B,gn=new B,vn=new B,pr=new B,fr=new B,Nr=new B,ta=new B,Ua=new B,Ha=new B,kr=new B;function co(n,e,t,i,r){for(let a=0,o=n.length-3;a<=o;a+=3){kr.fromArray(n,a);const s=r.x*Math.abs(kr.x)+r.y*Math.abs(kr.y)+r.z*Math.abs(kr.z),l=e.dot(kr),c=t.dot(kr),u=i.dot(kr);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>s)return!1}return!0}const tv=new Ra,Kl=new B,Ga=new B,uo=new B;class ya{constructor(e=new B,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):tv.setFromPoints(e).getCenter(i);let r=0;for(let a=0,o=e.length;a<o;a++)r=Math.max(r,i.distanceToSquared(e[a]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){uo.subVectors(e,this.center);const t=uo.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.add(uo.multiplyScalar(r/i)),this.radius+=r}return this}union(e){return this.center.equals(e.center)===!0?Ga.set(0,0,1).multiplyScalar(e.radius):Ga.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Kl.copy(e.center).add(Ga)),this.expandByPoint(Kl.copy(e.center).sub(Ga)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Yi=new B,ho=new B,Wa=new B,mr=new B,po=new B,Va=new B,fo=new B;class iv{constructor(e=new B,t=new B(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Yi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Yi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Yi.copy(this.direction).multiplyScalar(t).add(this.origin),Yi.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){ho.copy(e).add(t).multiplyScalar(.5),Wa.copy(t).sub(e).normalize(),mr.copy(this.origin).sub(ho);const a=e.distanceTo(t)*.5,o=-this.direction.dot(Wa),s=mr.dot(this.direction),l=-mr.dot(Wa),c=mr.lengthSq(),u=Math.abs(1-o*o);let d,h,m,g;if(u>0)if(d=o*l-s,h=o*s-l,g=a*u,d>=0)if(h>=-g)if(h<=g){const f=1/u;d*=f,h*=f,m=d*(d+o*h+2*s)+h*(o*d+h+2*l)+c}else h=a,d=Math.max(0,-(o*h+s)),m=-d*d+h*(h+2*l)+c;else h=-a,d=Math.max(0,-(o*h+s)),m=-d*d+h*(h+2*l)+c;else h<=-g?(d=Math.max(0,-(-o*a+s)),h=d>0?-a:Math.min(Math.max(-a,-l),a),m=-d*d+h*(h+2*l)+c):h<=g?(d=0,h=Math.min(Math.max(-a,-l),a),m=h*(h+2*l)+c):(d=Math.max(0,-(o*a+s)),h=d>0?a:Math.min(Math.max(-a,-l),a),m=-d*d+h*(h+2*l)+c);else h=o>0?-a:a,d=Math.max(0,-(o*h+s)),m=-d*d+h*(h+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(d).add(this.origin),r&&r.copy(Wa).multiplyScalar(h).add(ho),m}intersectSphere(e,t){Yi.subVectors(e.center,this.origin);const i=Yi.dot(this.direction),r=Yi.dot(Yi)-i*i,a=e.radius*e.radius;if(r>a)return null;const o=Math.sqrt(a-r),s=i-o,l=i+o;return s<0&&l<0?null:s<0?this.at(l,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,a,o,s,l;const c=1/this.direction.x,u=1/this.direction.y,d=1/this.direction.z,h=this.origin;return c>=0?(i=(e.min.x-h.x)*c,r=(e.max.x-h.x)*c):(i=(e.max.x-h.x)*c,r=(e.min.x-h.x)*c),u>=0?(a=(e.min.y-h.y)*u,o=(e.max.y-h.y)*u):(a=(e.max.y-h.y)*u,o=(e.min.y-h.y)*u),i>o||a>r||((a>i||i!==i)&&(i=a),(o<r||r!==r)&&(r=o),d>=0?(s=(e.min.z-h.z)*d,l=(e.max.z-h.z)*d):(s=(e.max.z-h.z)*d,l=(e.min.z-h.z)*d),i>l||s>r)||((s>i||i!==i)&&(i=s),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Yi)!==null}intersectTriangle(e,t,i,r,a){po.subVectors(t,e),Va.subVectors(i,e),fo.crossVectors(po,Va);let o=this.direction.dot(fo),s;if(o>0){if(r)return null;s=1}else if(o<0)s=-1,o=-o;else return null;mr.subVectors(this.origin,e);const l=s*this.direction.dot(Va.crossVectors(mr,Va));if(l<0)return null;const c=s*this.direction.dot(po.cross(mr));if(c<0||l+c>o)return null;const u=-s*mr.dot(fo);return u<0?null:this.at(u/o,a)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Tt{constructor(){Tt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,i,r,a,o,s,l,c,u,d,h,m,g,f,p){const v=this.elements;return v[0]=e,v[4]=t,v[8]=i,v[12]=r,v[1]=a,v[5]=o,v[9]=s,v[13]=l,v[2]=c,v[6]=u,v[10]=d,v[14]=h,v[3]=m,v[7]=g,v[11]=f,v[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Tt().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/_n.setFromMatrixColumn(e,0).length(),a=1/_n.setFromMatrixColumn(e,1).length(),o=1/_n.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*a,t[5]=i[5]*a,t[6]=i[6]*a,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,a=e.z,o=Math.cos(i),s=Math.sin(i),l=Math.cos(r),c=Math.sin(r),u=Math.cos(a),d=Math.sin(a);if(e.order==="XYZ"){const h=o*u,m=o*d,g=s*u,f=s*d;t[0]=l*u,t[4]=-l*d,t[8]=c,t[1]=m+g*c,t[5]=h-f*c,t[9]=-s*l,t[2]=f-h*c,t[6]=g+m*c,t[10]=o*l}else if(e.order==="YXZ"){const h=l*u,m=l*d,g=c*u,f=c*d;t[0]=h+f*s,t[4]=g*s-m,t[8]=o*c,t[1]=o*d,t[5]=o*u,t[9]=-s,t[2]=m*s-g,t[6]=f+h*s,t[10]=o*l}else if(e.order==="ZXY"){const h=l*u,m=l*d,g=c*u,f=c*d;t[0]=h-f*s,t[4]=-o*d,t[8]=g+m*s,t[1]=m+g*s,t[5]=o*u,t[9]=f-h*s,t[2]=-o*c,t[6]=s,t[10]=o*l}else if(e.order==="ZYX"){const h=o*u,m=o*d,g=s*u,f=s*d;t[0]=l*u,t[4]=g*c-m,t[8]=h*c+f,t[1]=l*d,t[5]=f*c+h,t[9]=m*c-g,t[2]=-c,t[6]=s*l,t[10]=o*l}else if(e.order==="YZX"){const h=o*l,m=o*c,g=s*l,f=s*c;t[0]=l*u,t[4]=f-h*d,t[8]=g*d+m,t[1]=d,t[5]=o*u,t[9]=-s*u,t[2]=-c*u,t[6]=m*d+g,t[10]=h-f*d}else if(e.order==="XZY"){const h=o*l,m=o*c,g=s*l,f=s*c;t[0]=l*u,t[4]=-d,t[8]=c*u,t[1]=h*d+f,t[5]=o*u,t[9]=m*d-g,t[2]=g*d-m,t[6]=s*u,t[10]=f*d+h}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(rv,e,nv)}lookAt(e,t,i){const r=this.elements;return ii.subVectors(e,t),ii.lengthSq()===0&&(ii.z=1),ii.normalize(),gr.crossVectors(i,ii),gr.lengthSq()===0&&(Math.abs(i.z)===1?ii.x+=1e-4:ii.z+=1e-4,ii.normalize(),gr.crossVectors(i,ii)),gr.normalize(),qa.crossVectors(ii,gr),r[0]=gr.x,r[4]=qa.x,r[8]=ii.x,r[1]=gr.y,r[5]=qa.y,r[9]=ii.y,r[2]=gr.z,r[6]=qa.z,r[10]=ii.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,a=this.elements,o=i[0],s=i[4],l=i[8],c=i[12],u=i[1],d=i[5],h=i[9],m=i[13],g=i[2],f=i[6],p=i[10],v=i[14],_=i[3],y=i[7],x=i[11],w=i[15],S=r[0],T=r[4],b=r[8],E=r[12],D=r[1],I=r[5],N=r[9],z=r[13],L=r[2],P=r[6],F=r[10],H=r[14],X=r[3],k=r[7],V=r[11],ie=r[15];return a[0]=o*S+s*D+l*L+c*X,a[4]=o*T+s*I+l*P+c*k,a[8]=o*b+s*N+l*F+c*V,a[12]=o*E+s*z+l*H+c*ie,a[1]=u*S+d*D+h*L+m*X,a[5]=u*T+d*I+h*P+m*k,a[9]=u*b+d*N+h*F+m*V,a[13]=u*E+d*z+h*H+m*ie,a[2]=g*S+f*D+p*L+v*X,a[6]=g*T+f*I+p*P+v*k,a[10]=g*b+f*N+p*F+v*V,a[14]=g*E+f*z+p*H+v*ie,a[3]=_*S+y*D+x*L+w*X,a[7]=_*T+y*I+x*P+w*k,a[11]=_*b+y*N+x*F+w*V,a[15]=_*E+y*z+x*H+w*ie,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],a=e[12],o=e[1],s=e[5],l=e[9],c=e[13],u=e[2],d=e[6],h=e[10],m=e[14],g=e[3],f=e[7],p=e[11],v=e[15];return g*(+a*l*d-r*c*d-a*s*h+i*c*h+r*s*m-i*l*m)+f*(+t*l*m-t*c*h+a*o*h-r*o*m+r*c*u-a*l*u)+p*(+t*c*d-t*s*m-a*o*d+i*o*m+a*s*u-i*c*u)+v*(-r*s*u-t*l*d+t*s*h+r*o*d-i*o*h+i*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],a=e[3],o=e[4],s=e[5],l=e[6],c=e[7],u=e[8],d=e[9],h=e[10],m=e[11],g=e[12],f=e[13],p=e[14],v=e[15],_=d*p*c-f*h*c+f*l*m-s*p*m-d*l*v+s*h*v,y=g*h*c-u*p*c-g*l*m+o*p*m+u*l*v-o*h*v,x=u*f*c-g*d*c+g*s*m-o*f*m-u*s*v+o*d*v,w=g*d*l-u*f*l-g*s*h+o*f*h+u*s*p-o*d*p,S=t*_+i*y+r*x+a*w;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/S;return e[0]=_*T,e[1]=(f*h*a-d*p*a-f*r*m+i*p*m+d*r*v-i*h*v)*T,e[2]=(s*p*a-f*l*a+f*r*c-i*p*c-s*r*v+i*l*v)*T,e[3]=(d*l*a-s*h*a-d*r*c+i*h*c+s*r*m-i*l*m)*T,e[4]=y*T,e[5]=(u*p*a-g*h*a+g*r*m-t*p*m-u*r*v+t*h*v)*T,e[6]=(g*l*a-o*p*a-g*r*c+t*p*c+o*r*v-t*l*v)*T,e[7]=(o*h*a-u*l*a+u*r*c-t*h*c-o*r*m+t*l*m)*T,e[8]=x*T,e[9]=(g*d*a-u*f*a-g*i*m+t*f*m+u*i*v-t*d*v)*T,e[10]=(o*f*a-g*s*a+g*i*c-t*f*c-o*i*v+t*s*v)*T,e[11]=(u*s*a-o*d*a-u*i*c+t*d*c+o*i*m-t*s*m)*T,e[12]=w*T,e[13]=(u*f*r-g*d*r+g*i*h-t*f*h-u*i*p+t*d*p)*T,e[14]=(g*s*r-o*f*r-g*i*l+t*f*l+o*i*p-t*s*p)*T,e[15]=(o*d*r-u*s*r+u*i*l-t*d*l-o*i*h+t*s*h)*T,this}scale(e){const t=this.elements,i=e.x,r=e.y,a=e.z;return t[0]*=i,t[4]*=r,t[8]*=a,t[1]*=i,t[5]*=r,t[9]*=a,t[2]*=i,t[6]*=r,t[10]*=a,t[3]*=i,t[7]*=r,t[11]*=a,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),a=1-i,o=e.x,s=e.y,l=e.z,c=a*o,u=a*s;return this.set(c*o+i,c*s-r*l,c*l+r*s,0,c*s+r*l,u*s+i,u*l-r*o,0,c*l-r*s,u*l+r*o,a*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,a,o){return this.set(1,i,a,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,a=t._x,o=t._y,s=t._z,l=t._w,c=a+a,u=o+o,d=s+s,h=a*c,m=a*u,g=a*d,f=o*u,p=o*d,v=s*d,_=l*c,y=l*u,x=l*d,w=i.x,S=i.y,T=i.z;return r[0]=(1-(f+v))*w,r[1]=(m+x)*w,r[2]=(g-y)*w,r[3]=0,r[4]=(m-x)*S,r[5]=(1-(h+v))*S,r[6]=(p+_)*S,r[7]=0,r[8]=(g+y)*T,r[9]=(p-_)*T,r[10]=(1-(h+f))*T,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let a=_n.set(r[0],r[1],r[2]).length();const o=_n.set(r[4],r[5],r[6]).length(),s=_n.set(r[8],r[9],r[10]).length();this.determinant()<0&&(a=-a),e.x=r[12],e.y=r[13],e.z=r[14],Ti.copy(this);const l=1/a,c=1/o,u=1/s;return Ti.elements[0]*=l,Ti.elements[1]*=l,Ti.elements[2]*=l,Ti.elements[4]*=c,Ti.elements[5]*=c,Ti.elements[6]*=c,Ti.elements[8]*=u,Ti.elements[9]*=u,Ti.elements[10]*=u,t.setFromRotationMatrix(Ti),i.x=a,i.y=o,i.z=s,this}makePerspective(e,t,i,r,a,o){const s=this.elements,l=2*a/(t-e),c=2*a/(i-r),u=(t+e)/(t-e),d=(i+r)/(i-r),h=-(o+a)/(o-a),m=-2*o*a/(o-a);return s[0]=l,s[4]=0,s[8]=u,s[12]=0,s[1]=0,s[5]=c,s[9]=d,s[13]=0,s[2]=0,s[6]=0,s[10]=h,s[14]=m,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,i,r,a,o){const s=this.elements,l=1/(t-e),c=1/(i-r),u=1/(o-a),d=(t+e)*l,h=(i+r)*c,m=(o+a)*u;return s[0]=2*l,s[4]=0,s[8]=0,s[12]=-d,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-h,s[2]=0,s[6]=0,s[10]=-2*u,s[14]=-m,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const _n=new B,Ti=new Tt,rv=new B(0,0,0),nv=new B(1,1,1),gr=new B,qa=new B,ii=new B,Ql=new Tt,ec=new Da;class Pa{constructor(e=0,t=0,i=0,r=Pa.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,a=r[0],o=r[4],s=r[8],l=r[1],c=r[5],u=r[9],d=r[2],h=r[6],m=r[10];switch(t){case"XYZ":this._y=Math.asin(ai(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-u,m),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(h,c),this._z=0);break;case"YXZ":this._x=Math.asin(-ai(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(s,m),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-d,a),this._z=0);break;case"ZXY":this._x=Math.asin(ai(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-d,m),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,a));break;case"ZYX":this._y=Math.asin(-ai(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(h,m),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(ai(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-d,a)):(this._x=0,this._y=Math.atan2(s,m));break;case"XZY":this._z=Math.asin(-ai(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(h,c),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-u,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Ql.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Ql,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ec.setFromEuler(this),this.setFromQuaternion(ec,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Pa.DefaultOrder="XYZ";Pa.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class lh{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let av=0;const tc=new B,xn=new Da,Zi=new Tt,ja=new B,ia=new B,sv=new B,ov=new Da,ic=new B(1,0,0),rc=new B(0,1,0),nc=new B(0,0,1),lv={type:"added"},ac={type:"removed"};class Zt extends jn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:av++}),this.uuid=La(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Zt.DefaultUp.clone();const e=new B,t=new Pa,i=new Da,r=new B(1,1,1);function a(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(a),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Tt},normalMatrix:{value:new wi}}),this.matrix=new Tt,this.matrixWorld=new Tt,this.matrixAutoUpdate=Zt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new lh,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return xn.setFromAxisAngle(e,t),this.quaternion.multiply(xn),this}rotateOnWorldAxis(e,t){return xn.setFromAxisAngle(e,t),this.quaternion.premultiply(xn),this}rotateX(e){return this.rotateOnAxis(ic,e)}rotateY(e){return this.rotateOnAxis(rc,e)}rotateZ(e){return this.rotateOnAxis(nc,e)}translateOnAxis(e,t){return tc.copy(e).applyQuaternion(this.quaternion),this.position.add(tc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(ic,e)}translateY(e){return this.translateOnAxis(rc,e)}translateZ(e){return this.translateOnAxis(nc,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Zi.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?ja.copy(e):ja.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),ia.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Zi.lookAt(ia,ja,this.up):Zi.lookAt(ja,ia,this.up),this.quaternion.setFromRotationMatrix(Zi),r&&(Zi.extractRotation(r.matrixWorld),xn.setFromRotationMatrix(Zi),this.quaternion.premultiply(xn.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(lv)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(ac)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(ac)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Zi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Zi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Zi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const a=this.children[i].getObjectByProperty(e,t);if(a!==void 0)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ia,e,sv),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ia,ov,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let a=0,o=r.length;a<o;a++)r[a].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function a(s,l){return s[l.uuid]===void 0&&(s[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=a(e.geometries,this.geometry);const s=this.geometry.parameters;if(s!==void 0&&s.shapes!==void 0){const l=s.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const d=l[c];a(e.shapes,d)}else a(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const s=[];for(let l=0,c=this.material.length;l<c;l++)s.push(a(e.materials,this.material[l]));r.material=s}else r.material=a(e.materials,this.material);if(this.children.length>0){r.children=[];for(let s=0;s<this.children.length;s++)r.children.push(this.children[s].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let s=0;s<this.animations.length;s++){const l=this.animations[s];r.animations.push(a(e.animations,l))}}if(t){const s=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),d=o(e.shapes),h=o(e.skeletons),m=o(e.animations),g=o(e.nodes);s.length>0&&(i.geometries=s),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),u.length>0&&(i.images=u),d.length>0&&(i.shapes=d),h.length>0&&(i.skeletons=h),m.length>0&&(i.animations=m),g.length>0&&(i.nodes=g)}return i.object=r,i;function o(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}Zt.DefaultUp=new B(0,1,0);Zt.DefaultMatrixAutoUpdate=!0;const Ai=new B,$i=new B,mo=new B,Ji=new B,yn=new B,bn=new B,sc=new B,go=new B,vo=new B,_o=new B;class sr{constructor(e=new B,t=new B,i=new B){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),Ai.subVectors(e,t),r.cross(Ai);const a=r.lengthSq();return a>0?r.multiplyScalar(1/Math.sqrt(a)):r.set(0,0,0)}static getBarycoord(e,t,i,r,a){Ai.subVectors(r,t),$i.subVectors(i,t),mo.subVectors(e,t);const o=Ai.dot(Ai),s=Ai.dot($i),l=Ai.dot(mo),c=$i.dot($i),u=$i.dot(mo),d=o*c-s*s;if(d===0)return a.set(-2,-1,-1);const h=1/d,m=(c*l-s*u)*h,g=(o*u-s*l)*h;return a.set(1-m-g,g,m)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,Ji),Ji.x>=0&&Ji.y>=0&&Ji.x+Ji.y<=1}static getUV(e,t,i,r,a,o,s,l){return this.getBarycoord(e,t,i,r,Ji),l.set(0,0),l.addScaledVector(a,Ji.x),l.addScaledVector(o,Ji.y),l.addScaledVector(s,Ji.z),l}static isFrontFacing(e,t,i,r){return Ai.subVectors(i,t),$i.subVectors(e,t),Ai.cross($i).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ai.subVectors(this.c,this.b),$i.subVectors(this.a,this.b),Ai.cross($i).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return sr.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return sr.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,a){return sr.getUV(e,this.a,this.b,this.c,t,i,r,a)}containsPoint(e){return sr.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return sr.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,a=this.c;let o,s;yn.subVectors(r,i),bn.subVectors(a,i),go.subVectors(e,i);const l=yn.dot(go),c=bn.dot(go);if(l<=0&&c<=0)return t.copy(i);vo.subVectors(e,r);const u=yn.dot(vo),d=bn.dot(vo);if(u>=0&&d<=u)return t.copy(r);const h=l*d-u*c;if(h<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(i).addScaledVector(yn,o);_o.subVectors(e,a);const m=yn.dot(_o),g=bn.dot(_o);if(g>=0&&m<=g)return t.copy(a);const f=m*c-l*g;if(f<=0&&c>=0&&g<=0)return s=c/(c-g),t.copy(i).addScaledVector(bn,s);const p=u*g-m*d;if(p<=0&&d-u>=0&&m-g>=0)return sc.subVectors(a,r),s=(d-u)/(d-u+(m-g)),t.copy(r).addScaledVector(sc,s);const v=1/(p+f+h);return o=f*v,s=h*v,t.copy(i).addScaledVector(yn,o).addScaledVector(bn,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let cv=0;class on extends jn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:cv++}),this.uuid=La(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===1;continue}const r=this[t];if(r===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(i.blending=this.blending),this.side!==0&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData);function r(a){const o=[];for(const s in a){const l=a[s];delete l.metadata,o.push(l)}return o}if(t){const a=r(e.textures),o=r(e.images);a.length>0&&(i.textures=a),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let a=0;a!==r;++a)i[a]=t[a].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class ch extends on{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ye(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const xt=new B,Xa=new $e;class Hi{constructor(e,t,i){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i===!0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,a=this.itemSize;r<a;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let i=0;for(let r=0,a=e.length;r<a;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),o=new Ye),t[i++]=o.r,t[i++]=o.g,t[i++]=o.b}return this}copyVector2sArray(e){const t=this.array;let i=0;for(let r=0,a=e.length;r<a;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),o=new $e),t[i++]=o.x,t[i++]=o.y}return this}copyVector3sArray(e){const t=this.array;let i=0;for(let r=0,a=e.length;r<a;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),o=new B),t[i++]=o.x,t[i++]=o.y,t[i++]=o.z}return this}copyVector4sArray(e){const t=this.array;let i=0;for(let r=0,a=e.length;r<a;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),o=new Et),t[i++]=o.x,t[i++]=o.y,t[i++]=o.z,t[i++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)Xa.fromBufferAttribute(this,t),Xa.applyMatrix3(e),this.setXY(t,Xa.x,Xa.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)xt.fromBufferAttribute(this,t),xt.applyMatrix3(e),this.setXYZ(t,xt.x,xt.y,xt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)xt.fromBufferAttribute(this,t),xt.applyMatrix4(e),this.setXYZ(t,xt.x,xt.y,xt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)xt.fromBufferAttribute(this,t),xt.applyNormalMatrix(e),this.setXYZ(t,xt.x,xt.y,xt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)xt.fromBufferAttribute(this,t),xt.transformDirection(e),this.setXYZ(t,xt.x,xt.y,xt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,a){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=a,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==35044&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class uh extends Hi{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class hh extends Hi{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class Wt extends Hi{constructor(e,t,i){super(new Float32Array(e),t,i)}}let uv=0;const xi=new Tt,xo=new Zt,wn=new B,ri=new Ra,ra=new Ra,Lt=new B;class Wi extends jn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:uv++}),this.uuid=La(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(rh(e)?hh:uh)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const a=new wi().getNormalMatrix(e);i.applyNormalMatrix(a),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return xi.makeRotationFromQuaternion(e),this.applyMatrix4(xi),this}rotateX(e){return xi.makeRotationX(e),this.applyMatrix4(xi),this}rotateY(e){return xi.makeRotationY(e),this.applyMatrix4(xi),this}rotateZ(e){return xi.makeRotationZ(e),this.applyMatrix4(xi),this}translate(e,t,i){return xi.makeTranslation(e,t,i),this.applyMatrix4(xi),this}scale(e,t,i){return xi.makeScale(e,t,i),this.applyMatrix4(xi),this}lookAt(e){return xo.lookAt(e),xo.updateMatrix(),this.applyMatrix4(xo.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(wn).negate(),this.translate(wn.x,wn.y,wn.z),this}setFromPoints(e){const t=[];for(let i=0,r=e.length;i<r;i++){const a=e[i];t.push(a.x,a.y,a.z||0)}return this.setAttribute("position",new Wt(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Ra);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new B(-1/0,-1/0,-1/0),new B(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const a=t[i];ri.setFromBufferAttribute(a),this.morphTargetsRelative?(Lt.addVectors(this.boundingBox.min,ri.min),this.boundingBox.expandByPoint(Lt),Lt.addVectors(this.boundingBox.max,ri.max),this.boundingBox.expandByPoint(Lt)):(this.boundingBox.expandByPoint(ri.min),this.boundingBox.expandByPoint(ri.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ya);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new B,1/0);return}if(e){const i=this.boundingSphere.center;if(ri.setFromBufferAttribute(e),t)for(let a=0,o=t.length;a<o;a++){const s=t[a];ra.setFromBufferAttribute(s),this.morphTargetsRelative?(Lt.addVectors(ri.min,ra.min),ri.expandByPoint(Lt),Lt.addVectors(ri.max,ra.max),ri.expandByPoint(Lt)):(ri.expandByPoint(ra.min),ri.expandByPoint(ra.max))}ri.getCenter(i);let r=0;for(let a=0,o=e.count;a<o;a++)Lt.fromBufferAttribute(e,a),r=Math.max(r,i.distanceToSquared(Lt));if(t)for(let a=0,o=t.length;a<o;a++){const s=t[a],l=this.morphTargetsRelative;for(let c=0,u=s.count;c<u;c++)Lt.fromBufferAttribute(s,c),l&&(wn.fromBufferAttribute(e,c),Lt.add(wn)),r=Math.max(r,i.distanceToSquared(Lt))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=t.position.array,a=t.normal.array,o=t.uv.array,s=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Hi(new Float32Array(4*s),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let D=0;D<s;D++)c[D]=new B,u[D]=new B;const d=new B,h=new B,m=new B,g=new $e,f=new $e,p=new $e,v=new B,_=new B;function y(D,I,N){d.fromArray(r,D*3),h.fromArray(r,I*3),m.fromArray(r,N*3),g.fromArray(o,D*2),f.fromArray(o,I*2),p.fromArray(o,N*2),h.sub(d),m.sub(d),f.sub(g),p.sub(g);const z=1/(f.x*p.y-p.x*f.y);!isFinite(z)||(v.copy(h).multiplyScalar(p.y).addScaledVector(m,-f.y).multiplyScalar(z),_.copy(m).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(z),c[D].add(v),c[I].add(v),c[N].add(v),u[D].add(_),u[I].add(_),u[N].add(_))}let x=this.groups;x.length===0&&(x=[{start:0,count:i.length}]);for(let D=0,I=x.length;D<I;++D){const N=x[D],z=N.start,L=N.count;for(let P=z,F=z+L;P<F;P+=3)y(i[P+0],i[P+1],i[P+2])}const w=new B,S=new B,T=new B,b=new B;function E(D){T.fromArray(a,D*3),b.copy(T);const I=c[D];w.copy(I),w.sub(T.multiplyScalar(T.dot(I))).normalize(),S.crossVectors(b,I);const N=S.dot(u[D])<0?-1:1;l[D*4]=w.x,l[D*4+1]=w.y,l[D*4+2]=w.z,l[D*4+3]=N}for(let D=0,I=x.length;D<I;++D){const N=x[D],z=N.start,L=N.count;for(let P=z,F=z+L;P<F;P+=3)E(i[P+0]),E(i[P+1]),E(i[P+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Hi(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let h=0,m=i.count;h<m;h++)i.setXYZ(h,0,0,0);const r=new B,a=new B,o=new B,s=new B,l=new B,c=new B,u=new B,d=new B;if(e)for(let h=0,m=e.count;h<m;h+=3){const g=e.getX(h+0),f=e.getX(h+1),p=e.getX(h+2);r.fromBufferAttribute(t,g),a.fromBufferAttribute(t,f),o.fromBufferAttribute(t,p),u.subVectors(o,a),d.subVectors(r,a),u.cross(d),s.fromBufferAttribute(i,g),l.fromBufferAttribute(i,f),c.fromBufferAttribute(i,p),s.add(u),l.add(u),c.add(u),i.setXYZ(g,s.x,s.y,s.z),i.setXYZ(f,l.x,l.y,l.z),i.setXYZ(p,c.x,c.y,c.z)}else for(let h=0,m=t.count;h<m;h+=3)r.fromBufferAttribute(t,h+0),a.fromBufferAttribute(t,h+1),o.fromBufferAttribute(t,h+2),u.subVectors(o,a),d.subVectors(r,a),u.cross(d),i.setXYZ(h+0,u.x,u.y,u.z),i.setXYZ(h+1,u.x,u.y,u.z),i.setXYZ(h+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const r in i){if(e.attributes[r]===void 0)continue;const a=i[r].array,o=e.attributes[r],s=o.array,l=o.itemSize*t,c=Math.min(s.length,a.length-l);for(let u=0,d=l;u<c;u++,d++)a[d]=s[u]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Lt.fromBufferAttribute(e,t),Lt.normalize(),e.setXYZ(t,Lt.x,Lt.y,Lt.z)}toNonIndexed(){function e(s,l){const c=s.array,u=s.itemSize,d=s.normalized,h=new c.constructor(l.length*u);let m=0,g=0;for(let f=0,p=l.length;f<p;f++){s.isInterleavedBufferAttribute?m=l[f]*s.data.stride+s.offset:m=l[f]*u;for(let v=0;v<u;v++)h[g++]=c[m++]}return new Hi(h,u,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Wi,i=this.index.array,r=this.attributes;for(const s in r){const l=r[s],c=e(l,i);t.setAttribute(s,c)}const a=this.morphAttributes;for(const s in a){const l=[],c=a[s];for(let u=0,d=c.length;u<d;u++){const h=c[u],m=e(h,i);l.push(m)}t.morphAttributes[s]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let s=0,l=o.length;s<l;s++){const c=o[s];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let a=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let d=0,h=c.length;d<h;d++){const m=c[d];u.push(m.toJSON(e.data))}u.length>0&&(r[l]=u,a=!0)}a&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const s=this.boundingSphere;return s!==null&&(e.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const a=e.morphAttributes;for(const c in a){const u=[],d=a[c];for(let h=0,m=d.length;h<m;h++)u.push(d[h].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const d=o[c];this.addGroup(d.start,d.count,d.materialIndex)}const s=e.boundingBox;s!==null&&(this.boundingBox=s.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const oc=new Tt,Mn=new iv,yo=new ya,vr=new B,_r=new B,xr=new B,bo=new B,wo=new B,Mo=new B,Ya=new B,Za=new B,$a=new B,Ja=new $e,Ka=new $e,Qa=new $e,So=new B,es=new B;class Bi extends Zt{constructor(e=new Wi,t=new ch){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}raycast(e,t){const i=this.geometry,r=this.material,a=this.matrixWorld;if(r===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),yo.copy(i.boundingSphere),yo.applyMatrix4(a),e.ray.intersectsSphere(yo)===!1)||(oc.copy(a).invert(),Mn.copy(e.ray).applyMatrix4(oc),i.boundingBox!==null&&Mn.intersectsBox(i.boundingBox)===!1))return;let o;const s=i.index,l=i.attributes.position,c=i.morphAttributes.position,u=i.morphTargetsRelative,d=i.attributes.uv,h=i.attributes.uv2,m=i.groups,g=i.drawRange;if(s!==null)if(Array.isArray(r))for(let f=0,p=m.length;f<p;f++){const v=m[f],_=r[v.materialIndex],y=Math.max(v.start,g.start),x=Math.min(s.count,Math.min(v.start+v.count,g.start+g.count));for(let w=y,S=x;w<S;w+=3){const T=s.getX(w),b=s.getX(w+1),E=s.getX(w+2);o=ts(this,_,e,Mn,l,c,u,d,h,T,b,E),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const f=Math.max(0,g.start),p=Math.min(s.count,g.start+g.count);for(let v=f,_=p;v<_;v+=3){const y=s.getX(v),x=s.getX(v+1),w=s.getX(v+2);o=ts(this,r,e,Mn,l,c,u,d,h,y,x,w),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(r))for(let f=0,p=m.length;f<p;f++){const v=m[f],_=r[v.materialIndex],y=Math.max(v.start,g.start),x=Math.min(l.count,Math.min(v.start+v.count,g.start+g.count));for(let w=y,S=x;w<S;w+=3){const T=w,b=w+1,E=w+2;o=ts(this,_,e,Mn,l,c,u,d,h,T,b,E),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const f=Math.max(0,g.start),p=Math.min(l.count,g.start+g.count);for(let v=f,_=p;v<_;v+=3){const y=v,x=v+1,w=v+2;o=ts(this,r,e,Mn,l,c,u,d,h,y,x,w),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}}}function hv(n,e,t,i,r,a,o,s){let l;if(e.side===1?l=i.intersectTriangle(o,a,r,!0,s):l=i.intersectTriangle(r,a,o,e.side!==2,s),l===null)return null;es.copy(s),es.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(es);return c<t.near||c>t.far?null:{distance:c,point:es.clone(),object:n}}function ts(n,e,t,i,r,a,o,s,l,c,u,d){vr.fromBufferAttribute(r,c),_r.fromBufferAttribute(r,u),xr.fromBufferAttribute(r,d);const h=n.morphTargetInfluences;if(a&&h){Ya.set(0,0,0),Za.set(0,0,0),$a.set(0,0,0);for(let g=0,f=a.length;g<f;g++){const p=h[g],v=a[g];p!==0&&(bo.fromBufferAttribute(v,c),wo.fromBufferAttribute(v,u),Mo.fromBufferAttribute(v,d),o?(Ya.addScaledVector(bo,p),Za.addScaledVector(wo,p),$a.addScaledVector(Mo,p)):(Ya.addScaledVector(bo.sub(vr),p),Za.addScaledVector(wo.sub(_r),p),$a.addScaledVector(Mo.sub(xr),p)))}vr.add(Ya),_r.add(Za),xr.add($a)}n.isSkinnedMesh&&(n.boneTransform(c,vr),n.boneTransform(u,_r),n.boneTransform(d,xr));const m=hv(n,e,t,i,vr,_r,xr,So);if(m){s&&(Ja.fromBufferAttribute(s,c),Ka.fromBufferAttribute(s,u),Qa.fromBufferAttribute(s,d),m.uv=sr.getUV(So,vr,_r,xr,Ja,Ka,Qa,new $e)),l&&(Ja.fromBufferAttribute(l,c),Ka.fromBufferAttribute(l,u),Qa.fromBufferAttribute(l,d),m.uv2=sr.getUV(So,vr,_r,xr,Ja,Ka,Qa,new $e));const g={a:c,b:u,c:d,normal:new B,materialIndex:0};sr.getNormal(vr,_r,xr,g.normal),m.face=g}return m}class Ia extends Wi{constructor(e=1,t=1,i=1,r=1,a=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:a,depthSegments:o};const s=this;r=Math.floor(r),a=Math.floor(a),o=Math.floor(o);const l=[],c=[],u=[],d=[];let h=0,m=0;g("z","y","x",-1,-1,i,t,e,o,a,0),g("z","y","x",1,-1,i,t,-e,o,a,1),g("x","z","y",1,1,e,i,t,r,o,2),g("x","z","y",1,-1,e,i,-t,r,o,3),g("x","y","z",1,-1,e,t,i,r,a,4),g("x","y","z",-1,-1,e,t,-i,r,a,5),this.setIndex(l),this.setAttribute("position",new Wt(c,3)),this.setAttribute("normal",new Wt(u,3)),this.setAttribute("uv",new Wt(d,2));function g(f,p,v,_,y,x,w,S,T,b,E){const D=x/T,I=w/b,N=x/2,z=w/2,L=S/2,P=T+1,F=b+1;let H=0,X=0;const k=new B;for(let V=0;V<F;V++){const ie=V*I-z;for(let U=0;U<P;U++){const te=U*D-N;k[f]=te*_,k[p]=ie*y,k[v]=L,c.push(k.x,k.y,k.z),k[f]=0,k[p]=0,k[v]=S>0?1:-1,u.push(k.x,k.y,k.z),d.push(U/T),d.push(1-V/b),H+=1}}for(let V=0;V<b;V++)for(let ie=0;ie<T;ie++){const U=h+ie+P*V,te=h+ie+P*(V+1),oe=h+(ie+1)+P*(V+1),Re=h+(ie+1)+P*V;l.push(U,te,Re),l.push(te,oe,Re),X+=6}s.addGroup(m,X,E),m+=X,h+=H}}static fromJSON(e){return new Ia(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function On(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function Ht(n){const e={};for(let t=0;t<n.length;t++){const i=On(n[t]);for(const r in i)e[r]=i[r]}return e}function dv(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}const pv={clone:On,merge:Ht};var fv=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,mv=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class tn extends on{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=fv,this.fragmentShader=mv,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=On(e.uniforms),this.uniformsGroups=dv(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const a=this.uniforms[r].value;a&&a.isTexture?t.uniforms[r]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[r]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[r]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[r]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[r]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[r]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[r]={type:"m4",value:a.toArray()}:t.uniforms[r]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class dh extends Zt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Tt,this.projectionMatrix=new Tt,this.projectionMatrixInverse=new Tt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class si extends dh{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=qo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(io*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return qo*2*Math.atan(Math.tan(io*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,r,a,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=a,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(io*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,a=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;a+=o.offsetX*r/l,t-=o.offsetY*i/c,r*=o.width/l,i*=o.height/c}const s=this.filmOffset;s!==0&&(a+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+r,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Sn=90,En=1;class gv extends Zt{constructor(e,t,i){if(super(),this.type="CubeCamera",i.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=i;const r=new si(Sn,En,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new B(1,0,0)),this.add(r);const a=new si(Sn,En,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new B(-1,0,0)),this.add(a);const o=new si(Sn,En,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new B(0,1,0)),this.add(o);const s=new si(Sn,En,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new B(0,-1,0)),this.add(s);const l=new si(Sn,En,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new B(0,0,1)),this.add(l);const c=new si(Sn,En,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new B(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget,[r,a,o,s,l,c]=this.children,u=e.getRenderTarget(),d=e.toneMapping,h=e.xr.enabled;e.toneMapping=0,e.xr.enabled=!1;const m=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,r),e.setRenderTarget(i,1),e.render(t,a),e.setRenderTarget(i,2),e.render(t,o),e.setRenderTarget(i,3),e.render(t,s),e.setRenderTarget(i,4),e.render(t,l),i.texture.generateMipmaps=m,e.setRenderTarget(i,5),e.render(t,c),e.setRenderTarget(u),e.toneMapping=d,e.xr.enabled=h,i.texture.needsPMREMUpdate=!0}}class ph extends ui{constructor(e,t,i,r,a,o,s,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:301,super(e,t,i,r,a,o,s,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class vv extends en{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new ph(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:1006}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Ia(5,5,5),a=new tn({name:"CubemapFromEquirect",uniforms:On(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});a.uniforms.tEquirect.value=t;const o=new Bi(r,a),s=t.minFilter;return t.minFilter===1008&&(t.minFilter=1006),new gv(1,10,this).update(e,o),t.minFilter=s,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,i,r){const a=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,r);e.setRenderTarget(a)}}const Eo=new B,_v=new B,xv=new wi;class Br{constructor(e=new B(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=Eo.subVectors(i,t).cross(_v.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const i=e.delta(Eo),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const a=-(e.start.dot(this.normal)+this.constant)/r;return a<0||a>1?null:t.copy(i).multiplyScalar(a).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||xv.getNormalMatrix(e),r=this.coplanarPoint(Eo).applyMatrix4(e),a=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(a),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Tn=new ya,is=new B;class vl{constructor(e=new Br,t=new Br,i=new Br,r=new Br,a=new Br,o=new Br){this.planes=[e,t,i,r,a,o]}set(e,t,i,r,a,o){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(i),s[3].copy(r),s[4].copy(a),s[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const t=this.planes,i=e.elements,r=i[0],a=i[1],o=i[2],s=i[3],l=i[4],c=i[5],u=i[6],d=i[7],h=i[8],m=i[9],g=i[10],f=i[11],p=i[12],v=i[13],_=i[14],y=i[15];return t[0].setComponents(s-r,d-l,f-h,y-p).normalize(),t[1].setComponents(s+r,d+l,f+h,y+p).normalize(),t[2].setComponents(s+a,d+c,f+m,y+v).normalize(),t[3].setComponents(s-a,d-c,f-m,y-v).normalize(),t[4].setComponents(s-o,d-u,f-g,y-_).normalize(),t[5].setComponents(s+o,d+u,f+g,y+_).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Tn.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Tn)}intersectsSprite(e){return Tn.center.set(0,0,0),Tn.radius=.7071067811865476,Tn.applyMatrix4(e.matrixWorld),this.intersectsSphere(Tn)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let a=0;a<6;a++)if(t[a].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(is.x=r.normal.x>0?e.max.x:e.min.x,is.y=r.normal.y>0?e.max.y:e.min.y,is.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(is)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function fh(){let n=null,e=!1,t=null,i=null;function r(a,o){t(a,o),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(a){t=a},setContext:function(a){n=a}}}function yv(n,e){const t=e.isWebGL2,i=new WeakMap;function r(c,u){const d=c.array,h=c.usage,m=n.createBuffer();n.bindBuffer(u,m),n.bufferData(u,d,h),c.onUploadCallback();let g;if(d instanceof Float32Array)g=5126;else if(d instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(d instanceof Int16Array)g=5122;else if(d instanceof Uint32Array)g=5125;else if(d instanceof Int32Array)g=5124;else if(d instanceof Int8Array)g=5120;else if(d instanceof Uint8Array)g=5121;else if(d instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:m,type:g,bytesPerElement:d.BYTES_PER_ELEMENT,version:c.version}}function a(c,u,d){const h=u.array,m=u.updateRange;n.bindBuffer(d,c),m.count===-1?n.bufferSubData(d,0,h):(t?n.bufferSubData(d,m.offset*h.BYTES_PER_ELEMENT,h,m.offset,m.count):n.bufferSubData(d,m.offset*h.BYTES_PER_ELEMENT,h.subarray(m.offset,m.offset+m.count)),m.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u&&(n.deleteBuffer(u.buffer),i.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const h=i.get(c);(!h||h.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const d=i.get(c);d===void 0?i.set(c,r(c,u)):d.version<c.version&&(a(d.buffer,c,u),d.version=c.version)}return{get:o,remove:s,update:l}}class Os extends Wi{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const a=e/2,o=t/2,s=Math.floor(i),l=Math.floor(r),c=s+1,u=l+1,d=e/s,h=t/l,m=[],g=[],f=[],p=[];for(let v=0;v<u;v++){const _=v*h-o;for(let y=0;y<c;y++){const x=y*d-a;g.push(x,-_,0),f.push(0,0,1),p.push(y/s),p.push(1-v/l)}}for(let v=0;v<l;v++)for(let _=0;_<s;_++){const y=_+c*v,x=_+c*(v+1),w=_+1+c*(v+1),S=_+1+c*v;m.push(y,x,S),m.push(x,w,S)}this.setIndex(m),this.setAttribute("position",new Wt(g,3)),this.setAttribute("normal",new Wt(f,3)),this.setAttribute("uv",new Wt(p,2))}static fromJSON(e){return new Os(e.width,e.height,e.widthSegments,e.heightSegments)}}var bv=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,wv=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Mv=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Sv=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Ev=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Tv=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Av="vec3 transformed = vec3( position );",Cv=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Lv=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Dv=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Rv=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Pv=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Iv=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Fv=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,zv=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Nv=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,kv=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Ov=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Bv=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Uv=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Hv=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Gv=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Wv=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Vv=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,qv=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,jv=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Xv="gl_FragColor = linearToOutputTexel( gl_FragColor );",Yv=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Zv=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,$v=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Jv=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Kv=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Qv=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,e0=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,t0=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,i0=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,r0=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,n0=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,a0=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,s0=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,o0=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,l0=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,c0=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,u0=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,h0=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,d0=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,p0=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,f0=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,m0=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,g0=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,v0=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,_0=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,x0=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,y0=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,b0=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,w0=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,M0=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,S0=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,E0=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,T0=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,A0=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,C0=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,L0=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,D0=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,R0=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,P0=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,I0=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,F0=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,z0=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,N0=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,k0=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,O0=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,B0=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,U0=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,H0=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,G0=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,W0=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,V0=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,q0=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,j0=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,X0=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Y0=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Z0=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,$0=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,J0=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,K0=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Q0=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,e_=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,t_=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,i_=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,r_=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,n_=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,a_=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,s_=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,o_=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,l_=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,c_=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,u_=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,h_=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,d_=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,p_=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,f_=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,m_=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,g_=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,v_=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const __=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,x_=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,y_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,b_=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,w_=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,M_=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,S_=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,E_=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,T_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,A_=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,C_=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,L_=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,D_=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,R_=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,P_=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,I_=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,F_=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,z_=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,N_=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,k_=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,O_=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,B_=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,U_=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,H_=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,G_=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,W_=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,V_=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,q_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,j_=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,X_=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Y_=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Z_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ue={alphamap_fragment:bv,alphamap_pars_fragment:wv,alphatest_fragment:Mv,alphatest_pars_fragment:Sv,aomap_fragment:Ev,aomap_pars_fragment:Tv,begin_vertex:Av,beginnormal_vertex:Cv,bsdfs:Lv,iridescence_fragment:Dv,bumpmap_pars_fragment:Rv,clipping_planes_fragment:Pv,clipping_planes_pars_fragment:Iv,clipping_planes_pars_vertex:Fv,clipping_planes_vertex:zv,color_fragment:Nv,color_pars_fragment:kv,color_pars_vertex:Ov,color_vertex:Bv,common:Uv,cube_uv_reflection_fragment:Hv,defaultnormal_vertex:Gv,displacementmap_pars_vertex:Wv,displacementmap_vertex:Vv,emissivemap_fragment:qv,emissivemap_pars_fragment:jv,encodings_fragment:Xv,encodings_pars_fragment:Yv,envmap_fragment:Zv,envmap_common_pars_fragment:$v,envmap_pars_fragment:Jv,envmap_pars_vertex:Kv,envmap_physical_pars_fragment:c0,envmap_vertex:Qv,fog_vertex:e0,fog_pars_vertex:t0,fog_fragment:i0,fog_pars_fragment:r0,gradientmap_pars_fragment:n0,lightmap_fragment:a0,lightmap_pars_fragment:s0,lights_lambert_vertex:o0,lights_pars_begin:l0,lights_toon_fragment:u0,lights_toon_pars_fragment:h0,lights_phong_fragment:d0,lights_phong_pars_fragment:p0,lights_physical_fragment:f0,lights_physical_pars_fragment:m0,lights_fragment_begin:g0,lights_fragment_maps:v0,lights_fragment_end:_0,logdepthbuf_fragment:x0,logdepthbuf_pars_fragment:y0,logdepthbuf_pars_vertex:b0,logdepthbuf_vertex:w0,map_fragment:M0,map_pars_fragment:S0,map_particle_fragment:E0,map_particle_pars_fragment:T0,metalnessmap_fragment:A0,metalnessmap_pars_fragment:C0,morphcolor_vertex:L0,morphnormal_vertex:D0,morphtarget_pars_vertex:R0,morphtarget_vertex:P0,normal_fragment_begin:I0,normal_fragment_maps:F0,normal_pars_fragment:z0,normal_pars_vertex:N0,normal_vertex:k0,normalmap_pars_fragment:O0,clearcoat_normal_fragment_begin:B0,clearcoat_normal_fragment_maps:U0,clearcoat_pars_fragment:H0,iridescence_pars_fragment:G0,output_fragment:W0,packing:V0,premultiplied_alpha_fragment:q0,project_vertex:j0,dithering_fragment:X0,dithering_pars_fragment:Y0,roughnessmap_fragment:Z0,roughnessmap_pars_fragment:$0,shadowmap_pars_fragment:J0,shadowmap_pars_vertex:K0,shadowmap_vertex:Q0,shadowmask_pars_fragment:e_,skinbase_vertex:t_,skinning_pars_vertex:i_,skinning_vertex:r_,skinnormal_vertex:n_,specularmap_fragment:a_,specularmap_pars_fragment:s_,tonemapping_fragment:o_,tonemapping_pars_fragment:l_,transmission_fragment:c_,transmission_pars_fragment:u_,uv_pars_fragment:h_,uv_pars_vertex:d_,uv_vertex:p_,uv2_pars_fragment:f_,uv2_pars_vertex:m_,uv2_vertex:g_,worldpos_vertex:v_,background_vert:__,background_frag:x_,cube_vert:y_,cube_frag:b_,depth_vert:w_,depth_frag:M_,distanceRGBA_vert:S_,distanceRGBA_frag:E_,equirect_vert:T_,equirect_frag:A_,linedashed_vert:C_,linedashed_frag:L_,meshbasic_vert:D_,meshbasic_frag:R_,meshlambert_vert:P_,meshlambert_frag:I_,meshmatcap_vert:F_,meshmatcap_frag:z_,meshnormal_vert:N_,meshnormal_frag:k_,meshphong_vert:O_,meshphong_frag:B_,meshphysical_vert:U_,meshphysical_frag:H_,meshtoon_vert:G_,meshtoon_frag:W_,points_vert:V_,points_frag:q_,shadow_vert:j_,shadow_frag:X_,sprite_vert:Y_,sprite_frag:Z_},he={common:{diffuse:{value:new Ye(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new wi},uv2Transform:{value:new wi},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new $e(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ye(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ye(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new wi}},sprite:{diffuse:{value:new Ye(16777215)},opacity:{value:1},center:{value:new $e(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new wi}}},ki={basic:{uniforms:Ht([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.fog]),vertexShader:Ue.meshbasic_vert,fragmentShader:Ue.meshbasic_frag},lambert:{uniforms:Ht([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.fog,he.lights,{emissive:{value:new Ye(0)}}]),vertexShader:Ue.meshlambert_vert,fragmentShader:Ue.meshlambert_frag},phong:{uniforms:Ht([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.fog,he.lights,{emissive:{value:new Ye(0)},specular:{value:new Ye(1118481)},shininess:{value:30}}]),vertexShader:Ue.meshphong_vert,fragmentShader:Ue.meshphong_frag},standard:{uniforms:Ht([he.common,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.roughnessmap,he.metalnessmap,he.fog,he.lights,{emissive:{value:new Ye(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ue.meshphysical_vert,fragmentShader:Ue.meshphysical_frag},toon:{uniforms:Ht([he.common,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.gradientmap,he.fog,he.lights,{emissive:{value:new Ye(0)}}]),vertexShader:Ue.meshtoon_vert,fragmentShader:Ue.meshtoon_frag},matcap:{uniforms:Ht([he.common,he.bumpmap,he.normalmap,he.displacementmap,he.fog,{matcap:{value:null}}]),vertexShader:Ue.meshmatcap_vert,fragmentShader:Ue.meshmatcap_frag},points:{uniforms:Ht([he.points,he.fog]),vertexShader:Ue.points_vert,fragmentShader:Ue.points_frag},dashed:{uniforms:Ht([he.common,he.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ue.linedashed_vert,fragmentShader:Ue.linedashed_frag},depth:{uniforms:Ht([he.common,he.displacementmap]),vertexShader:Ue.depth_vert,fragmentShader:Ue.depth_frag},normal:{uniforms:Ht([he.common,he.bumpmap,he.normalmap,he.displacementmap,{opacity:{value:1}}]),vertexShader:Ue.meshnormal_vert,fragmentShader:Ue.meshnormal_frag},sprite:{uniforms:Ht([he.sprite,he.fog]),vertexShader:Ue.sprite_vert,fragmentShader:Ue.sprite_frag},background:{uniforms:{uvTransform:{value:new wi},t2D:{value:null}},vertexShader:Ue.background_vert,fragmentShader:Ue.background_frag},cube:{uniforms:Ht([he.envmap,{opacity:{value:1}}]),vertexShader:Ue.cube_vert,fragmentShader:Ue.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ue.equirect_vert,fragmentShader:Ue.equirect_frag},distanceRGBA:{uniforms:Ht([he.common,he.displacementmap,{referencePosition:{value:new B},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ue.distanceRGBA_vert,fragmentShader:Ue.distanceRGBA_frag},shadow:{uniforms:Ht([he.lights,he.fog,{color:{value:new Ye(0)},opacity:{value:1}}]),vertexShader:Ue.shadow_vert,fragmentShader:Ue.shadow_frag}};ki.physical={uniforms:Ht([ki.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new $e(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Ye(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new $e},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ye(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Ye(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ue.meshphysical_vert,fragmentShader:Ue.meshphysical_frag};function $_(n,e,t,i,r,a){const o=new Ye(0);let s=r===!0?0:1,l,c,u=null,d=0,h=null;function m(f,p){let v=!1,_=p.isScene===!0?p.background:null;_&&_.isTexture&&(_=e.get(_));const y=n.xr,x=y.getSession&&y.getSession();x&&x.environmentBlendMode==="additive"&&(_=null),_===null?g(o,s):_&&_.isColor&&(g(_,1),v=!0),(n.autoClear||v)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),_&&(_.isCubeTexture||_.mapping===306)?(c===void 0&&(c=new Bi(new Ia(1,1,1),new tn({name:"BackgroundCubeMaterial",uniforms:On(ki.cube.uniforms),vertexShader:ki.cube.vertexShader,fragmentShader:ki.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(w,S,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),c.material.uniforms.envMap.value=_,c.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,(u!==_||d!==_.version||h!==n.toneMapping)&&(c.material.needsUpdate=!0,u=_,d=_.version,h=n.toneMapping),c.layers.enableAll(),f.unshift(c,c.geometry,c.material,0,0,null)):_&&_.isTexture&&(l===void 0&&(l=new Bi(new Os(2,2),new tn({name:"BackgroundMaterial",uniforms:On(ki.background.uniforms),vertexShader:ki.background.vertexShader,fragmentShader:ki.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=_,_.matrixAutoUpdate===!0&&_.updateMatrix(),l.material.uniforms.uvTransform.value.copy(_.matrix),(u!==_||d!==_.version||h!==n.toneMapping)&&(l.material.needsUpdate=!0,u=_,d=_.version,h=n.toneMapping),l.layers.enableAll(),f.unshift(l,l.geometry,l.material,0,0,null))}function g(f,p){t.buffers.color.setClear(f.r,f.g,f.b,p,a)}return{getClearColor:function(){return o},setClearColor:function(f,p=1){o.set(f),s=p,g(o,s)},getClearAlpha:function(){return s},setClearAlpha:function(f){s=f,g(o,s)},render:m}}function J_(n,e,t,i){const r=n.getParameter(34921),a=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||a!==null,s={},l=p(null);let c=l,u=!1;function d(L,P,F,H,X){let k=!1;if(o){const V=f(H,F,P);c!==V&&(c=V,m(c.object)),k=v(L,H,F,X),k&&_(L,H,F,X)}else{const V=P.wireframe===!0;(c.geometry!==H.id||c.program!==F.id||c.wireframe!==V)&&(c.geometry=H.id,c.program=F.id,c.wireframe=V,k=!0)}X!==null&&t.update(X,34963),(k||u)&&(u=!1,b(L,P,F,H),X!==null&&n.bindBuffer(34963,t.get(X).buffer))}function h(){return i.isWebGL2?n.createVertexArray():a.createVertexArrayOES()}function m(L){return i.isWebGL2?n.bindVertexArray(L):a.bindVertexArrayOES(L)}function g(L){return i.isWebGL2?n.deleteVertexArray(L):a.deleteVertexArrayOES(L)}function f(L,P,F){const H=F.wireframe===!0;let X=s[L.id];X===void 0&&(X={},s[L.id]=X);let k=X[P.id];k===void 0&&(k={},X[P.id]=k);let V=k[H];return V===void 0&&(V=p(h()),k[H]=V),V}function p(L){const P=[],F=[],H=[];for(let X=0;X<r;X++)P[X]=0,F[X]=0,H[X]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:P,enabledAttributes:F,attributeDivisors:H,object:L,attributes:{},index:null}}function v(L,P,F,H){const X=c.attributes,k=P.attributes;let V=0;const ie=F.getAttributes();for(const U in ie)if(ie[U].location>=0){const te=X[U];let oe=k[U];if(oe===void 0&&(U==="instanceMatrix"&&L.instanceMatrix&&(oe=L.instanceMatrix),U==="instanceColor"&&L.instanceColor&&(oe=L.instanceColor)),te===void 0||te.attribute!==oe||oe&&te.data!==oe.data)return!0;V++}return c.attributesNum!==V||c.index!==H}function _(L,P,F,H){const X={},k=P.attributes;let V=0;const ie=F.getAttributes();for(const U in ie)if(ie[U].location>=0){let te=k[U];te===void 0&&(U==="instanceMatrix"&&L.instanceMatrix&&(te=L.instanceMatrix),U==="instanceColor"&&L.instanceColor&&(te=L.instanceColor));const oe={};oe.attribute=te,te&&te.data&&(oe.data=te.data),X[U]=oe,V++}c.attributes=X,c.attributesNum=V,c.index=H}function y(){const L=c.newAttributes;for(let P=0,F=L.length;P<F;P++)L[P]=0}function x(L){w(L,0)}function w(L,P){const F=c.newAttributes,H=c.enabledAttributes,X=c.attributeDivisors;F[L]=1,H[L]===0&&(n.enableVertexAttribArray(L),H[L]=1),X[L]!==P&&((i.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](L,P),X[L]=P)}function S(){const L=c.newAttributes,P=c.enabledAttributes;for(let F=0,H=P.length;F<H;F++)P[F]!==L[F]&&(n.disableVertexAttribArray(F),P[F]=0)}function T(L,P,F,H,X,k){i.isWebGL2===!0&&(F===5124||F===5125)?n.vertexAttribIPointer(L,P,F,X,k):n.vertexAttribPointer(L,P,F,H,X,k)}function b(L,P,F,H){if(i.isWebGL2===!1&&(L.isInstancedMesh||H.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;y();const X=H.attributes,k=F.getAttributes(),V=P.defaultAttributeValues;for(const ie in k){const U=k[ie];if(U.location>=0){let te=X[ie];if(te===void 0&&(ie==="instanceMatrix"&&L.instanceMatrix&&(te=L.instanceMatrix),ie==="instanceColor"&&L.instanceColor&&(te=L.instanceColor)),te!==void 0){const oe=te.normalized,Re=te.itemSize,Q=t.get(te);if(Q===void 0)continue;const Be=Q.buffer,Se=Q.type,ae=Q.bytesPerElement;if(te.isInterleavedBufferAttribute){const ne=te.data,He=ne.stride,Pe=te.offset;if(ne.isInstancedInterleavedBuffer){for(let be=0;be<U.locationSize;be++)w(U.location+be,ne.meshPerAttribute);L.isInstancedMesh!==!0&&H._maxInstanceCount===void 0&&(H._maxInstanceCount=ne.meshPerAttribute*ne.count)}else for(let be=0;be<U.locationSize;be++)x(U.location+be);n.bindBuffer(34962,Be);for(let be=0;be<U.locationSize;be++)T(U.location+be,Re/U.locationSize,Se,oe,He*ae,(Pe+Re/U.locationSize*be)*ae)}else{if(te.isInstancedBufferAttribute){for(let ne=0;ne<U.locationSize;ne++)w(U.location+ne,te.meshPerAttribute);L.isInstancedMesh!==!0&&H._maxInstanceCount===void 0&&(H._maxInstanceCount=te.meshPerAttribute*te.count)}else for(let ne=0;ne<U.locationSize;ne++)x(U.location+ne);n.bindBuffer(34962,Be);for(let ne=0;ne<U.locationSize;ne++)T(U.location+ne,Re/U.locationSize,Se,oe,Re*ae,Re/U.locationSize*ne*ae)}}else if(V!==void 0){const oe=V[ie];if(oe!==void 0)switch(oe.length){case 2:n.vertexAttrib2fv(U.location,oe);break;case 3:n.vertexAttrib3fv(U.location,oe);break;case 4:n.vertexAttrib4fv(U.location,oe);break;default:n.vertexAttrib1fv(U.location,oe)}}}}S()}function E(){N();for(const L in s){const P=s[L];for(const F in P){const H=P[F];for(const X in H)g(H[X].object),delete H[X];delete P[F]}delete s[L]}}function D(L){if(s[L.id]===void 0)return;const P=s[L.id];for(const F in P){const H=P[F];for(const X in H)g(H[X].object),delete H[X];delete P[F]}delete s[L.id]}function I(L){for(const P in s){const F=s[P];if(F[L.id]===void 0)continue;const H=F[L.id];for(const X in H)g(H[X].object),delete H[X];delete F[L.id]}}function N(){z(),u=!0,c!==l&&(c=l,m(c.object))}function z(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:N,resetDefaultState:z,dispose:E,releaseStatesOfGeometry:D,releaseStatesOfProgram:I,initAttributes:y,enableAttribute:x,disableUnusedAttributes:S}}function K_(n,e,t,i){const r=i.isWebGL2;let a;function o(c){a=c}function s(c,u){n.drawArrays(a,c,u),t.update(u,a,1)}function l(c,u,d){if(d===0)return;let h,m;if(r)h=n,m="drawArraysInstanced";else if(h=e.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",h===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[m](a,c,u,d),t.update(u,a,d)}this.setMode=o,this.render=s,this.renderInstances=l}function Q_(n,e,t){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const T=e.get("EXT_texture_filter_anisotropic");i=n.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(T){if(T==="highp"){if(n.getShaderPrecisionFormat(35633,36338).precision>0&&n.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";T="mediump"}return T==="mediump"&&n.getShaderPrecisionFormat(35633,36337).precision>0&&n.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&n instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&n instanceof WebGL2ComputeRenderingContext;let s=t.precision!==void 0?t.precision:"highp";const l=a(s);l!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",l,"instead."),s=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,d=n.getParameter(34930),h=n.getParameter(35660),m=n.getParameter(3379),g=n.getParameter(34076),f=n.getParameter(34921),p=n.getParameter(36347),v=n.getParameter(36348),_=n.getParameter(36349),y=h>0,x=o||e.has("OES_texture_float"),w=y&&x,S=o?n.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:a,precision:s,logarithmicDepthBuffer:u,maxTextures:d,maxVertexTextures:h,maxTextureSize:m,maxCubemapSize:g,maxAttributes:f,maxVertexUniforms:p,maxVaryings:v,maxFragmentUniforms:_,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:w,maxSamples:S}}function ex(n){const e=this;let t=null,i=0,r=!1,a=!1;const o=new Br,s=new wi,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,h,m){const g=d.length!==0||h||i!==0||r;return r=h,t=u(d,m,0),i=d.length,g},this.beginShadows=function(){a=!0,u(null)},this.endShadows=function(){a=!1,c()},this.setState=function(d,h,m){const g=d.clippingPlanes,f=d.clipIntersection,p=d.clipShadows,v=n.get(d);if(!r||g===null||g.length===0||a&&!p)a?u(null):c();else{const _=a?0:i,y=_*4;let x=v.clippingState||null;l.value=x,x=u(g,h,y,m);for(let w=0;w!==y;++w)x[w]=t[w];v.clippingState=x,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=_}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(d,h,m,g){const f=d!==null?d.length:0;let p=null;if(f!==0){if(p=l.value,g!==!0||p===null){const v=m+f*4,_=h.matrixWorldInverse;s.getNormalMatrix(_),(p===null||p.length<v)&&(p=new Float32Array(v));for(let y=0,x=m;y!==f;++y,x+=4)o.copy(d[y]).applyMatrix4(_,s),o.normal.toArray(p,x),p[x+3]=o.constant}l.value=p,l.needsUpdate=!0}return e.numPlanes=f,e.numIntersection=0,p}}function tx(n){let e=new WeakMap;function t(o,s){return s===303?o.mapping=301:s===304&&(o.mapping=302),o}function i(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const s=o.mapping;if(s===303||s===304)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new vv(l.height/2);return c.fromEquirectangularTexture(n,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const s=o.target;s.removeEventListener("dispose",r);const l=e.get(s);l!==void 0&&(e.delete(s),l.dispose())}function a(){e=new WeakMap}return{get:i,dispose:a}}class ix extends dh{constructor(e=-1,t=1,i=1,r=-1,a=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=a,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,a,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=a,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let a=i-e,o=i+e,s=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=c*this.view.offsetX,o=a+c*this.view.width,s-=u*this.view.offsetY,l=s-u*this.view.height}this.projectionMatrix.makeOrthographic(a,o,s,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Dn=4,lc=[.125,.215,.35,.446,.526,.582],Gr=20,To=new ix,cc=new Ye;let Ao=null;const Ur=(1+Math.sqrt(5))/2,An=1/Ur,uc=[new B(1,1,1),new B(-1,1,1),new B(1,1,-1),new B(-1,1,-1),new B(0,Ur,An),new B(0,Ur,-An),new B(An,0,Ur),new B(-An,0,Ur),new B(Ur,An,0),new B(-Ur,An,0)];class hc{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){Ao=this._renderer.getRenderTarget(),this._setSize(256);const a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(e,i,r,a),t>0&&this._blur(a,0,0,t),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=fc(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=pc(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Ao),e.scissorTest=!1,rs(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===301||e.mapping===302?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Ao=this._renderer.getRenderTarget();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,encoding:3e3,depthBuffer:!1},r=dc(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=dc(e,t,i);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=rx(a)),this._blurMaterial=nx(a,e,t)}return r}_compileMaterial(e){const t=new Bi(this._lodPlanes[0],e);this._renderer.compile(t,To)}_sceneToCubeUV(e,t,i,r){const a=new si(90,1,t,i),o=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],l=this._renderer,c=l.autoClear,u=l.toneMapping;l.getClearColor(cc),l.toneMapping=0,l.autoClear=!1;const d=new ch({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),h=new Bi(new Ia,d);let m=!1;const g=e.background;g?g.isColor&&(d.color.copy(g),e.background=null,m=!0):(d.color.copy(cc),m=!0);for(let f=0;f<6;f++){const p=f%3;p===0?(a.up.set(0,o[f],0),a.lookAt(s[f],0,0)):p===1?(a.up.set(0,0,o[f]),a.lookAt(0,s[f],0)):(a.up.set(0,o[f],0),a.lookAt(0,0,s[f]));const v=this._cubeSize;rs(r,p*v,f>2?v:0,v,v),l.setRenderTarget(r),m&&l.render(h,a),l.render(e,a)}h.geometry.dispose(),h.material.dispose(),l.toneMapping=u,l.autoClear=c,e.background=g}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===301||e.mapping===302;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=fc()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=pc());const a=r?this._cubemapMaterial:this._equirectMaterial,o=new Bi(this._lodPlanes[0],a),s=a.uniforms;s.envMap.value=e;const l=this._cubeSize;rs(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,To)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const a=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=uc[(r-1)%uc.length];this._blur(e,r-1,r,a,o)}t.autoClear=i}_blur(e,t,i,r,a){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,r,"latitudinal",a),this._halfBlur(o,e,i,i,r,"longitudinal",a)}_halfBlur(e,t,i,r,a,o,s){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,d=new Bi(this._lodPlanes[r],c),h=c.uniforms,m=this._sizeLods[i]-1,g=isFinite(a)?Math.PI/(2*m):2*Math.PI/(2*Gr-1),f=a/g,p=isFinite(a)?1+Math.floor(u*f):Gr;p>Gr&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${Gr}`);const v=[];let _=0;for(let T=0;T<Gr;++T){const b=T/f,E=Math.exp(-b*b/2);v.push(E),T===0?_+=E:T<p&&(_+=2*E)}for(let T=0;T<v.length;T++)v[T]=v[T]/_;h.envMap.value=e.texture,h.samples.value=p,h.weights.value=v,h.latitudinal.value=o==="latitudinal",s&&(h.poleAxis.value=s);const{_lodMax:y}=this;h.dTheta.value=g,h.mipInt.value=y-i;const x=this._sizeLods[r],w=3*x*(r>y-Dn?r-y+Dn:0),S=4*(this._cubeSize-x);rs(t,w,S,3*x,2*x),l.setRenderTarget(t),l.render(d,To)}}function rx(n){const e=[],t=[],i=[];let r=n;const a=n-Dn+1+lc.length;for(let o=0;o<a;o++){const s=Math.pow(2,r);t.push(s);let l=1/s;o>n-Dn?l=lc[o-n+Dn-1]:o===0&&(l=0),i.push(l);const c=1/(s-2),u=-c,d=1+c,h=[u,u,d,u,d,d,u,u,d,d,u,d],m=6,g=6,f=3,p=2,v=1,_=new Float32Array(f*g*m),y=new Float32Array(p*g*m),x=new Float32Array(v*g*m);for(let S=0;S<m;S++){const T=S%3*2/3-1,b=S>2?0:-1,E=[T,b,0,T+2/3,b,0,T+2/3,b+1,0,T,b,0,T+2/3,b+1,0,T,b+1,0];_.set(E,f*g*S),y.set(h,p*g*S);const D=[S,S,S,S,S,S];x.set(D,v*g*S)}const w=new Wi;w.setAttribute("position",new Hi(_,f)),w.setAttribute("uv",new Hi(y,p)),w.setAttribute("faceIndex",new Hi(x,v)),e.push(w),r>Dn&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function dc(n,e,t){const i=new en(n,e,t);return i.texture.mapping=306,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function rs(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function nx(n,e,t){const i=new Float32Array(Gr),r=new B(0,1,0);return new tn({name:"SphericalGaussianBlur",defines:{n:Gr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:_l(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function pc(){return new tn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:_l(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function fc(){return new tn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:_l(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function _l(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function ax(n){let e=new WeakMap,t=null;function i(s){if(s&&s.isTexture){const l=s.mapping,c=l===303||l===304,u=l===301||l===302;if(c||u)if(s.isRenderTargetTexture&&s.needsPMREMUpdate===!0){s.needsPMREMUpdate=!1;let d=e.get(s);return t===null&&(t=new hc(n)),d=c?t.fromEquirectangular(s,d):t.fromCubemap(s,d),e.set(s,d),d.texture}else{if(e.has(s))return e.get(s).texture;{const d=s.image;if(c&&d&&d.height>0||u&&d&&r(d)){t===null&&(t=new hc(n));const h=c?t.fromEquirectangular(s):t.fromCubemap(s);return e.set(s,h),s.addEventListener("dispose",a),h.texture}else return null}}}return s}function r(s){let l=0;const c=6;for(let u=0;u<c;u++)s[u]!==void 0&&l++;return l===c}function a(s){const l=s.target;l.removeEventListener("dispose",a);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function sx(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(i){const r=t(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function ox(n,e,t,i){const r={},a=new WeakMap;function o(d){const h=d.target;h.index!==null&&e.remove(h.index);for(const g in h.attributes)e.remove(h.attributes[g]);h.removeEventListener("dispose",o),delete r[h.id];const m=a.get(h);m&&(e.remove(m),a.delete(h)),i.releaseStatesOfGeometry(h),h.isInstancedBufferGeometry===!0&&delete h._maxInstanceCount,t.memory.geometries--}function s(d,h){return r[h.id]===!0||(h.addEventListener("dispose",o),r[h.id]=!0,t.memory.geometries++),h}function l(d){const h=d.attributes;for(const g in h)e.update(h[g],34962);const m=d.morphAttributes;for(const g in m){const f=m[g];for(let p=0,v=f.length;p<v;p++)e.update(f[p],34962)}}function c(d){const h=[],m=d.index,g=d.attributes.position;let f=0;if(m!==null){const _=m.array;f=m.version;for(let y=0,x=_.length;y<x;y+=3){const w=_[y+0],S=_[y+1],T=_[y+2];h.push(w,S,S,T,T,w)}}else{const _=g.array;f=g.version;for(let y=0,x=_.length/3-1;y<x;y+=3){const w=y+0,S=y+1,T=y+2;h.push(w,S,S,T,T,w)}}const p=new(rh(h)?hh:uh)(h,1);p.version=f;const v=a.get(d);v&&e.remove(v),a.set(d,p)}function u(d){const h=a.get(d);if(h){const m=d.index;m!==null&&h.version<m.version&&c(d)}else c(d);return a.get(d)}return{get:s,update:l,getWireframeAttribute:u}}function lx(n,e,t,i){const r=i.isWebGL2;let a;function o(h){a=h}let s,l;function c(h){s=h.type,l=h.bytesPerElement}function u(h,m){n.drawElements(a,m,s,h*l),t.update(m,a,1)}function d(h,m,g){if(g===0)return;let f,p;if(r)f=n,p="drawElementsInstanced";else if(f=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",f===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[p](a,m,s,h*l,g),t.update(m,a,g)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=d}function cx(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(a,o,s){switch(t.calls++,o){case 4:t.triangles+=s*(a/3);break;case 1:t.lines+=s*(a/2);break;case 3:t.lines+=s*(a-1);break;case 2:t.lines+=s*a;break;case 0:t.points+=s*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function ux(n,e){return n[0]-e[0]}function hx(n,e){return Math.abs(e[1])-Math.abs(n[1])}function Co(n,e){let t=1;const i=e.isInterleavedBufferAttribute?e.data.array:e.array;i instanceof Int8Array?t=127:i instanceof Uint8Array?t=255:i instanceof Uint16Array?t=65535:i instanceof Int16Array?t=32767:i instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",i),n.divideScalar(t)}function dx(n,e,t){const i={},r=new Float32Array(8),a=new WeakMap,o=new Et,s=[];for(let c=0;c<8;c++)s[c]=[c,0];function l(c,u,d,h){const m=c.morphTargetInfluences;if(e.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,f=g!==void 0?g.length:0;let p=a.get(u);if(p===void 0||p.count!==f){let y=function(){L.dispose(),a.delete(u),u.removeEventListener("dispose",y)};p!==void 0&&p.texture.dispose();const x=u.morphAttributes.position!==void 0,w=u.morphAttributes.normal!==void 0,S=u.morphAttributes.color!==void 0,T=u.morphAttributes.position||[],b=u.morphAttributes.normal||[],E=u.morphAttributes.color||[];let D=0;x===!0&&(D=1),w===!0&&(D=2),S===!0&&(D=3);let I=u.attributes.position.count*D,N=1;I>e.maxTextureSize&&(N=Math.ceil(I/e.maxTextureSize),I=e.maxTextureSize);const z=new Float32Array(I*N*4*f),L=new oh(z,I,N,f);L.type=1015,L.needsUpdate=!0;const P=D*4;for(let F=0;F<f;F++){const H=T[F],X=b[F],k=E[F],V=I*N*4*F;for(let ie=0;ie<H.count;ie++){const U=ie*P;x===!0&&(o.fromBufferAttribute(H,ie),H.normalized===!0&&Co(o,H),z[V+U+0]=o.x,z[V+U+1]=o.y,z[V+U+2]=o.z,z[V+U+3]=0),w===!0&&(o.fromBufferAttribute(X,ie),X.normalized===!0&&Co(o,X),z[V+U+4]=o.x,z[V+U+5]=o.y,z[V+U+6]=o.z,z[V+U+7]=0),S===!0&&(o.fromBufferAttribute(k,ie),k.normalized===!0&&Co(o,k),z[V+U+8]=o.x,z[V+U+9]=o.y,z[V+U+10]=o.z,z[V+U+11]=k.itemSize===4?o.w:1)}}p={count:f,texture:L,size:new $e(I,N)},a.set(u,p),u.addEventListener("dispose",y)}let v=0;for(let y=0;y<m.length;y++)v+=m[y];const _=u.morphTargetsRelative?1:1-v;h.getUniforms().setValue(n,"morphTargetBaseInfluence",_),h.getUniforms().setValue(n,"morphTargetInfluences",m),h.getUniforms().setValue(n,"morphTargetsTexture",p.texture,t),h.getUniforms().setValue(n,"morphTargetsTextureSize",p.size)}else{const g=m===void 0?0:m.length;let f=i[u.id];if(f===void 0||f.length!==g){f=[];for(let x=0;x<g;x++)f[x]=[x,0];i[u.id]=f}for(let x=0;x<g;x++){const w=f[x];w[0]=x,w[1]=m[x]}f.sort(hx);for(let x=0;x<8;x++)x<g&&f[x][1]?(s[x][0]=f[x][0],s[x][1]=f[x][1]):(s[x][0]=Number.MAX_SAFE_INTEGER,s[x][1]=0);s.sort(ux);const p=u.morphAttributes.position,v=u.morphAttributes.normal;let _=0;for(let x=0;x<8;x++){const w=s[x],S=w[0],T=w[1];S!==Number.MAX_SAFE_INTEGER&&T?(p&&u.getAttribute("morphTarget"+x)!==p[S]&&u.setAttribute("morphTarget"+x,p[S]),v&&u.getAttribute("morphNormal"+x)!==v[S]&&u.setAttribute("morphNormal"+x,v[S]),r[x]=T,_+=T):(p&&u.hasAttribute("morphTarget"+x)===!0&&u.deleteAttribute("morphTarget"+x),v&&u.hasAttribute("morphNormal"+x)===!0&&u.deleteAttribute("morphNormal"+x),r[x]=0)}const y=u.morphTargetsRelative?1:1-_;h.getUniforms().setValue(n,"morphTargetBaseInfluence",y),h.getUniforms().setValue(n,"morphTargetInfluences",r)}}return{update:l}}function px(n,e,t,i){let r=new WeakMap;function a(l){const c=i.render.frame,u=l.geometry,d=e.get(l,u);return r.get(d)!==c&&(e.update(d),r.set(d,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",s)===!1&&l.addEventListener("dispose",s),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),d}function o(){r=new WeakMap}function s(l){const c=l.target;c.removeEventListener("dispose",s),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:a,dispose:o}}const mh=new ui,gh=new oh,vh=new ev,_h=new ph,mc=[],gc=[],vc=new Float32Array(16),_c=new Float32Array(9),xc=new Float32Array(4);function Xn(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let a=mc[r];if(a===void 0&&(a=new Float32Array(r),mc[r]=a),e!==0){i.toArray(a,0);for(let o=1,s=0;o!==e;++o)s+=t,n[o].toArray(a,s)}return a}function $t(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function Jt(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function Bs(n,e){let t=gc[e];t===void 0&&(t=new Int32Array(e),gc[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function fx(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function mx(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($t(t,e))return;n.uniform2fv(this.addr,e),Jt(t,e)}}function gx(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if($t(t,e))return;n.uniform3fv(this.addr,e),Jt(t,e)}}function vx(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($t(t,e))return;n.uniform4fv(this.addr,e),Jt(t,e)}}function _x(n,e){const t=this.cache,i=e.elements;if(i===void 0){if($t(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),Jt(t,e)}else{if($t(t,i))return;xc.set(i),n.uniformMatrix2fv(this.addr,!1,xc),Jt(t,i)}}function xx(n,e){const t=this.cache,i=e.elements;if(i===void 0){if($t(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),Jt(t,e)}else{if($t(t,i))return;_c.set(i),n.uniformMatrix3fv(this.addr,!1,_c),Jt(t,i)}}function yx(n,e){const t=this.cache,i=e.elements;if(i===void 0){if($t(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),Jt(t,e)}else{if($t(t,i))return;vc.set(i),n.uniformMatrix4fv(this.addr,!1,vc),Jt(t,i)}}function bx(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function wx(n,e){const t=this.cache;$t(t,e)||(n.uniform2iv(this.addr,e),Jt(t,e))}function Mx(n,e){const t=this.cache;$t(t,e)||(n.uniform3iv(this.addr,e),Jt(t,e))}function Sx(n,e){const t=this.cache;$t(t,e)||(n.uniform4iv(this.addr,e),Jt(t,e))}function Ex(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function Tx(n,e){const t=this.cache;$t(t,e)||(n.uniform2uiv(this.addr,e),Jt(t,e))}function Ax(n,e){const t=this.cache;$t(t,e)||(n.uniform3uiv(this.addr,e),Jt(t,e))}function Cx(n,e){const t=this.cache;$t(t,e)||(n.uniform4uiv(this.addr,e),Jt(t,e))}function Lx(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2D(e||mh,r)}function Dx(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||vh,r)}function Rx(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||_h,r)}function Px(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||gh,r)}function Ix(n){switch(n){case 5126:return fx;case 35664:return mx;case 35665:return gx;case 35666:return vx;case 35674:return _x;case 35675:return xx;case 35676:return yx;case 5124:case 35670:return bx;case 35667:case 35671:return wx;case 35668:case 35672:return Mx;case 35669:case 35673:return Sx;case 5125:return Ex;case 36294:return Tx;case 36295:return Ax;case 36296:return Cx;case 35678:case 36198:case 36298:case 36306:case 35682:return Lx;case 35679:case 36299:case 36307:return Dx;case 35680:case 36300:case 36308:case 36293:return Rx;case 36289:case 36303:case 36311:case 36292:return Px}}function Fx(n,e){n.uniform1fv(this.addr,e)}function zx(n,e){const t=Xn(e,this.size,2);n.uniform2fv(this.addr,t)}function Nx(n,e){const t=Xn(e,this.size,3);n.uniform3fv(this.addr,t)}function kx(n,e){const t=Xn(e,this.size,4);n.uniform4fv(this.addr,t)}function Ox(n,e){const t=Xn(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function Bx(n,e){const t=Xn(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function Ux(n,e){const t=Xn(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function Hx(n,e){n.uniform1iv(this.addr,e)}function Gx(n,e){n.uniform2iv(this.addr,e)}function Wx(n,e){n.uniform3iv(this.addr,e)}function Vx(n,e){n.uniform4iv(this.addr,e)}function qx(n,e){n.uniform1uiv(this.addr,e)}function jx(n,e){n.uniform2uiv(this.addr,e)}function Xx(n,e){n.uniform3uiv(this.addr,e)}function Yx(n,e){n.uniform4uiv(this.addr,e)}function Zx(n,e,t){const i=e.length,r=Bs(t,i);n.uniform1iv(this.addr,r);for(let a=0;a!==i;++a)t.setTexture2D(e[a]||mh,r[a])}function $x(n,e,t){const i=e.length,r=Bs(t,i);n.uniform1iv(this.addr,r);for(let a=0;a!==i;++a)t.setTexture3D(e[a]||vh,r[a])}function Jx(n,e,t){const i=e.length,r=Bs(t,i);n.uniform1iv(this.addr,r);for(let a=0;a!==i;++a)t.setTextureCube(e[a]||_h,r[a])}function Kx(n,e,t){const i=e.length,r=Bs(t,i);n.uniform1iv(this.addr,r);for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||gh,r[a])}function Qx(n){switch(n){case 5126:return Fx;case 35664:return zx;case 35665:return Nx;case 35666:return kx;case 35674:return Ox;case 35675:return Bx;case 35676:return Ux;case 5124:case 35670:return Hx;case 35667:case 35671:return Gx;case 35668:case 35672:return Wx;case 35669:case 35673:return Vx;case 5125:return qx;case 36294:return jx;case 36295:return Xx;case 36296:return Yx;case 35678:case 36198:case 36298:case 36306:case 35682:return Zx;case 35679:case 36299:case 36307:return $x;case 35680:case 36300:case 36308:case 36293:return Jx;case 36289:case 36303:case 36311:case 36292:return Kx}}class ey{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=Ix(t.type)}}class ty{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=Qx(t.type)}}class iy{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let a=0,o=r.length;a!==o;++a){const s=r[a];s.setValue(e,t[s.id],i)}}}const Lo=/(\w+)(\])?(\[|\.)?/g;function yc(n,e){n.seq.push(e),n.map[e.id]=e}function ry(n,e,t){const i=n.name,r=i.length;for(Lo.lastIndex=0;;){const a=Lo.exec(i),o=Lo.lastIndex;let s=a[1];const l=a[2]==="]",c=a[3];if(l&&(s=s|0),c===void 0||c==="["&&o+2===r){yc(t,c===void 0?new ey(s,n,e):new ty(s,n,e));break}else{let u=t.map[s];u===void 0&&(u=new iy(s),yc(t,u)),t=u}}}class hs{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,35718);for(let r=0;r<i;++r){const a=e.getActiveUniform(t,r),o=e.getUniformLocation(t,a.name);ry(a,o,this)}}setValue(e,t,i,r){const a=this.map[t];a!==void 0&&a.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let a=0,o=t.length;a!==o;++a){const s=t[a],l=i[s.id];l.needsUpdate!==!1&&s.setValue(e,l.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,a=e.length;r!==a;++r){const o=e[r];o.id in t&&i.push(o)}return i}}function bc(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}let ny=0;function ay(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),a=Math.min(e+6,t.length);for(let o=r;o<a;o++){const s=o+1;i.push(`${s===e?">":" "} ${s}: ${t[o]}`)}return i.join(`
`)}function sy(n){switch(n){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",n),["Linear","( value )"]}}function wc(n,e,t){const i=n.getShaderParameter(e,35713),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const o=parseInt(a[1]);return t.toUpperCase()+`

`+r+`

`+ay(n.getShaderSource(e),o)}else return r}function oy(n,e){const t=sy(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function ly(n,e){let t;switch(e){case 1:t="Linear";break;case 2:t="Reinhard";break;case 3:t="OptimizedCineon";break;case 4:t="ACESFilmic";break;case 5:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function cy(n){return[n.extensionDerivatives||n.envMapCubeUVHeight||n.bumpMap||n.tangentSpaceNormalMap||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(da).join(`
`)}function uy(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function hy(n,e){const t={},i=n.getProgramParameter(e,35721);for(let r=0;r<i;r++){const a=n.getActiveAttrib(e,r),o=a.name;let s=1;a.type===35674&&(s=2),a.type===35675&&(s=3),a.type===35676&&(s=4),t[o]={type:a.type,location:n.getAttribLocation(e,o),locationSize:s}}return t}function da(n){return n!==""}function Mc(n,e){return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Sc(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const dy=/^[ \t]*#include +<([\w\d./]+)>/gm;function Xo(n){return n.replace(dy,py)}function py(n,e){const t=Ue[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Xo(t)}const fy=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,my=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ec(n){return n.replace(my,xh).replace(fy,gy)}function gy(n,e,t,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),xh(n,e,t,i)}function xh(n,e,t,i){let r="";for(let a=parseInt(e);a<parseInt(t);a++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function Tc(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function vy(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===1?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===2?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===3&&(e="SHADOWMAP_TYPE_VSM"),e}function _y(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:e="ENVMAP_TYPE_CUBE_UV";break}return e}function xy(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case 302:e="ENVMAP_MODE_REFRACTION";break}return e}function yy(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD";break}return e}function by(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function wy(n,e,t,i){const r=n.getContext(),a=t.defines;let o=t.vertexShader,s=t.fragmentShader;const l=vy(t),c=_y(t),u=xy(t),d=yy(t),h=by(t),m=t.isWebGL2?"":cy(t),g=uy(a),f=r.createProgram();let p,v,_=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(p=[g].filter(da).join(`
`),p.length>0&&(p+=`
`),v=[m,g].filter(da).join(`
`),v.length>0&&(v+=`
`)):(p=[Tc(t),"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(da).join(`
`),v=[m,Tc(t),"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+d:"",h?"#define CUBEUV_TEXEL_WIDTH "+h.texelWidth:"",h?"#define CUBEUV_TEXEL_HEIGHT "+h.texelHeight:"",h?"#define CUBEUV_MAX_MIP "+h.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==0?"#define TONE_MAPPING":"",t.toneMapping!==0?Ue.tonemapping_pars_fragment:"",t.toneMapping!==0?ly("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ue.encodings_pars_fragment,oy("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(da).join(`
`)),o=Xo(o),o=Mc(o,t),o=Sc(o,t),s=Xo(s),s=Mc(s,t),s=Sc(s,t),o=Ec(o),s=Ec(s),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(_=`#version 300 es
`,p=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,v=["#define varying in",t.glslVersion===Zl?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Zl?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const y=_+p+o,x=_+v+s,w=bc(r,35633,y),S=bc(r,35632,x);if(r.attachShader(f,w),r.attachShader(f,S),t.index0AttributeName!==void 0?r.bindAttribLocation(f,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(f,0,"position"),r.linkProgram(f),n.debug.checkShaderErrors){const E=r.getProgramInfoLog(f).trim(),D=r.getShaderInfoLog(w).trim(),I=r.getShaderInfoLog(S).trim();let N=!0,z=!0;if(r.getProgramParameter(f,35714)===!1){N=!1;const L=wc(r,w,"vertex"),P=wc(r,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(f,35715)+`

Program Info Log: `+E+`
`+L+`
`+P)}else E!==""?console.warn("THREE.WebGLProgram: Program Info Log:",E):(D===""||I==="")&&(z=!1);z&&(this.diagnostics={runnable:N,programLog:E,vertexShader:{log:D,prefix:p},fragmentShader:{log:I,prefix:v}})}r.deleteShader(w),r.deleteShader(S);let T;this.getUniforms=function(){return T===void 0&&(T=new hs(r,f)),T};let b;return this.getAttributes=function(){return b===void 0&&(b=hy(r,f)),b},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(f),this.program=void 0},this.name=t.shaderName,this.id=ny++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=w,this.fragmentShader=S,this}let My=0;class Sy{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),a=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(a)===!1&&(o.add(a),a.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const i=new Ey(e);t.set(e,i)}return t.get(e)}}class Ey{constructor(e){this.id=My++,this.code=e,this.usedTimes=0}}function Ty(n,e,t,i,r,a,o){const s=new lh,l=new Sy,c=[],u=r.isWebGL2,d=r.logarithmicDepthBuffer,h=r.vertexTextures;let m=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(b,E,D,I,N){const z=I.fog,L=N.geometry,P=b.isMeshStandardMaterial?I.environment:null,F=(b.isMeshStandardMaterial?t:e).get(b.envMap||P),H=F&&F.mapping===306?F.image.height:null,X=g[b.type];b.precision!==null&&(m=r.getMaxPrecision(b.precision),m!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",m,"instead."));const k=L.morphAttributes.position||L.morphAttributes.normal||L.morphAttributes.color,V=k!==void 0?k.length:0;let ie=0;L.morphAttributes.position!==void 0&&(ie=1),L.morphAttributes.normal!==void 0&&(ie=2),L.morphAttributes.color!==void 0&&(ie=3);let U,te,oe,Re;if(X){const ne=ki[X];U=ne.vertexShader,te=ne.fragmentShader}else U=b.vertexShader,te=b.fragmentShader,l.update(b),oe=l.getVertexShaderID(b),Re=l.getFragmentShaderID(b);const Q=n.getRenderTarget(),Be=b.alphaTest>0,Se=b.clearcoat>0,ae=b.iridescence>0;return{isWebGL2:u,shaderID:X,shaderName:b.type,vertexShader:U,fragmentShader:te,defines:b.defines,customVertexShaderID:oe,customFragmentShaderID:Re,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:m,instancing:N.isInstancedMesh===!0,instancingColor:N.isInstancedMesh===!0&&N.instanceColor!==null,supportsVertexTextures:h,outputEncoding:Q===null?n.outputEncoding:Q.isXRRenderTarget===!0?Q.texture.encoding:3e3,map:!!b.map,matcap:!!b.matcap,envMap:!!F,envMapMode:F&&F.mapping,envMapCubeUVHeight:H,lightMap:!!b.lightMap,aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:b.normalMapType===1,tangentSpaceNormalMap:b.normalMapType===0,decodeVideoTexture:!!b.map&&b.map.isVideoTexture===!0&&b.map.encoding===3001,clearcoat:Se,clearcoatMap:Se&&!!b.clearcoatMap,clearcoatRoughnessMap:Se&&!!b.clearcoatRoughnessMap,clearcoatNormalMap:Se&&!!b.clearcoatNormalMap,iridescence:ae,iridescenceMap:ae&&!!b.iridescenceMap,iridescenceThicknessMap:ae&&!!b.iridescenceThicknessMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,specularIntensityMap:!!b.specularIntensityMap,specularColorMap:!!b.specularColorMap,opaque:b.transparent===!1&&b.blending===1,alphaMap:!!b.alphaMap,alphaTest:Be,gradientMap:!!b.gradientMap,sheen:b.sheen>0,sheenColorMap:!!b.sheenColorMap,sheenRoughnessMap:!!b.sheenRoughnessMap,transmission:b.transmission>0,transmissionMap:!!b.transmissionMap,thicknessMap:!!b.thicknessMap,combine:b.combine,vertexTangents:!!b.normalMap&&!!L.attributes.tangent,vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!L.attributes.color&&L.attributes.color.itemSize===4,vertexUvs:!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatMap||!!b.clearcoatRoughnessMap||!!b.clearcoatNormalMap||!!b.iridescenceMap||!!b.iridescenceThicknessMap||!!b.displacementMap||!!b.transmissionMap||!!b.thicknessMap||!!b.specularIntensityMap||!!b.specularColorMap||!!b.sheenColorMap||!!b.sheenRoughnessMap,uvsVertexOnly:!(b.map||b.bumpMap||b.normalMap||b.specularMap||b.alphaMap||b.emissiveMap||b.roughnessMap||b.metalnessMap||b.clearcoatNormalMap||b.iridescenceMap||b.iridescenceThicknessMap||b.transmission>0||b.transmissionMap||b.thicknessMap||b.specularIntensityMap||b.specularColorMap||b.sheen>0||b.sheenColorMap||b.sheenRoughnessMap)&&!!b.displacementMap,fog:!!z,useFog:b.fog===!0,fogExp2:z&&z.isFogExp2,flatShading:!!b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:d,skinning:N.isSkinnedMesh===!0,morphTargets:L.morphAttributes.position!==void 0,morphNormals:L.morphAttributes.normal!==void 0,morphColors:L.morphAttributes.color!==void 0,morphTargetsCount:V,morphTextureStride:ie,numDirLights:E.directional.length,numPointLights:E.point.length,numSpotLights:E.spot.length,numRectAreaLights:E.rectArea.length,numHemiLights:E.hemi.length,numDirLightShadows:E.directionalShadowMap.length,numPointLightShadows:E.pointShadowMap.length,numSpotLightShadows:E.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:b.dithering,shadowMapEnabled:n.shadowMap.enabled&&D.length>0,shadowMapType:n.shadowMap.type,toneMapping:b.toneMapped?n.toneMapping:0,physicallyCorrectLights:n.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===2,flipSided:b.side===1,useDepthPacking:!!b.depthPacking,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||i.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function p(b){const E=[];if(b.shaderID?E.push(b.shaderID):(E.push(b.customVertexShaderID),E.push(b.customFragmentShaderID)),b.defines!==void 0)for(const D in b.defines)E.push(D),E.push(b.defines[D]);return b.isRawShaderMaterial===!1&&(v(E,b),_(E,b),E.push(n.outputEncoding)),E.push(b.customProgramCacheKey),E.join()}function v(b,E){b.push(E.precision),b.push(E.outputEncoding),b.push(E.envMapMode),b.push(E.envMapCubeUVHeight),b.push(E.combine),b.push(E.vertexUvs),b.push(E.fogExp2),b.push(E.sizeAttenuation),b.push(E.morphTargetsCount),b.push(E.morphAttributeCount),b.push(E.numDirLights),b.push(E.numPointLights),b.push(E.numSpotLights),b.push(E.numHemiLights),b.push(E.numRectAreaLights),b.push(E.numDirLightShadows),b.push(E.numPointLightShadows),b.push(E.numSpotLightShadows),b.push(E.shadowMapType),b.push(E.toneMapping),b.push(E.numClippingPlanes),b.push(E.numClipIntersection),b.push(E.depthPacking)}function _(b,E){s.disableAll(),E.isWebGL2&&s.enable(0),E.supportsVertexTextures&&s.enable(1),E.instancing&&s.enable(2),E.instancingColor&&s.enable(3),E.map&&s.enable(4),E.matcap&&s.enable(5),E.envMap&&s.enable(6),E.lightMap&&s.enable(7),E.aoMap&&s.enable(8),E.emissiveMap&&s.enable(9),E.bumpMap&&s.enable(10),E.normalMap&&s.enable(11),E.objectSpaceNormalMap&&s.enable(12),E.tangentSpaceNormalMap&&s.enable(13),E.clearcoat&&s.enable(14),E.clearcoatMap&&s.enable(15),E.clearcoatRoughnessMap&&s.enable(16),E.clearcoatNormalMap&&s.enable(17),E.iridescence&&s.enable(18),E.iridescenceMap&&s.enable(19),E.iridescenceThicknessMap&&s.enable(20),E.displacementMap&&s.enable(21),E.specularMap&&s.enable(22),E.roughnessMap&&s.enable(23),E.metalnessMap&&s.enable(24),E.gradientMap&&s.enable(25),E.alphaMap&&s.enable(26),E.alphaTest&&s.enable(27),E.vertexColors&&s.enable(28),E.vertexAlphas&&s.enable(29),E.vertexUvs&&s.enable(30),E.vertexTangents&&s.enable(31),E.uvsVertexOnly&&s.enable(32),E.fog&&s.enable(33),b.push(s.mask),s.disableAll(),E.useFog&&s.enable(0),E.flatShading&&s.enable(1),E.logarithmicDepthBuffer&&s.enable(2),E.skinning&&s.enable(3),E.morphTargets&&s.enable(4),E.morphNormals&&s.enable(5),E.morphColors&&s.enable(6),E.premultipliedAlpha&&s.enable(7),E.shadowMapEnabled&&s.enable(8),E.physicallyCorrectLights&&s.enable(9),E.doubleSided&&s.enable(10),E.flipSided&&s.enable(11),E.useDepthPacking&&s.enable(12),E.dithering&&s.enable(13),E.specularIntensityMap&&s.enable(14),E.specularColorMap&&s.enable(15),E.transmission&&s.enable(16),E.transmissionMap&&s.enable(17),E.thicknessMap&&s.enable(18),E.sheen&&s.enable(19),E.sheenColorMap&&s.enable(20),E.sheenRoughnessMap&&s.enable(21),E.decodeVideoTexture&&s.enable(22),E.opaque&&s.enable(23),b.push(s.mask)}function y(b){const E=g[b.type];let D;if(E){const I=ki[E];D=pv.clone(I.uniforms)}else D=b.uniforms;return D}function x(b,E){let D;for(let I=0,N=c.length;I<N;I++){const z=c[I];if(z.cacheKey===E){D=z,++D.usedTimes;break}}return D===void 0&&(D=new wy(n,E,b,a),c.push(D)),D}function w(b){if(--b.usedTimes===0){const E=c.indexOf(b);c[E]=c[c.length-1],c.pop(),b.destroy()}}function S(b){l.remove(b)}function T(){l.dispose()}return{getParameters:f,getProgramCacheKey:p,getUniforms:y,acquireProgram:x,releaseProgram:w,releaseShaderCache:S,programs:c,dispose:T}}function Ay(){let n=new WeakMap;function e(a){let o=n.get(a);return o===void 0&&(o={},n.set(a,o)),o}function t(a){n.delete(a)}function i(a,o,s){n.get(a)[o]=s}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function Cy(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function Ac(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function Cc(){const n=[];let e=0;const t=[],i=[],r=[];function a(){e=0,t.length=0,i.length=0,r.length=0}function o(d,h,m,g,f,p){let v=n[e];return v===void 0?(v={id:d.id,object:d,geometry:h,material:m,groupOrder:g,renderOrder:d.renderOrder,z:f,group:p},n[e]=v):(v.id=d.id,v.object=d,v.geometry=h,v.material=m,v.groupOrder=g,v.renderOrder=d.renderOrder,v.z=f,v.group=p),e++,v}function s(d,h,m,g,f,p){const v=o(d,h,m,g,f,p);m.transmission>0?i.push(v):m.transparent===!0?r.push(v):t.push(v)}function l(d,h,m,g,f,p){const v=o(d,h,m,g,f,p);m.transmission>0?i.unshift(v):m.transparent===!0?r.unshift(v):t.unshift(v)}function c(d,h){t.length>1&&t.sort(d||Cy),i.length>1&&i.sort(h||Ac),r.length>1&&r.sort(h||Ac)}function u(){for(let d=e,h=n.length;d<h;d++){const m=n[d];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:i,transparent:r,init:a,push:s,unshift:l,finish:u,sort:c}}function Ly(){let n=new WeakMap;function e(i,r){let a;return n.has(i)===!1?(a=new Cc,n.set(i,[a])):r>=n.get(i).length?(a=new Cc,n.get(i).push(a)):a=n.get(i)[r],a}function t(){n=new WeakMap}return{get:e,dispose:t}}function Dy(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new B,color:new Ye};break;case"SpotLight":t={position:new B,direction:new B,color:new Ye,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new B,color:new Ye,distance:0,decay:0};break;case"HemisphereLight":t={direction:new B,skyColor:new Ye,groundColor:new Ye};break;case"RectAreaLight":t={color:new Ye,position:new B,halfWidth:new B,halfHeight:new B};break}return n[e.id]=t,t}}}function Ry(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $e};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $e};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $e,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let Py=0;function Iy(n,e){return(e.castShadow?1:0)-(n.castShadow?1:0)}function Fy(n,e){const t=new Dy,i=Ry(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)r.probe.push(new B);const a=new B,o=new Tt,s=new Tt;function l(u,d){let h=0,m=0,g=0;for(let E=0;E<9;E++)r.probe[E].set(0,0,0);let f=0,p=0,v=0,_=0,y=0,x=0,w=0,S=0;u.sort(Iy);const T=d!==!0?Math.PI:1;for(let E=0,D=u.length;E<D;E++){const I=u[E],N=I.color,z=I.intensity,L=I.distance,P=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)h+=N.r*z*T,m+=N.g*z*T,g+=N.b*z*T;else if(I.isLightProbe)for(let F=0;F<9;F++)r.probe[F].addScaledVector(I.sh.coefficients[F],z);else if(I.isDirectionalLight){const F=t.get(I);if(F.color.copy(I.color).multiplyScalar(I.intensity*T),I.castShadow){const H=I.shadow,X=i.get(I);X.shadowBias=H.bias,X.shadowNormalBias=H.normalBias,X.shadowRadius=H.radius,X.shadowMapSize=H.mapSize,r.directionalShadow[f]=X,r.directionalShadowMap[f]=P,r.directionalShadowMatrix[f]=I.shadow.matrix,x++}r.directional[f]=F,f++}else if(I.isSpotLight){const F=t.get(I);if(F.position.setFromMatrixPosition(I.matrixWorld),F.color.copy(N).multiplyScalar(z*T),F.distance=L,F.coneCos=Math.cos(I.angle),F.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),F.decay=I.decay,I.castShadow){const H=I.shadow,X=i.get(I);X.shadowBias=H.bias,X.shadowNormalBias=H.normalBias,X.shadowRadius=H.radius,X.shadowMapSize=H.mapSize,r.spotShadow[v]=X,r.spotShadowMap[v]=P,r.spotShadowMatrix[v]=I.shadow.matrix,S++}r.spot[v]=F,v++}else if(I.isRectAreaLight){const F=t.get(I);F.color.copy(N).multiplyScalar(z),F.halfWidth.set(I.width*.5,0,0),F.halfHeight.set(0,I.height*.5,0),r.rectArea[_]=F,_++}else if(I.isPointLight){const F=t.get(I);if(F.color.copy(I.color).multiplyScalar(I.intensity*T),F.distance=I.distance,F.decay=I.decay,I.castShadow){const H=I.shadow,X=i.get(I);X.shadowBias=H.bias,X.shadowNormalBias=H.normalBias,X.shadowRadius=H.radius,X.shadowMapSize=H.mapSize,X.shadowCameraNear=H.camera.near,X.shadowCameraFar=H.camera.far,r.pointShadow[p]=X,r.pointShadowMap[p]=P,r.pointShadowMatrix[p]=I.shadow.matrix,w++}r.point[p]=F,p++}else if(I.isHemisphereLight){const F=t.get(I);F.skyColor.copy(I.color).multiplyScalar(z*T),F.groundColor.copy(I.groundColor).multiplyScalar(z*T),r.hemi[y]=F,y++}}_>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=he.LTC_FLOAT_1,r.rectAreaLTC2=he.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=he.LTC_HALF_1,r.rectAreaLTC2=he.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=h,r.ambient[1]=m,r.ambient[2]=g;const b=r.hash;(b.directionalLength!==f||b.pointLength!==p||b.spotLength!==v||b.rectAreaLength!==_||b.hemiLength!==y||b.numDirectionalShadows!==x||b.numPointShadows!==w||b.numSpotShadows!==S)&&(r.directional.length=f,r.spot.length=v,r.rectArea.length=_,r.point.length=p,r.hemi.length=y,r.directionalShadow.length=x,r.directionalShadowMap.length=x,r.pointShadow.length=w,r.pointShadowMap.length=w,r.spotShadow.length=S,r.spotShadowMap.length=S,r.directionalShadowMatrix.length=x,r.pointShadowMatrix.length=w,r.spotShadowMatrix.length=S,b.directionalLength=f,b.pointLength=p,b.spotLength=v,b.rectAreaLength=_,b.hemiLength=y,b.numDirectionalShadows=x,b.numPointShadows=w,b.numSpotShadows=S,r.version=Py++)}function c(u,d){let h=0,m=0,g=0,f=0,p=0;const v=d.matrixWorldInverse;for(let _=0,y=u.length;_<y;_++){const x=u[_];if(x.isDirectionalLight){const w=r.directional[h];w.direction.setFromMatrixPosition(x.matrixWorld),a.setFromMatrixPosition(x.target.matrixWorld),w.direction.sub(a),w.direction.transformDirection(v),h++}else if(x.isSpotLight){const w=r.spot[g];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(v),w.direction.setFromMatrixPosition(x.matrixWorld),a.setFromMatrixPosition(x.target.matrixWorld),w.direction.sub(a),w.direction.transformDirection(v),g++}else if(x.isRectAreaLight){const w=r.rectArea[f];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(v),s.identity(),o.copy(x.matrixWorld),o.premultiply(v),s.extractRotation(o),w.halfWidth.set(x.width*.5,0,0),w.halfHeight.set(0,x.height*.5,0),w.halfWidth.applyMatrix4(s),w.halfHeight.applyMatrix4(s),f++}else if(x.isPointLight){const w=r.point[m];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(v),m++}else if(x.isHemisphereLight){const w=r.hemi[p];w.direction.setFromMatrixPosition(x.matrixWorld),w.direction.transformDirection(v),p++}}}return{setup:l,setupView:c,state:r}}function Lc(n,e){const t=new Fy(n,e),i=[],r=[];function a(){i.length=0,r.length=0}function o(u){i.push(u)}function s(u){r.push(u)}function l(u){t.setup(i,u)}function c(u){t.setupView(i,u)}return{init:a,state:{lightsArray:i,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:s}}function zy(n,e){let t=new WeakMap;function i(a,o=0){let s;return t.has(a)===!1?(s=new Lc(n,e),t.set(a,[s])):o>=t.get(a).length?(s=new Lc(n,e),t.get(a).push(s)):s=t.get(a)[o],s}function r(){t=new WeakMap}return{get:i,dispose:r}}class Ny extends on{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class ky extends on{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new B,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const Oy=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,By=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Uy(n,e,t){let i=new vl;const r=new $e,a=new $e,o=new Et,s=new Ny({depthPacking:3201}),l=new ky,c={},u=t.maxTextureSize,d={0:1,1:0,2:2},h=new tn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new $e},radius:{value:4}},vertexShader:Oy,fragmentShader:By}),m=h.clone();m.defines.HORIZONTAL_PASS=1;const g=new Wi;g.setAttribute("position",new Hi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new Bi(g,h),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(x,w,S){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||x.length===0)return;const T=n.getRenderTarget(),b=n.getActiveCubeFace(),E=n.getActiveMipmapLevel(),D=n.state;D.setBlending(0),D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);for(let I=0,N=x.length;I<N;I++){const z=x[I],L=z.shadow;if(L===void 0){console.warn("THREE.WebGLShadowMap:",z,"has no shadow.");continue}if(L.autoUpdate===!1&&L.needsUpdate===!1)continue;r.copy(L.mapSize);const P=L.getFrameExtents();if(r.multiply(P),a.copy(L.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(a.x=Math.floor(u/P.x),r.x=a.x*P.x,L.mapSize.x=a.x),r.y>u&&(a.y=Math.floor(u/P.y),r.y=a.y*P.y,L.mapSize.y=a.y)),L.map===null){const H=this.type!==3?{minFilter:1003,magFilter:1003}:{};L.map=new en(r.x,r.y,H),L.map.texture.name=z.name+".shadowMap",L.camera.updateProjectionMatrix()}n.setRenderTarget(L.map),n.clear();const F=L.getViewportCount();for(let H=0;H<F;H++){const X=L.getViewport(H);o.set(a.x*X.x,a.y*X.y,a.x*X.z,a.y*X.w),D.viewport(o),L.updateMatrices(z,H),i=L.getFrustum(),y(w,S,L.camera,z,this.type)}L.isPointLightShadow!==!0&&this.type===3&&v(L,S),L.needsUpdate=!1}p.needsUpdate=!1,n.setRenderTarget(T,b,E)};function v(x,w){const S=e.update(f);h.defines.VSM_SAMPLES!==x.blurSamples&&(h.defines.VSM_SAMPLES=x.blurSamples,m.defines.VSM_SAMPLES=x.blurSamples,h.needsUpdate=!0,m.needsUpdate=!0),x.mapPass===null&&(x.mapPass=new en(r.x,r.y)),h.uniforms.shadow_pass.value=x.map.texture,h.uniforms.resolution.value=x.mapSize,h.uniforms.radius.value=x.radius,n.setRenderTarget(x.mapPass),n.clear(),n.renderBufferDirect(w,null,S,h,f,null),m.uniforms.shadow_pass.value=x.mapPass.texture,m.uniforms.resolution.value=x.mapSize,m.uniforms.radius.value=x.radius,n.setRenderTarget(x.map),n.clear(),n.renderBufferDirect(w,null,S,m,f,null)}function _(x,w,S,T,b,E){let D=null;const I=S.isPointLight===!0?x.customDistanceMaterial:x.customDepthMaterial;if(I!==void 0?D=I:D=S.isPointLight===!0?l:s,n.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0){const N=D.uuid,z=w.uuid;let L=c[N];L===void 0&&(L={},c[N]=L);let P=L[z];P===void 0&&(P=D.clone(),L[z]=P),D=P}return D.visible=w.visible,D.wireframe=w.wireframe,E===3?D.side=w.shadowSide!==null?w.shadowSide:w.side:D.side=w.shadowSide!==null?w.shadowSide:d[w.side],D.alphaMap=w.alphaMap,D.alphaTest=w.alphaTest,D.clipShadows=w.clipShadows,D.clippingPlanes=w.clippingPlanes,D.clipIntersection=w.clipIntersection,D.displacementMap=w.displacementMap,D.displacementScale=w.displacementScale,D.displacementBias=w.displacementBias,D.wireframeLinewidth=w.wireframeLinewidth,D.linewidth=w.linewidth,S.isPointLight===!0&&D.isMeshDistanceMaterial===!0&&(D.referencePosition.setFromMatrixPosition(S.matrixWorld),D.nearDistance=T,D.farDistance=b),D}function y(x,w,S,T,b){if(x.visible===!1)return;if(x.layers.test(w.layers)&&(x.isMesh||x.isLine||x.isPoints)&&(x.castShadow||x.receiveShadow&&b===3)&&(!x.frustumCulled||i.intersectsObject(x))){x.modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,x.matrixWorld);const D=e.update(x),I=x.material;if(Array.isArray(I)){const N=D.groups;for(let z=0,L=N.length;z<L;z++){const P=N[z],F=I[P.materialIndex];if(F&&F.visible){const H=_(x,F,T,S.near,S.far,b);n.renderBufferDirect(S,null,D,H,x,P)}}}else if(I.visible){const N=_(x,I,T,S.near,S.far,b);n.renderBufferDirect(S,null,D,N,x,null)}}const E=x.children;for(let D=0,I=E.length;D<I;D++)y(E[D],w,S,T,b)}}function Hy(n,e,t){const i=t.isWebGL2;function r(){let O=!1;const fe=new Et;let Z=null;const me=new Et(0,0,0,0);return{setMask:function(ce){Z!==ce&&!O&&(n.colorMask(ce,ce,ce,ce),Z=ce)},setLocked:function(ce){O=ce},setClear:function(ce,lt,At,mt,hr){hr===!0&&(ce*=mt,lt*=mt,At*=mt),fe.set(ce,lt,At,mt),me.equals(fe)===!1&&(n.clearColor(ce,lt,At,mt),me.copy(fe))},reset:function(){O=!1,Z=null,me.set(-1,0,0,0)}}}function a(){let O=!1,fe=null,Z=null,me=null;return{setTest:function(ce){ce?Be(2929):Se(2929)},setMask:function(ce){fe!==ce&&!O&&(n.depthMask(ce),fe=ce)},setFunc:function(ce){if(Z!==ce){if(ce)switch(ce){case 0:n.depthFunc(512);break;case 1:n.depthFunc(519);break;case 2:n.depthFunc(513);break;case 3:n.depthFunc(515);break;case 4:n.depthFunc(514);break;case 5:n.depthFunc(518);break;case 6:n.depthFunc(516);break;case 7:n.depthFunc(517);break;default:n.depthFunc(515)}else n.depthFunc(515);Z=ce}},setLocked:function(ce){O=ce},setClear:function(ce){me!==ce&&(n.clearDepth(ce),me=ce)},reset:function(){O=!1,fe=null,Z=null,me=null}}}function o(){let O=!1,fe=null,Z=null,me=null,ce=null,lt=null,At=null,mt=null,hr=null;return{setTest:function(pt){O||(pt?Be(2960):Se(2960))},setMask:function(pt){fe!==pt&&!O&&(n.stencilMask(pt),fe=pt)},setFunc:function(pt,ji,gi){(Z!==pt||me!==ji||ce!==gi)&&(n.stencilFunc(pt,ji,gi),Z=pt,me=ji,ce=gi)},setOp:function(pt,ji,gi){(lt!==pt||At!==ji||mt!==gi)&&(n.stencilOp(pt,ji,gi),lt=pt,At=ji,mt=gi)},setLocked:function(pt){O=pt},setClear:function(pt){hr!==pt&&(n.clearStencil(pt),hr=pt)},reset:function(){O=!1,fe=null,Z=null,me=null,ce=null,lt=null,At=null,mt=null,hr=null}}}const s=new r,l=new a,c=new o,u=new WeakMap,d=new WeakMap;let h={},m={},g=new WeakMap,f=[],p=null,v=!1,_=null,y=null,x=null,w=null,S=null,T=null,b=null,E=!1,D=null,I=null,N=null,z=null,L=null;const P=n.getParameter(35661);let F=!1,H=0;const X=n.getParameter(7938);X.indexOf("WebGL")!==-1?(H=parseFloat(/^WebGL (\d)/.exec(X)[1]),F=H>=1):X.indexOf("OpenGL ES")!==-1&&(H=parseFloat(/^OpenGL ES (\d)/.exec(X)[1]),F=H>=2);let k=null,V={};const ie=n.getParameter(3088),U=n.getParameter(2978),te=new Et().fromArray(ie),oe=new Et().fromArray(U);function Re(O,fe,Z){const me=new Uint8Array(4),ce=n.createTexture();n.bindTexture(O,ce),n.texParameteri(O,10241,9728),n.texParameteri(O,10240,9728);for(let lt=0;lt<Z;lt++)n.texImage2D(fe+lt,0,6408,1,1,0,6408,5121,me);return ce}const Q={};Q[3553]=Re(3553,3553,1),Q[34067]=Re(34067,34069,6),s.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Be(2929),l.setFunc(3),Ft(!1),pi(1),Be(2884),Je(0);function Be(O){h[O]!==!0&&(n.enable(O),h[O]=!0)}function Se(O){h[O]!==!1&&(n.disable(O),h[O]=!1)}function ae(O,fe){return m[O]!==fe?(n.bindFramebuffer(O,fe),m[O]=fe,i&&(O===36009&&(m[36160]=fe),O===36160&&(m[36009]=fe)),!0):!1}function ne(O,fe){let Z=f,me=!1;if(O)if(Z=g.get(fe),Z===void 0&&(Z=[],g.set(fe,Z)),O.isWebGLMultipleRenderTargets){const ce=O.texture;if(Z.length!==ce.length||Z[0]!==36064){for(let lt=0,At=ce.length;lt<At;lt++)Z[lt]=36064+lt;Z.length=ce.length,me=!0}}else Z[0]!==36064&&(Z[0]=36064,me=!0);else Z[0]!==1029&&(Z[0]=1029,me=!0);me&&(t.isWebGL2?n.drawBuffers(Z):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Z))}function He(O){return p!==O?(n.useProgram(O),p=O,!0):!1}const Pe={100:32774,101:32778,102:32779};if(i)Pe[103]=32775,Pe[104]=32776;else{const O=e.get("EXT_blend_minmax");O!==null&&(Pe[103]=O.MIN_EXT,Pe[104]=O.MAX_EXT)}const be={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function Je(O,fe,Z,me,ce,lt,At,mt){if(O===0){v===!0&&(Se(3042),v=!1);return}if(v===!1&&(Be(3042),v=!0),O!==5){if(O!==_||mt!==E){if((y!==100||S!==100)&&(n.blendEquation(32774),y=100,S=100),mt)switch(O){case 1:n.blendFuncSeparate(1,771,1,771);break;case 2:n.blendFunc(1,1);break;case 3:n.blendFuncSeparate(0,769,0,1);break;case 4:n.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}else switch(O){case 1:n.blendFuncSeparate(770,771,1,771);break;case 2:n.blendFunc(770,1);break;case 3:n.blendFuncSeparate(0,769,0,1);break;case 4:n.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}x=null,w=null,T=null,b=null,_=O,E=mt}return}ce=ce||fe,lt=lt||Z,At=At||me,(fe!==y||ce!==S)&&(n.blendEquationSeparate(Pe[fe],Pe[ce]),y=fe,S=ce),(Z!==x||me!==w||lt!==T||At!==b)&&(n.blendFuncSeparate(be[Z],be[me],be[lt],be[At]),x=Z,w=me,T=lt,b=At),_=O,E=null}function _t(O,fe){O.side===2?Se(2884):Be(2884);let Z=O.side===1;fe&&(Z=!Z),Ft(Z),O.blending===1&&O.transparent===!1?Je(0):Je(O.blending,O.blendEquation,O.blendSrc,O.blendDst,O.blendEquationAlpha,O.blendSrcAlpha,O.blendDstAlpha,O.premultipliedAlpha),l.setFunc(O.depthFunc),l.setTest(O.depthTest),l.setMask(O.depthWrite),s.setMask(O.colorWrite);const me=O.stencilWrite;c.setTest(me),me&&(c.setMask(O.stencilWriteMask),c.setFunc(O.stencilFunc,O.stencilRef,O.stencilFuncMask),c.setOp(O.stencilFail,O.stencilZFail,O.stencilZPass)),qe(O.polygonOffset,O.polygonOffsetFactor,O.polygonOffsetUnits),O.alphaToCoverage===!0?Be(32926):Se(32926)}function Ft(O){D!==O&&(O?n.frontFace(2304):n.frontFace(2305),D=O)}function pi(O){O!==0?(Be(2884),O!==I&&(O===1?n.cullFace(1029):O===2?n.cullFace(1028):n.cullFace(1032))):Se(2884),I=O}function wt(O){O!==N&&(F&&n.lineWidth(O),N=O)}function qe(O,fe,Z){O?(Be(32823),(z!==fe||L!==Z)&&(n.polygonOffset(fe,Z),z=fe,L=Z)):Se(32823)}function fi(O){O?Be(3089):Se(3089)}function mi(O){O===void 0&&(O=33984+P-1),k!==O&&(n.activeTexture(O),k=O)}function R(O,fe){k===null&&mi();let Z=V[k];Z===void 0&&(Z={type:void 0,texture:void 0},V[k]=Z),(Z.type!==O||Z.texture!==fe)&&(n.bindTexture(O,fe||Q[O]),Z.type=O,Z.texture=fe)}function A(){const O=V[k];O!==void 0&&O.type!==void 0&&(n.bindTexture(O.type,null),O.type=void 0,O.texture=void 0)}function $(){try{n.compressedTexImage2D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function se(){try{n.texSubImage2D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function le(){try{n.texSubImage3D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function pe(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Le(){try{n.texStorage2D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Y(){try{n.texStorage3D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function we(){try{n.texImage2D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function ve(){try{n.texImage3D.apply(n,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function ye(O){te.equals(O)===!1&&(n.scissor(O.x,O.y,O.z,O.w),te.copy(O))}function _e(O){oe.equals(O)===!1&&(n.viewport(O.x,O.y,O.z,O.w),oe.copy(O))}function Te(O,fe){let Z=d.get(fe);Z===void 0&&(Z=new WeakMap,d.set(fe,Z));let me=Z.get(O);me===void 0&&(me=n.getUniformBlockIndex(fe,O.name),Z.set(O,me))}function Ke(O,fe){const Z=d.get(fe).get(O);u.get(O)!==Z&&(n.uniformBlockBinding(fe,Z,O.__bindingPointIndex),u.set(O,Z))}function ut(){n.disable(3042),n.disable(2884),n.disable(2929),n.disable(32823),n.disable(3089),n.disable(2960),n.disable(32926),n.blendEquation(32774),n.blendFunc(1,0),n.blendFuncSeparate(1,0,1,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(513),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(519,0,4294967295),n.stencilOp(7680,7680,7680),n.clearStencil(0),n.cullFace(1029),n.frontFace(2305),n.polygonOffset(0,0),n.activeTexture(33984),n.bindFramebuffer(36160,null),i===!0&&(n.bindFramebuffer(36009,null),n.bindFramebuffer(36008,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),h={},k=null,V={},m={},g=new WeakMap,f=[],p=null,v=!1,_=null,y=null,x=null,w=null,S=null,T=null,b=null,E=!1,D=null,I=null,N=null,z=null,L=null,te.set(0,0,n.canvas.width,n.canvas.height),oe.set(0,0,n.canvas.width,n.canvas.height),s.reset(),l.reset(),c.reset()}return{buffers:{color:s,depth:l,stencil:c},enable:Be,disable:Se,bindFramebuffer:ae,drawBuffers:ne,useProgram:He,setBlending:Je,setMaterial:_t,setFlipSided:Ft,setCullFace:pi,setLineWidth:wt,setPolygonOffset:qe,setScissorTest:fi,activeTexture:mi,bindTexture:R,unbindTexture:A,compressedTexImage2D:$,texImage2D:we,texImage3D:ve,updateUBOMapping:Te,uniformBlockBinding:Ke,texStorage2D:Le,texStorage3D:Y,texSubImage2D:se,texSubImage3D:le,compressedTexSubImage2D:pe,scissor:ye,viewport:_e,reset:ut}}function Gy(n,e,t,i,r,a,o){const s=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,d=r.maxSamples,h=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,m=/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let f;const p=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(R,A){return v?new OffscreenCanvas(R,A):ws("canvas")}function y(R,A,$,se){let le=1;if((R.width>se||R.height>se)&&(le=se/Math.max(R.width,R.height)),le<1||A===!0)if(typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&R instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&R instanceof ImageBitmap){const pe=A?jo:Math.floor,Le=pe(le*R.width),Y=pe(le*R.height);f===void 0&&(f=_(Le,Y));const we=$?_(Le,Y):f;return we.width=Le,we.height=Y,we.getContext("2d").drawImage(R,0,0,Le,Y),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+R.width+"x"+R.height+") to ("+Le+"x"+Y+")."),we}else return"data"in R&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+R.width+"x"+R.height+")."),R;return R}function x(R){return $l(R.width)&&$l(R.height)}function w(R){return s?!1:R.wrapS!==1001||R.wrapT!==1001||R.minFilter!==1003&&R.minFilter!==1006}function S(R,A){return R.generateMipmaps&&A&&R.minFilter!==1003&&R.minFilter!==1006}function T(R){n.generateMipmap(R)}function b(R,A,$,se,le=!1){if(s===!1)return A;if(R!==null){if(n[R]!==void 0)return n[R];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+R+"'")}let pe=A;return A===6403&&($===5126&&(pe=33326),$===5131&&(pe=33325),$===5121&&(pe=33321)),A===33319&&($===5126&&(pe=33328),$===5131&&(pe=33327),$===5121&&(pe=33323)),A===6408&&($===5126&&(pe=34836),$===5131&&(pe=34842),$===5121&&(pe=se===3001&&le===!1?35907:32856),$===32819&&(pe=32854),$===32820&&(pe=32855)),(pe===33325||pe===33326||pe===33327||pe===33328||pe===34842||pe===34836)&&e.get("EXT_color_buffer_float"),pe}function E(R,A,$){return S(R,$)===!0||R.isFramebufferTexture&&R.minFilter!==1003&&R.minFilter!==1006?Math.log2(Math.max(A.width,A.height))+1:R.mipmaps!==void 0&&R.mipmaps.length>0?R.mipmaps.length:R.isCompressedTexture&&Array.isArray(R.image)?A.mipmaps.length:1}function D(R){return R===1003||R===1004||R===1005?9728:9729}function I(R){const A=R.target;A.removeEventListener("dispose",I),z(A),A.isVideoTexture&&g.delete(A)}function N(R){const A=R.target;A.removeEventListener("dispose",N),P(A)}function z(R){const A=i.get(R);if(A.__webglInit===void 0)return;const $=R.source,se=p.get($);if(se){const le=se[A.__cacheKey];le.usedTimes--,le.usedTimes===0&&L(R),Object.keys(se).length===0&&p.delete($)}i.remove(R)}function L(R){const A=i.get(R);n.deleteTexture(A.__webglTexture);const $=R.source,se=p.get($);delete se[A.__cacheKey],o.memory.textures--}function P(R){const A=R.texture,$=i.get(R),se=i.get(A);if(se.__webglTexture!==void 0&&(n.deleteTexture(se.__webglTexture),o.memory.textures--),R.depthTexture&&R.depthTexture.dispose(),R.isWebGLCubeRenderTarget)for(let le=0;le<6;le++)n.deleteFramebuffer($.__webglFramebuffer[le]),$.__webglDepthbuffer&&n.deleteRenderbuffer($.__webglDepthbuffer[le]);else{if(n.deleteFramebuffer($.__webglFramebuffer),$.__webglDepthbuffer&&n.deleteRenderbuffer($.__webglDepthbuffer),$.__webglMultisampledFramebuffer&&n.deleteFramebuffer($.__webglMultisampledFramebuffer),$.__webglColorRenderbuffer)for(let le=0;le<$.__webglColorRenderbuffer.length;le++)$.__webglColorRenderbuffer[le]&&n.deleteRenderbuffer($.__webglColorRenderbuffer[le]);$.__webglDepthRenderbuffer&&n.deleteRenderbuffer($.__webglDepthRenderbuffer)}if(R.isWebGLMultipleRenderTargets)for(let le=0,pe=A.length;le<pe;le++){const Le=i.get(A[le]);Le.__webglTexture&&(n.deleteTexture(Le.__webglTexture),o.memory.textures--),i.remove(A[le])}i.remove(A),i.remove(R)}let F=0;function H(){F=0}function X(){const R=F;return R>=l&&console.warn("THREE.WebGLTextures: Trying to use "+R+" texture units while this GPU supports only "+l),F+=1,R}function k(R){const A=[];return A.push(R.wrapS),A.push(R.wrapT),A.push(R.magFilter),A.push(R.minFilter),A.push(R.anisotropy),A.push(R.internalFormat),A.push(R.format),A.push(R.type),A.push(R.generateMipmaps),A.push(R.premultiplyAlpha),A.push(R.flipY),A.push(R.unpackAlignment),A.push(R.encoding),A.join()}function V(R,A){const $=i.get(R);if(R.isVideoTexture&&fi(R),R.isRenderTargetTexture===!1&&R.version>0&&$.__version!==R.version){const se=R.image;if(se===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(se.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Se($,R,A);return}}t.activeTexture(33984+A),t.bindTexture(3553,$.__webglTexture)}function ie(R,A){const $=i.get(R);if(R.version>0&&$.__version!==R.version){Se($,R,A);return}t.activeTexture(33984+A),t.bindTexture(35866,$.__webglTexture)}function U(R,A){const $=i.get(R);if(R.version>0&&$.__version!==R.version){Se($,R,A);return}t.activeTexture(33984+A),t.bindTexture(32879,$.__webglTexture)}function te(R,A){const $=i.get(R);if(R.version>0&&$.__version!==R.version){ae($,R,A);return}t.activeTexture(33984+A),t.bindTexture(34067,$.__webglTexture)}const oe={1e3:10497,1001:33071,1002:33648},Re={1003:9728,1004:9984,1005:9986,1006:9729,1007:9985,1008:9987};function Q(R,A,$){if($?(n.texParameteri(R,10242,oe[A.wrapS]),n.texParameteri(R,10243,oe[A.wrapT]),(R===32879||R===35866)&&n.texParameteri(R,32882,oe[A.wrapR]),n.texParameteri(R,10240,Re[A.magFilter]),n.texParameteri(R,10241,Re[A.minFilter])):(n.texParameteri(R,10242,33071),n.texParameteri(R,10243,33071),(R===32879||R===35866)&&n.texParameteri(R,32882,33071),(A.wrapS!==1001||A.wrapT!==1001)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(R,10240,D(A.magFilter)),n.texParameteri(R,10241,D(A.minFilter)),A.minFilter!==1003&&A.minFilter!==1006&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const se=e.get("EXT_texture_filter_anisotropic");if(A.type===1015&&e.has("OES_texture_float_linear")===!1||s===!1&&A.type===1016&&e.has("OES_texture_half_float_linear")===!1)return;(A.anisotropy>1||i.get(A).__currentAnisotropy)&&(n.texParameterf(R,se.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,r.getMaxAnisotropy())),i.get(A).__currentAnisotropy=A.anisotropy)}}function Be(R,A){let $=!1;R.__webglInit===void 0&&(R.__webglInit=!0,A.addEventListener("dispose",I));const se=A.source;let le=p.get(se);le===void 0&&(le={},p.set(se,le));const pe=k(A);if(pe!==R.__cacheKey){le[pe]===void 0&&(le[pe]={texture:n.createTexture(),usedTimes:0},o.memory.textures++,$=!0),le[pe].usedTimes++;const Le=le[R.__cacheKey];Le!==void 0&&(le[R.__cacheKey].usedTimes--,Le.usedTimes===0&&L(A)),R.__cacheKey=pe,R.__webglTexture=le[pe].texture}return $}function Se(R,A,$){let se=3553;A.isDataArrayTexture&&(se=35866),A.isData3DTexture&&(se=32879);const le=Be(R,A),pe=A.source;if(t.activeTexture(33984+$),t.bindTexture(se,R.__webglTexture),pe.version!==pe.__currentVersion||le===!0){n.pixelStorei(37440,A.flipY),n.pixelStorei(37441,A.premultiplyAlpha),n.pixelStorei(3317,A.unpackAlignment),n.pixelStorei(37443,0);const Le=w(A)&&x(A.image)===!1;let Y=y(A.image,Le,!1,u);Y=mi(A,Y);const we=x(Y)||s,ve=a.convert(A.format,A.encoding);let ye=a.convert(A.type),_e=b(A.internalFormat,ve,ye,A.encoding,A.isVideoTexture);Q(se,A,we);let Te;const Ke=A.mipmaps,ut=s&&A.isVideoTexture!==!0,O=pe.__currentVersion===void 0||le===!0,fe=E(A,Y,we);if(A.isDepthTexture)_e=6402,s?A.type===1015?_e=36012:A.type===1014?_e=33190:A.type===1020?_e=35056:_e=33189:A.type===1015&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),A.format===1026&&_e===6402&&A.type!==1012&&A.type!==1014&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),A.type=1014,ye=a.convert(A.type)),A.format===1027&&_e===6402&&(_e=34041,A.type!==1020&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),A.type=1020,ye=a.convert(A.type))),O&&(ut?t.texStorage2D(3553,1,_e,Y.width,Y.height):t.texImage2D(3553,0,_e,Y.width,Y.height,0,ve,ye,null));else if(A.isDataTexture)if(Ke.length>0&&we){ut&&O&&t.texStorage2D(3553,fe,_e,Ke[0].width,Ke[0].height);for(let Z=0,me=Ke.length;Z<me;Z++)Te=Ke[Z],ut?t.texSubImage2D(3553,Z,0,0,Te.width,Te.height,ve,ye,Te.data):t.texImage2D(3553,Z,_e,Te.width,Te.height,0,ve,ye,Te.data);A.generateMipmaps=!1}else ut?(O&&t.texStorage2D(3553,fe,_e,Y.width,Y.height),t.texSubImage2D(3553,0,0,0,Y.width,Y.height,ve,ye,Y.data)):t.texImage2D(3553,0,_e,Y.width,Y.height,0,ve,ye,Y.data);else if(A.isCompressedTexture){ut&&O&&t.texStorage2D(3553,fe,_e,Ke[0].width,Ke[0].height);for(let Z=0,me=Ke.length;Z<me;Z++)Te=Ke[Z],A.format!==1023?ve!==null?ut?t.compressedTexSubImage2D(3553,Z,0,0,Te.width,Te.height,ve,Te.data):t.compressedTexImage2D(3553,Z,_e,Te.width,Te.height,0,Te.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ut?t.texSubImage2D(3553,Z,0,0,Te.width,Te.height,ve,ye,Te.data):t.texImage2D(3553,Z,_e,Te.width,Te.height,0,ve,ye,Te.data)}else if(A.isDataArrayTexture)ut?(O&&t.texStorage3D(35866,fe,_e,Y.width,Y.height,Y.depth),t.texSubImage3D(35866,0,0,0,0,Y.width,Y.height,Y.depth,ve,ye,Y.data)):t.texImage3D(35866,0,_e,Y.width,Y.height,Y.depth,0,ve,ye,Y.data);else if(A.isData3DTexture)ut?(O&&t.texStorage3D(32879,fe,_e,Y.width,Y.height,Y.depth),t.texSubImage3D(32879,0,0,0,0,Y.width,Y.height,Y.depth,ve,ye,Y.data)):t.texImage3D(32879,0,_e,Y.width,Y.height,Y.depth,0,ve,ye,Y.data);else if(A.isFramebufferTexture){if(O)if(ut)t.texStorage2D(3553,fe,_e,Y.width,Y.height);else{let Z=Y.width,me=Y.height;for(let ce=0;ce<fe;ce++)t.texImage2D(3553,ce,_e,Z,me,0,ve,ye,null),Z>>=1,me>>=1}}else if(Ke.length>0&&we){ut&&O&&t.texStorage2D(3553,fe,_e,Ke[0].width,Ke[0].height);for(let Z=0,me=Ke.length;Z<me;Z++)Te=Ke[Z],ut?t.texSubImage2D(3553,Z,0,0,ve,ye,Te):t.texImage2D(3553,Z,_e,ve,ye,Te);A.generateMipmaps=!1}else ut?(O&&t.texStorage2D(3553,fe,_e,Y.width,Y.height),t.texSubImage2D(3553,0,0,0,ve,ye,Y)):t.texImage2D(3553,0,_e,ve,ye,Y);S(A,we)&&T(se),pe.__currentVersion=pe.version,A.onUpdate&&A.onUpdate(A)}R.__version=A.version}function ae(R,A,$){if(A.image.length!==6)return;const se=Be(R,A),le=A.source;if(t.activeTexture(33984+$),t.bindTexture(34067,R.__webglTexture),le.version!==le.__currentVersion||se===!0){n.pixelStorei(37440,A.flipY),n.pixelStorei(37441,A.premultiplyAlpha),n.pixelStorei(3317,A.unpackAlignment),n.pixelStorei(37443,0);const pe=A.isCompressedTexture||A.image[0].isCompressedTexture,Le=A.image[0]&&A.image[0].isDataTexture,Y=[];for(let Z=0;Z<6;Z++)!pe&&!Le?Y[Z]=y(A.image[Z],!1,!0,c):Y[Z]=Le?A.image[Z].image:A.image[Z],Y[Z]=mi(A,Y[Z]);const we=Y[0],ve=x(we)||s,ye=a.convert(A.format,A.encoding),_e=a.convert(A.type),Te=b(A.internalFormat,ye,_e,A.encoding),Ke=s&&A.isVideoTexture!==!0,ut=le.__currentVersion===void 0||se===!0;let O=E(A,we,ve);Q(34067,A,ve);let fe;if(pe){Ke&&ut&&t.texStorage2D(34067,O,Te,we.width,we.height);for(let Z=0;Z<6;Z++){fe=Y[Z].mipmaps;for(let me=0;me<fe.length;me++){const ce=fe[me];A.format!==1023?ye!==null?Ke?t.compressedTexSubImage2D(34069+Z,me,0,0,ce.width,ce.height,ye,ce.data):t.compressedTexImage2D(34069+Z,me,Te,ce.width,ce.height,0,ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ke?t.texSubImage2D(34069+Z,me,0,0,ce.width,ce.height,ye,_e,ce.data):t.texImage2D(34069+Z,me,Te,ce.width,ce.height,0,ye,_e,ce.data)}}}else{fe=A.mipmaps,Ke&&ut&&(fe.length>0&&O++,t.texStorage2D(34067,O,Te,Y[0].width,Y[0].height));for(let Z=0;Z<6;Z++)if(Le){Ke?t.texSubImage2D(34069+Z,0,0,0,Y[Z].width,Y[Z].height,ye,_e,Y[Z].data):t.texImage2D(34069+Z,0,Te,Y[Z].width,Y[Z].height,0,ye,_e,Y[Z].data);for(let me=0;me<fe.length;me++){const ce=fe[me].image[Z].image;Ke?t.texSubImage2D(34069+Z,me+1,0,0,ce.width,ce.height,ye,_e,ce.data):t.texImage2D(34069+Z,me+1,Te,ce.width,ce.height,0,ye,_e,ce.data)}}else{Ke?t.texSubImage2D(34069+Z,0,0,0,ye,_e,Y[Z]):t.texImage2D(34069+Z,0,Te,ye,_e,Y[Z]);for(let me=0;me<fe.length;me++){const ce=fe[me];Ke?t.texSubImage2D(34069+Z,me+1,0,0,ye,_e,ce.image[Z]):t.texImage2D(34069+Z,me+1,Te,ye,_e,ce.image[Z])}}}S(A,ve)&&T(34067),le.__currentVersion=le.version,A.onUpdate&&A.onUpdate(A)}R.__version=A.version}function ne(R,A,$,se,le){const pe=a.convert($.format,$.encoding),Le=a.convert($.type),Y=b($.internalFormat,pe,Le,$.encoding);i.get(A).__hasExternalTextures||(le===32879||le===35866?t.texImage3D(le,0,Y,A.width,A.height,A.depth,0,pe,Le,null):t.texImage2D(le,0,Y,A.width,A.height,0,pe,Le,null)),t.bindFramebuffer(36160,R),qe(A)?h.framebufferTexture2DMultisampleEXT(36160,se,le,i.get($).__webglTexture,0,wt(A)):n.framebufferTexture2D(36160,se,le,i.get($).__webglTexture,0),t.bindFramebuffer(36160,null)}function He(R,A,$){if(n.bindRenderbuffer(36161,R),A.depthBuffer&&!A.stencilBuffer){let se=33189;if($||qe(A)){const le=A.depthTexture;le&&le.isDepthTexture&&(le.type===1015?se=36012:le.type===1014&&(se=33190));const pe=wt(A);qe(A)?h.renderbufferStorageMultisampleEXT(36161,pe,se,A.width,A.height):n.renderbufferStorageMultisample(36161,pe,se,A.width,A.height)}else n.renderbufferStorage(36161,se,A.width,A.height);n.framebufferRenderbuffer(36160,36096,36161,R)}else if(A.depthBuffer&&A.stencilBuffer){const se=wt(A);$&&qe(A)===!1?n.renderbufferStorageMultisample(36161,se,35056,A.width,A.height):qe(A)?h.renderbufferStorageMultisampleEXT(36161,se,35056,A.width,A.height):n.renderbufferStorage(36161,34041,A.width,A.height),n.framebufferRenderbuffer(36160,33306,36161,R)}else{const se=A.isWebGLMultipleRenderTargets===!0?A.texture:[A.texture];for(let le=0;le<se.length;le++){const pe=se[le],Le=a.convert(pe.format,pe.encoding),Y=a.convert(pe.type),we=b(pe.internalFormat,Le,Y,pe.encoding),ve=wt(A);$&&qe(A)===!1?n.renderbufferStorageMultisample(36161,ve,we,A.width,A.height):qe(A)?h.renderbufferStorageMultisampleEXT(36161,ve,we,A.width,A.height):n.renderbufferStorage(36161,we,A.width,A.height)}}n.bindRenderbuffer(36161,null)}function Pe(R,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,R),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(A.depthTexture).__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),V(A.depthTexture,0);const $=i.get(A.depthTexture).__webglTexture,se=wt(A);if(A.depthTexture.format===1026)qe(A)?h.framebufferTexture2DMultisampleEXT(36160,36096,3553,$,0,se):n.framebufferTexture2D(36160,36096,3553,$,0);else if(A.depthTexture.format===1027)qe(A)?h.framebufferTexture2DMultisampleEXT(36160,33306,3553,$,0,se):n.framebufferTexture2D(36160,33306,3553,$,0);else throw new Error("Unknown depthTexture format")}function be(R){const A=i.get(R),$=R.isWebGLCubeRenderTarget===!0;if(R.depthTexture&&!A.__autoAllocateDepthBuffer){if($)throw new Error("target.depthTexture not supported in Cube render targets");Pe(A.__webglFramebuffer,R)}else if($){A.__webglDepthbuffer=[];for(let se=0;se<6;se++)t.bindFramebuffer(36160,A.__webglFramebuffer[se]),A.__webglDepthbuffer[se]=n.createRenderbuffer(),He(A.__webglDepthbuffer[se],R,!1)}else t.bindFramebuffer(36160,A.__webglFramebuffer),A.__webglDepthbuffer=n.createRenderbuffer(),He(A.__webglDepthbuffer,R,!1);t.bindFramebuffer(36160,null)}function Je(R,A,$){const se=i.get(R);A!==void 0&&ne(se.__webglFramebuffer,R,R.texture,36064,3553),$!==void 0&&be(R)}function _t(R){const A=R.texture,$=i.get(R),se=i.get(A);R.addEventListener("dispose",N),R.isWebGLMultipleRenderTargets!==!0&&(se.__webglTexture===void 0&&(se.__webglTexture=n.createTexture()),se.__version=A.version,o.memory.textures++);const le=R.isWebGLCubeRenderTarget===!0,pe=R.isWebGLMultipleRenderTargets===!0,Le=x(R)||s;if(le){$.__webglFramebuffer=[];for(let Y=0;Y<6;Y++)$.__webglFramebuffer[Y]=n.createFramebuffer()}else{if($.__webglFramebuffer=n.createFramebuffer(),pe)if(r.drawBuffers){const Y=R.texture;for(let we=0,ve=Y.length;we<ve;we++){const ye=i.get(Y[we]);ye.__webglTexture===void 0&&(ye.__webglTexture=n.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(s&&R.samples>0&&qe(R)===!1){const Y=pe?A:[A];$.__webglMultisampledFramebuffer=n.createFramebuffer(),$.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,$.__webglMultisampledFramebuffer);for(let we=0;we<Y.length;we++){const ve=Y[we];$.__webglColorRenderbuffer[we]=n.createRenderbuffer(),n.bindRenderbuffer(36161,$.__webglColorRenderbuffer[we]);const ye=a.convert(ve.format,ve.encoding),_e=a.convert(ve.type),Te=b(ve.internalFormat,ye,_e,ve.encoding),Ke=wt(R);n.renderbufferStorageMultisample(36161,Ke,Te,R.width,R.height),n.framebufferRenderbuffer(36160,36064+we,36161,$.__webglColorRenderbuffer[we])}n.bindRenderbuffer(36161,null),R.depthBuffer&&($.__webglDepthRenderbuffer=n.createRenderbuffer(),He($.__webglDepthRenderbuffer,R,!0)),t.bindFramebuffer(36160,null)}}if(le){t.bindTexture(34067,se.__webglTexture),Q(34067,A,Le);for(let Y=0;Y<6;Y++)ne($.__webglFramebuffer[Y],R,A,36064,34069+Y);S(A,Le)&&T(34067),t.unbindTexture()}else if(pe){const Y=R.texture;for(let we=0,ve=Y.length;we<ve;we++){const ye=Y[we],_e=i.get(ye);t.bindTexture(3553,_e.__webglTexture),Q(3553,ye,Le),ne($.__webglFramebuffer,R,ye,36064+we,3553),S(ye,Le)&&T(3553)}t.unbindTexture()}else{let Y=3553;(R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(s?Y=R.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Y,se.__webglTexture),Q(Y,A,Le),ne($.__webglFramebuffer,R,A,36064,Y),S(A,Le)&&T(Y),t.unbindTexture()}R.depthBuffer&&be(R)}function Ft(R){const A=x(R)||s,$=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let se=0,le=$.length;se<le;se++){const pe=$[se];if(S(pe,A)){const Le=R.isWebGLCubeRenderTarget?34067:3553,Y=i.get(pe).__webglTexture;t.bindTexture(Le,Y),T(Le),t.unbindTexture()}}}function pi(R){if(s&&R.samples>0&&qe(R)===!1){const A=R.isWebGLMultipleRenderTargets?R.texture:[R.texture],$=R.width,se=R.height;let le=16384;const pe=[],Le=R.stencilBuffer?33306:36096,Y=i.get(R),we=R.isWebGLMultipleRenderTargets===!0;if(we)for(let ve=0;ve<A.length;ve++)t.bindFramebuffer(36160,Y.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064+ve,36161,null),t.bindFramebuffer(36160,Y.__webglFramebuffer),n.framebufferTexture2D(36009,36064+ve,3553,null,0);t.bindFramebuffer(36008,Y.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Y.__webglFramebuffer);for(let ve=0;ve<A.length;ve++){pe.push(36064+ve),R.depthBuffer&&pe.push(Le);const ye=Y.__ignoreDepthValues!==void 0?Y.__ignoreDepthValues:!1;if(ye===!1&&(R.depthBuffer&&(le|=256),R.stencilBuffer&&(le|=1024)),we&&n.framebufferRenderbuffer(36008,36064,36161,Y.__webglColorRenderbuffer[ve]),ye===!0&&(n.invalidateFramebuffer(36008,[Le]),n.invalidateFramebuffer(36009,[Le])),we){const _e=i.get(A[ve]).__webglTexture;n.framebufferTexture2D(36009,36064,3553,_e,0)}n.blitFramebuffer(0,0,$,se,0,0,$,se,le,9728),m&&n.invalidateFramebuffer(36008,pe)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),we)for(let ve=0;ve<A.length;ve++){t.bindFramebuffer(36160,Y.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064+ve,36161,Y.__webglColorRenderbuffer[ve]);const ye=i.get(A[ve]).__webglTexture;t.bindFramebuffer(36160,Y.__webglFramebuffer),n.framebufferTexture2D(36009,36064+ve,3553,ye,0)}t.bindFramebuffer(36009,Y.__webglMultisampledFramebuffer)}}function wt(R){return Math.min(d,R.samples)}function qe(R){const A=i.get(R);return s&&R.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function fi(R){const A=o.render.frame;g.get(R)!==A&&(g.set(R,A),R.update())}function mi(R,A){const $=R.encoding,se=R.format,le=R.type;return R.isCompressedTexture===!0||R.isVideoTexture===!0||R.format===1035||$!==3e3&&($===3001?s===!1?e.has("EXT_sRGB")===!0&&se===1023?(R.format=1035,R.minFilter=1006,R.generateMipmaps=!1):A=ah.sRGBToLinear(A):(se!==1023||le!==1009)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",$)),A}this.allocateTextureUnit=X,this.resetTextureUnits=H,this.setTexture2D=V,this.setTexture2DArray=ie,this.setTexture3D=U,this.setTextureCube=te,this.rebindTextures=Je,this.setupRenderTarget=_t,this.updateRenderTargetMipmap=Ft,this.updateMultisampleRenderTarget=pi,this.setupDepthRenderbuffer=be,this.setupFrameBufferTexture=ne,this.useMultisampledRTT=qe}function Wy(n,e,t){const i=t.isWebGL2;function r(a,o=null){let s;if(a===1009)return 5121;if(a===1017)return 32819;if(a===1018)return 32820;if(a===1010)return 5120;if(a===1011)return 5122;if(a===1012)return 5123;if(a===1013)return 5124;if(a===1014)return 5125;if(a===1015)return 5126;if(a===1016)return i?5131:(s=e.get("OES_texture_half_float"),s!==null?s.HALF_FLOAT_OES:null);if(a===1021)return 6406;if(a===1023)return 6408;if(a===1024)return 6409;if(a===1025)return 6410;if(a===1026)return 6402;if(a===1027)return 34041;if(a===1028)return 6403;if(a===1022)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(a===1035)return s=e.get("EXT_sRGB"),s!==null?s.SRGB_ALPHA_EXT:null;if(a===1029)return 36244;if(a===1030)return 33319;if(a===1031)return 33320;if(a===1033)return 36249;if(a===33776||a===33777||a===33778||a===33779)if(o===3001)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(a===33776)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(a===33777)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(a===33778)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(a===33779)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(a===33776)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===33777)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===33778)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===33779)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(a===35840||a===35841||a===35842||a===35843)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(a===35840)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===35841)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===35842)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===35843)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(a===36196)return s=e.get("WEBGL_compressed_texture_etc1"),s!==null?s.COMPRESSED_RGB_ETC1_WEBGL:null;if(a===37492||a===37496)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(a===37492)return o===3001?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(a===37496)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(a===37808||a===37809||a===37810||a===37811||a===37812||a===37813||a===37814||a===37815||a===37816||a===37817||a===37818||a===37819||a===37820||a===37821)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(a===37808)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(a===37809)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(a===37810)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(a===37811)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(a===37812)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(a===37813)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(a===37814)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(a===37815)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(a===37816)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(a===37817)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(a===37818)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(a===37819)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(a===37820)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(a===37821)return o===3001?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(a===36492)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(a===36492)return o===3001?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return a===1020?i?34042:(s=e.get("WEBGL_depth_texture"),s!==null?s.UNSIGNED_INT_24_8_WEBGL:null):n[a]!==void 0?n[a]:null}return{convert:r}}class Vy extends si{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ns extends Zt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const qy={type:"move"};class Do{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ns,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ns,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new B,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new B),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ns,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new B,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new B),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,a=null,o=null;const s=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const f of e.hand.values()){const p=t.getJointPose(f,i);if(c.joints[f.jointName]===void 0){const _=new ns;_.matrixAutoUpdate=!1,_.visible=!1,c.joints[f.jointName]=_,c.add(_)}const v=c.joints[f.jointName];p!==null&&(v.matrix.fromArray(p.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=p.radius),v.visible=p!==null}const u=c.joints["index-finger-tip"],d=c.joints["thumb-tip"],h=u.position.distanceTo(d.position),m=.02,g=.005;c.inputState.pinching&&h>m+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&h<=m-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(a=t.getPose(e.gripSpace,i),a!==null&&(l.matrix.fromArray(a.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),a.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(a.linearVelocity)):l.hasLinearVelocity=!1,a.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(a.angularVelocity)):l.hasAngularVelocity=!1));s!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&a!==null&&(r=a),r!==null&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(qy)))}return s!==null&&(s.visible=r!==null),l!==null&&(l.visible=a!==null),c!==null&&(c.visible=o!==null),this}}class jy extends ui{constructor(e,t,i,r,a,o,s,l,c,u){if(u=u!==void 0?u:1026,u!==1026&&u!==1027)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&u===1026&&(i=1014),i===void 0&&u===1027&&(i=1020),super(null,r,a,o,s,l,u,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=s!==void 0?s:1003,this.minFilter=l!==void 0?l:1003,this.flipY=!1,this.generateMipmaps=!1}}class Xy extends jn{constructor(e,t){super();const i=this;let r=null,a=1,o=null,s="local-floor",l=null,c=null,u=null,d=null,h=null,m=null;const g=t.getContextAttributes();let f=null,p=null;const v=[],_=[],y=new si;y.layers.enable(1),y.viewport=new Et;const x=new si;x.layers.enable(2),x.viewport=new Et;const w=[y,x],S=new Vy;S.layers.enable(1),S.layers.enable(2);let T=null,b=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(k){let V=v[k];return V===void 0&&(V=new Do,v[k]=V),V.getTargetRaySpace()},this.getControllerGrip=function(k){let V=v[k];return V===void 0&&(V=new Do,v[k]=V),V.getGripSpace()},this.getHand=function(k){let V=v[k];return V===void 0&&(V=new Do,v[k]=V),V.getHandSpace()};function E(k){const V=_.indexOf(k.inputSource);if(V===-1)return;const ie=v[V];ie!==void 0&&ie.dispatchEvent({type:k.type,data:k.inputSource})}function D(){r.removeEventListener("select",E),r.removeEventListener("selectstart",E),r.removeEventListener("selectend",E),r.removeEventListener("squeeze",E),r.removeEventListener("squeezestart",E),r.removeEventListener("squeezeend",E),r.removeEventListener("end",D),r.removeEventListener("inputsourceschange",I);for(let k=0;k<v.length;k++){const V=_[k];V!==null&&(_[k]=null,v[k].disconnect(V))}T=null,b=null,e.setRenderTarget(f),h=null,d=null,u=null,r=null,p=null,X.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(k){a=k,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(k){s=k,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(k){l=k},this.getBaseLayer=function(){return d!==null?d:h},this.getBinding=function(){return u},this.getFrame=function(){return m},this.getSession=function(){return r},this.setSession=async function(k){if(r=k,r!==null){if(f=e.getRenderTarget(),r.addEventListener("select",E),r.addEventListener("selectstart",E),r.addEventListener("selectend",E),r.addEventListener("squeeze",E),r.addEventListener("squeezestart",E),r.addEventListener("squeezeend",E),r.addEventListener("end",D),r.addEventListener("inputsourceschange",I),g.xrCompatible!==!0&&await t.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const V={antialias:r.renderState.layers===void 0?g.antialias:!0,alpha:g.alpha,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:a};h=new XRWebGLLayer(r,t,V),r.updateRenderState({baseLayer:h}),p=new en(h.framebufferWidth,h.framebufferHeight,{format:1023,type:1009,encoding:e.outputEncoding})}else{let V=null,ie=null,U=null;g.depth&&(U=g.stencil?35056:33190,V=g.stencil?1027:1026,ie=g.stencil?1020:1014);const te={colorFormat:32856,depthFormat:U,scaleFactor:a};u=new XRWebGLBinding(r,t),d=u.createProjectionLayer(te),r.updateRenderState({layers:[d]}),p=new en(d.textureWidth,d.textureHeight,{format:1023,type:1009,depthTexture:new jy(d.textureWidth,d.textureHeight,ie,void 0,void 0,void 0,void 0,void 0,void 0,V),stencilBuffer:g.stencil,encoding:e.outputEncoding,samples:g.antialias?4:0});const oe=e.properties.get(p);oe.__ignoreDepthValues=d.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await r.requestReferenceSpace(s),X.setContext(r),X.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};function I(k){for(let V=0;V<k.removed.length;V++){const ie=k.removed[V],U=_.indexOf(ie);U>=0&&(_[U]=null,v[U].dispatchEvent({type:"disconnected",data:ie}))}for(let V=0;V<k.added.length;V++){const ie=k.added[V];let U=_.indexOf(ie);if(U===-1){for(let oe=0;oe<v.length;oe++)if(oe>=_.length){_.push(ie),U=oe;break}else if(_[oe]===null){_[oe]=ie,U=oe;break}if(U===-1)break}const te=v[U];te&&te.dispatchEvent({type:"connected",data:ie})}}const N=new B,z=new B;function L(k,V,ie){N.setFromMatrixPosition(V.matrixWorld),z.setFromMatrixPosition(ie.matrixWorld);const U=N.distanceTo(z),te=V.projectionMatrix.elements,oe=ie.projectionMatrix.elements,Re=te[14]/(te[10]-1),Q=te[14]/(te[10]+1),Be=(te[9]+1)/te[5],Se=(te[9]-1)/te[5],ae=(te[8]-1)/te[0],ne=(oe[8]+1)/oe[0],He=Re*ae,Pe=Re*ne,be=U/(-ae+ne),Je=be*-ae;V.matrixWorld.decompose(k.position,k.quaternion,k.scale),k.translateX(Je),k.translateZ(be),k.matrixWorld.compose(k.position,k.quaternion,k.scale),k.matrixWorldInverse.copy(k.matrixWorld).invert();const _t=Re+be,Ft=Q+be,pi=He-Je,wt=Pe+(U-Je),qe=Be*Q/Ft*_t,fi=Se*Q/Ft*_t;k.projectionMatrix.makePerspective(pi,wt,qe,fi,_t,Ft)}function P(k,V){V===null?k.matrixWorld.copy(k.matrix):k.matrixWorld.multiplyMatrices(V.matrixWorld,k.matrix),k.matrixWorldInverse.copy(k.matrixWorld).invert()}this.updateCamera=function(k){if(r===null)return;S.near=x.near=y.near=k.near,S.far=x.far=y.far=k.far,(T!==S.near||b!==S.far)&&(r.updateRenderState({depthNear:S.near,depthFar:S.far}),T=S.near,b=S.far);const V=k.parent,ie=S.cameras;P(S,V);for(let te=0;te<ie.length;te++)P(ie[te],V);S.matrixWorld.decompose(S.position,S.quaternion,S.scale),k.position.copy(S.position),k.quaternion.copy(S.quaternion),k.scale.copy(S.scale),k.matrix.copy(S.matrix),k.matrixWorld.copy(S.matrixWorld);const U=k.children;for(let te=0,oe=U.length;te<oe;te++)U[te].updateMatrixWorld(!0);ie.length===2?L(S,y,x):S.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return S},this.getFoveation=function(){if(d!==null)return d.fixedFoveation;if(h!==null)return h.fixedFoveation},this.setFoveation=function(k){d!==null&&(d.fixedFoveation=k),h!==null&&h.fixedFoveation!==void 0&&(h.fixedFoveation=k)};let F=null;function H(k,V){if(c=V.getViewerPose(l||o),m=V,c!==null){const ie=c.views;h!==null&&(e.setRenderTargetFramebuffer(p,h.framebuffer),e.setRenderTarget(p));let U=!1;ie.length!==S.cameras.length&&(S.cameras.length=0,U=!0);for(let te=0;te<ie.length;te++){const oe=ie[te];let Re=null;if(h!==null)Re=h.getViewport(oe);else{const Be=u.getViewSubImage(d,oe);Re=Be.viewport,te===0&&(e.setRenderTargetTextures(p,Be.colorTexture,d.ignoreDepthValues?void 0:Be.depthStencilTexture),e.setRenderTarget(p))}let Q=w[te];Q===void 0&&(Q=new si,Q.layers.enable(te),Q.viewport=new Et,w[te]=Q),Q.matrix.fromArray(oe.transform.matrix),Q.projectionMatrix.fromArray(oe.projectionMatrix),Q.viewport.set(Re.x,Re.y,Re.width,Re.height),te===0&&S.matrix.copy(Q.matrix),U===!0&&S.cameras.push(Q)}}for(let ie=0;ie<v.length;ie++){const U=_[ie],te=v[ie];U!==null&&te!==void 0&&te.update(U,V,l||o)}F&&F(k,V),m=null}const X=new fh;X.setAnimationLoop(H),this.setAnimationLoop=function(k){F=k},this.dispose=function(){}}}function Yy(n,e){function t(f,p){f.fogColor.value.copy(p.color),p.isFog?(f.fogNear.value=p.near,f.fogFar.value=p.far):p.isFogExp2&&(f.fogDensity.value=p.density)}function i(f,p,v,_,y){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(f,p):p.isMeshToonMaterial?(r(f,p),u(f,p)):p.isMeshPhongMaterial?(r(f,p),c(f,p)):p.isMeshStandardMaterial?(r(f,p),d(f,p),p.isMeshPhysicalMaterial&&h(f,p,y)):p.isMeshMatcapMaterial?(r(f,p),m(f,p)):p.isMeshDepthMaterial?r(f,p):p.isMeshDistanceMaterial?(r(f,p),g(f,p)):p.isMeshNormalMaterial?r(f,p):p.isLineBasicMaterial?(a(f,p),p.isLineDashedMaterial&&o(f,p)):p.isPointsMaterial?s(f,p,v,_):p.isSpriteMaterial?l(f,p):p.isShadowMaterial?(f.color.value.copy(p.color),f.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(f,p){f.opacity.value=p.opacity,p.color&&f.diffuse.value.copy(p.color),p.emissive&&f.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(f.map.value=p.map),p.alphaMap&&(f.alphaMap.value=p.alphaMap),p.bumpMap&&(f.bumpMap.value=p.bumpMap,f.bumpScale.value=p.bumpScale,p.side===1&&(f.bumpScale.value*=-1)),p.displacementMap&&(f.displacementMap.value=p.displacementMap,f.displacementScale.value=p.displacementScale,f.displacementBias.value=p.displacementBias),p.emissiveMap&&(f.emissiveMap.value=p.emissiveMap),p.normalMap&&(f.normalMap.value=p.normalMap,f.normalScale.value.copy(p.normalScale),p.side===1&&f.normalScale.value.negate()),p.specularMap&&(f.specularMap.value=p.specularMap),p.alphaTest>0&&(f.alphaTest.value=p.alphaTest);const v=e.get(p).envMap;if(v&&(f.envMap.value=v,f.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,f.reflectivity.value=p.reflectivity,f.ior.value=p.ior,f.refractionRatio.value=p.refractionRatio),p.lightMap){f.lightMap.value=p.lightMap;const x=n.physicallyCorrectLights!==!0?Math.PI:1;f.lightMapIntensity.value=p.lightMapIntensity*x}p.aoMap&&(f.aoMap.value=p.aoMap,f.aoMapIntensity.value=p.aoMapIntensity);let _;p.map?_=p.map:p.specularMap?_=p.specularMap:p.displacementMap?_=p.displacementMap:p.normalMap?_=p.normalMap:p.bumpMap?_=p.bumpMap:p.roughnessMap?_=p.roughnessMap:p.metalnessMap?_=p.metalnessMap:p.alphaMap?_=p.alphaMap:p.emissiveMap?_=p.emissiveMap:p.clearcoatMap?_=p.clearcoatMap:p.clearcoatNormalMap?_=p.clearcoatNormalMap:p.clearcoatRoughnessMap?_=p.clearcoatRoughnessMap:p.iridescenceMap?_=p.iridescenceMap:p.iridescenceThicknessMap?_=p.iridescenceThicknessMap:p.specularIntensityMap?_=p.specularIntensityMap:p.specularColorMap?_=p.specularColorMap:p.transmissionMap?_=p.transmissionMap:p.thicknessMap?_=p.thicknessMap:p.sheenColorMap?_=p.sheenColorMap:p.sheenRoughnessMap&&(_=p.sheenRoughnessMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),f.uvTransform.value.copy(_.matrix));let y;p.aoMap?y=p.aoMap:p.lightMap&&(y=p.lightMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),f.uv2Transform.value.copy(y.matrix))}function a(f,p){f.diffuse.value.copy(p.color),f.opacity.value=p.opacity}function o(f,p){f.dashSize.value=p.dashSize,f.totalSize.value=p.dashSize+p.gapSize,f.scale.value=p.scale}function s(f,p,v,_){f.diffuse.value.copy(p.color),f.opacity.value=p.opacity,f.size.value=p.size*v,f.scale.value=_*.5,p.map&&(f.map.value=p.map),p.alphaMap&&(f.alphaMap.value=p.alphaMap),p.alphaTest>0&&(f.alphaTest.value=p.alphaTest);let y;p.map?y=p.map:p.alphaMap&&(y=p.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),f.uvTransform.value.copy(y.matrix))}function l(f,p){f.diffuse.value.copy(p.color),f.opacity.value=p.opacity,f.rotation.value=p.rotation,p.map&&(f.map.value=p.map),p.alphaMap&&(f.alphaMap.value=p.alphaMap),p.alphaTest>0&&(f.alphaTest.value=p.alphaTest);let v;p.map?v=p.map:p.alphaMap&&(v=p.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),f.uvTransform.value.copy(v.matrix))}function c(f,p){f.specular.value.copy(p.specular),f.shininess.value=Math.max(p.shininess,1e-4)}function u(f,p){p.gradientMap&&(f.gradientMap.value=p.gradientMap)}function d(f,p){f.roughness.value=p.roughness,f.metalness.value=p.metalness,p.roughnessMap&&(f.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(f.metalnessMap.value=p.metalnessMap),e.get(p).envMap&&(f.envMapIntensity.value=p.envMapIntensity)}function h(f,p,v){f.ior.value=p.ior,p.sheen>0&&(f.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),f.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(f.sheenColorMap.value=p.sheenColorMap),p.sheenRoughnessMap&&(f.sheenRoughnessMap.value=p.sheenRoughnessMap)),p.clearcoat>0&&(f.clearcoat.value=p.clearcoat,f.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(f.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(f.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(f.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),f.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===1&&f.clearcoatNormalScale.value.negate())),p.iridescence>0&&(f.iridescence.value=p.iridescence,f.iridescenceIOR.value=p.iridescenceIOR,f.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],f.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(f.iridescenceMap.value=p.iridescenceMap),p.iridescenceThicknessMap&&(f.iridescenceThicknessMap.value=p.iridescenceThicknessMap)),p.transmission>0&&(f.transmission.value=p.transmission,f.transmissionSamplerMap.value=v.texture,f.transmissionSamplerSize.value.set(v.width,v.height),p.transmissionMap&&(f.transmissionMap.value=p.transmissionMap),f.thickness.value=p.thickness,p.thicknessMap&&(f.thicknessMap.value=p.thicknessMap),f.attenuationDistance.value=p.attenuationDistance,f.attenuationColor.value.copy(p.attenuationColor)),f.specularIntensity.value=p.specularIntensity,f.specularColor.value.copy(p.specularColor),p.specularIntensityMap&&(f.specularIntensityMap.value=p.specularIntensityMap),p.specularColorMap&&(f.specularColorMap.value=p.specularColorMap)}function m(f,p){p.matcap&&(f.matcap.value=p.matcap)}function g(f,p){f.referencePosition.value.copy(p.referencePosition),f.nearDistance.value=p.nearDistance,f.farDistance.value=p.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:i}}function Zy(n,e,t,i){let r={},a={},o=[];const s=t.isWebGL2?n.getParameter(35375):0;function l(_,y){const x=y.program;i.uniformBlockBinding(_,x)}function c(_,y){let x=r[_.id];x===void 0&&(g(_),x=u(_),r[_.id]=x,_.addEventListener("dispose",p));const w=y.program;i.updateUBOMapping(_,w);const S=e.render.frame;a[_.id]!==S&&(h(_),a[_.id]=S)}function u(_){const y=d();_.__bindingPointIndex=y;const x=n.createBuffer(),w=_.__size,S=_.usage;return n.bindBuffer(35345,x),n.bufferData(35345,w,S),n.bindBuffer(35345,null),n.bindBufferBase(35345,y,x),x}function d(){for(let _=0;_<s;_++)if(o.indexOf(_)===-1)return o.push(_),_;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function h(_){const y=r[_.id],x=_.uniforms,w=_.__cache;n.bindBuffer(35345,y);for(let S=0,T=x.length;S<T;S++){const b=x[S];if(m(b,S,w)===!0){const E=b.value,D=b.__offset;typeof E=="number"?(b.__data[0]=E,n.bufferSubData(35345,D,b.__data)):(b.value.isMatrix3?(b.__data[0]=b.value.elements[0],b.__data[1]=b.value.elements[1],b.__data[2]=b.value.elements[2],b.__data[3]=b.value.elements[0],b.__data[4]=b.value.elements[3],b.__data[5]=b.value.elements[4],b.__data[6]=b.value.elements[5],b.__data[7]=b.value.elements[0],b.__data[8]=b.value.elements[6],b.__data[9]=b.value.elements[7],b.__data[10]=b.value.elements[8],b.__data[11]=b.value.elements[0]):E.toArray(b.__data),n.bufferSubData(35345,D,b.__data))}}n.bindBuffer(35345,null)}function m(_,y,x){const w=_.value;if(x[y]===void 0)return typeof w=="number"?x[y]=w:x[y]=w.clone(),!0;if(typeof w=="number"){if(x[y]!==w)return x[y]=w,!0}else{const S=x[y];if(S.equals(w)===!1)return S.copy(w),!0}return!1}function g(_){const y=_.uniforms;let x=0;const w=16;let S=0;for(let T=0,b=y.length;T<b;T++){const E=y[T],D=f(E);if(E.__data=new Float32Array(D.storage/Float32Array.BYTES_PER_ELEMENT),E.__offset=x,T>0){S=x%w;const I=w-S;S!==0&&I-D.boundary<0&&(x+=w-S,E.__offset=x)}x+=D.storage}return S=x%w,S>0&&(x+=w-S),_.__size=x,_.__cache={},this}function f(_){const y=_.value,x={boundary:0,storage:0};return typeof y=="number"?(x.boundary=4,x.storage=4):y.isVector2?(x.boundary=8,x.storage=8):y.isVector3||y.isColor?(x.boundary=16,x.storage=12):y.isVector4?(x.boundary=16,x.storage=16):y.isMatrix3?(x.boundary=48,x.storage=48):y.isMatrix4?(x.boundary=64,x.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),x}function p(_){const y=_.target;y.removeEventListener("dispose",p);const x=o.indexOf(y.__bindingPointIndex);o.splice(x,1),n.deleteBuffer(r[y.id]),delete r[y.id],delete a[y.id]}function v(){for(const _ in r)n.deleteBuffer(r[_]);o=[],r={},a={}}return{bind:l,update:c,dispose:v}}function $y(){const n=ws("canvas");return n.style.display="block",n}function yh(n={}){this.isWebGLRenderer=!0;const e=n.canvas!==void 0?n.canvas:$y(),t=n.context!==void 0?n.context:null,i=n.depth!==void 0?n.depth:!0,r=n.stencil!==void 0?n.stencil:!0,a=n.antialias!==void 0?n.antialias:!1,o=n.premultipliedAlpha!==void 0?n.premultipliedAlpha:!0,s=n.preserveDrawingBuffer!==void 0?n.preserveDrawingBuffer:!1,l=n.powerPreference!==void 0?n.powerPreference:"default",c=n.failIfMajorPerformanceCaveat!==void 0?n.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=n.alpha!==void 0?n.alpha:!1;let d=null,h=null;const m=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const f=this;let p=!1,v=0,_=0,y=null,x=-1,w=null;const S=new Et,T=new Et;let b=null,E=e.width,D=e.height,I=1,N=null,z=null;const L=new Et(0,0,E,D),P=new Et(0,0,E,D);let F=!1;const H=new vl;let X=!1,k=!1,V=null;const ie=new Tt,U=new $e,te=new B,oe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Re(){return y===null?I:1}let Q=t;function Be(C,W){for(let J=0;J<C.length;J++){const q=C[J],ee=e.getContext(q,W);if(ee!==null)return ee}return null}try{const C={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:s,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${gl}`),e.addEventListener("webglcontextlost",Te,!1),e.addEventListener("webglcontextrestored",Ke,!1),e.addEventListener("webglcontextcreationerror",ut,!1),Q===null){const W=["webgl2","webgl","experimental-webgl"];if(f.isWebGL1Renderer===!0&&W.shift(),Q=Be(W,C),Q===null)throw Be(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Q.getShaderPrecisionFormat===void 0&&(Q.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Se,ae,ne,He,Pe,be,Je,_t,Ft,pi,wt,qe,fi,mi,R,A,$,se,le,pe,Le,Y,we,ve;function ye(){Se=new sx(Q),ae=new Q_(Q,Se,n),Se.init(ae),Y=new Wy(Q,Se,ae),ne=new Hy(Q,Se,ae),He=new cx,Pe=new Ay,be=new Gy(Q,Se,ne,Pe,ae,Y,He),Je=new tx(f),_t=new ax(f),Ft=new yv(Q,ae),we=new J_(Q,Se,Ft,ae),pi=new ox(Q,Ft,He,we),wt=new px(Q,pi,Ft,He),le=new dx(Q,ae,be),A=new ex(Pe),qe=new Ty(f,Je,_t,Se,ae,we,A),fi=new Yy(f,Pe),mi=new Ly,R=new zy(Se,ae),se=new $_(f,Je,ne,wt,u,o),$=new Uy(f,wt,ae),ve=new Zy(Q,He,ae,ne),pe=new K_(Q,Se,He,ae),Le=new lx(Q,Se,He,ae),He.programs=qe.programs,f.capabilities=ae,f.extensions=Se,f.properties=Pe,f.renderLists=mi,f.shadowMap=$,f.state=ne,f.info=He}ye();const _e=new Xy(f,Q);this.xr=_e,this.getContext=function(){return Q},this.getContextAttributes=function(){return Q.getContextAttributes()},this.forceContextLoss=function(){const C=Se.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Se.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return I},this.setPixelRatio=function(C){C!==void 0&&(I=C,this.setSize(E,D,!1))},this.getSize=function(C){return C.set(E,D)},this.setSize=function(C,W,J){if(_e.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}E=C,D=W,e.width=Math.floor(C*I),e.height=Math.floor(W*I),J!==!1&&(e.style.width=C+"px",e.style.height=W+"px"),this.setViewport(0,0,C,W)},this.getDrawingBufferSize=function(C){return C.set(E*I,D*I).floor()},this.setDrawingBufferSize=function(C,W,J){E=C,D=W,I=J,e.width=Math.floor(C*J),e.height=Math.floor(W*J),this.setViewport(0,0,C,W)},this.getCurrentViewport=function(C){return C.copy(S)},this.getViewport=function(C){return C.copy(L)},this.setViewport=function(C,W,J,q){C.isVector4?L.set(C.x,C.y,C.z,C.w):L.set(C,W,J,q),ne.viewport(S.copy(L).multiplyScalar(I).floor())},this.getScissor=function(C){return C.copy(P)},this.setScissor=function(C,W,J,q){C.isVector4?P.set(C.x,C.y,C.z,C.w):P.set(C,W,J,q),ne.scissor(T.copy(P).multiplyScalar(I).floor())},this.getScissorTest=function(){return F},this.setScissorTest=function(C){ne.setScissorTest(F=C)},this.setOpaqueSort=function(C){N=C},this.setTransparentSort=function(C){z=C},this.getClearColor=function(C){return C.copy(se.getClearColor())},this.setClearColor=function(){se.setClearColor.apply(se,arguments)},this.getClearAlpha=function(){return se.getClearAlpha()},this.setClearAlpha=function(){se.setClearAlpha.apply(se,arguments)},this.clear=function(C=!0,W=!0,J=!0){let q=0;C&&(q|=16384),W&&(q|=256),J&&(q|=1024),Q.clear(q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Te,!1),e.removeEventListener("webglcontextrestored",Ke,!1),e.removeEventListener("webglcontextcreationerror",ut,!1),mi.dispose(),R.dispose(),Pe.dispose(),Je.dispose(),_t.dispose(),wt.dispose(),we.dispose(),ve.dispose(),qe.dispose(),_e.dispose(),_e.removeEventListener("sessionstart",lt),_e.removeEventListener("sessionend",At),V&&(V.dispose(),V=null),mt.stop()};function Te(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function Ke(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;const C=He.autoReset,W=$.enabled,J=$.autoUpdate,q=$.needsUpdate,ee=$.type;ye(),He.autoReset=C,$.enabled=W,$.autoUpdate=J,$.needsUpdate=q,$.type=ee}function ut(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function O(C){const W=C.target;W.removeEventListener("dispose",O),fe(W)}function fe(C){Z(C),Pe.remove(C)}function Z(C){const W=Pe.get(C).programs;W!==void 0&&(W.forEach(function(J){qe.releaseProgram(J)}),C.isShaderMaterial&&qe.releaseShaderCache(C))}this.renderBufferDirect=function(C,W,J,q,ee,Me){W===null&&(W=oe);const Fe=ee.isMesh&&ee.matrixWorld.determinant()<0,ze=Ih(C,W,J,q,ee);ne.setMaterial(q,Fe);let je=J.index;const ft=J.attributes.position;if(je===null){if(ft===void 0||ft.count===0)return}else if(je.count===0)return;let Xe=1;q.wireframe===!0&&(je=pi.getWireframeAttribute(J),Xe=2),we.setup(ee,q,ze,J,je);let Qe,Ct=pe;je!==null&&(Qe=Ft.get(je),Ct=Le,Ct.setIndex(Qe));const Fr=je!==null?je.count:ft.count,ln=J.drawRange.start*Xe,cn=J.drawRange.count*Xe,Pi=Me!==null?Me.start*Xe:0,rt=Me!==null?Me.count*Xe:1/0,un=Math.max(ln,Pi),Yn=Math.min(Fr,ln+cn,Pi+rt)-1,vi=Math.max(0,Yn-un+1);if(vi!==0){if(ee.isMesh)q.wireframe===!0?(ne.setLineWidth(q.wireframeLinewidth*Re()),Ct.setMode(1)):Ct.setMode(4);else if(ee.isLine){let dr=q.linewidth;dr===void 0&&(dr=1),ne.setLineWidth(dr*Re()),ee.isLineSegments?Ct.setMode(1):ee.isLineLoop?Ct.setMode(2):Ct.setMode(3)}else ee.isPoints?Ct.setMode(0):ee.isSprite&&Ct.setMode(4);if(ee.isInstancedMesh)Ct.renderInstances(un,vi,ee.count);else if(J.isInstancedBufferGeometry){const dr=Math.min(J.instanceCount,J._maxInstanceCount);Ct.renderInstances(un,vi,dr)}else Ct.render(un,vi)}},this.compile=function(C,W){h=R.get(C),h.init(),g.push(h),C.traverseVisible(function(J){J.isLight&&J.layers.test(W.layers)&&(h.pushLight(J),J.castShadow&&h.pushShadow(J))}),h.setupLights(f.physicallyCorrectLights),C.traverse(function(J){const q=J.material;if(q)if(Array.isArray(q))for(let ee=0;ee<q.length;ee++){const Me=q[ee];Us(Me,C,J)}else Us(q,C,J)}),g.pop(),h=null};let me=null;function ce(C){me&&me(C)}function lt(){mt.stop()}function At(){mt.start()}const mt=new fh;mt.setAnimationLoop(ce),typeof self<"u"&&mt.setContext(self),this.setAnimationLoop=function(C){me=C,_e.setAnimationLoop(C),C===null?mt.stop():mt.start()},_e.addEventListener("sessionstart",lt),_e.addEventListener("sessionend",At),this.render=function(C,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p===!0)return;C.autoUpdate===!0&&C.updateMatrixWorld(),W.parent===null&&W.updateMatrixWorld(),_e.enabled===!0&&_e.isPresenting===!0&&(_e.cameraAutoUpdate===!0&&_e.updateCamera(W),W=_e.getCamera()),C.isScene===!0&&C.onBeforeRender(f,C,W,y),h=R.get(C,g.length),h.init(),g.push(h),ie.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),H.setFromProjectionMatrix(ie),k=this.localClippingEnabled,X=A.init(this.clippingPlanes,k,W),d=mi.get(C,m.length),d.init(),m.push(d),hr(C,W,0,f.sortObjects),d.finish(),f.sortObjects===!0&&d.sort(N,z),X===!0&&A.beginShadows();const J=h.state.shadowsArray;if($.render(J,C,W),X===!0&&A.endShadows(),this.info.autoReset===!0&&this.info.reset(),se.render(d,C),h.setupLights(f.physicallyCorrectLights),W.isArrayCamera){const q=W.cameras;for(let ee=0,Me=q.length;ee<Me;ee++){const Fe=q[ee];pt(d,C,Fe,Fe.viewport)}}else pt(d,C,W);y!==null&&(be.updateMultisampleRenderTarget(y),be.updateRenderTargetMipmap(y)),C.isScene===!0&&C.onAfterRender(f,C,W),we.resetDefaultState(),x=-1,w=null,g.pop(),g.length>0?h=g[g.length-1]:h=null,m.pop(),m.length>0?d=m[m.length-1]:d=null};function hr(C,W,J,q){if(C.visible===!1)return;if(C.layers.test(W.layers)){if(C.isGroup)J=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(W);else if(C.isLight)h.pushLight(C),C.castShadow&&h.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||H.intersectsSprite(C)){q&&te.setFromMatrixPosition(C.matrixWorld).applyMatrix4(ie);const Me=wt.update(C),Fe=C.material;Fe.visible&&d.push(C,Me,Fe,J,te.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==He.render.frame&&(C.skeleton.update(),C.skeleton.frame=He.render.frame),!C.frustumCulled||H.intersectsObject(C))){q&&te.setFromMatrixPosition(C.matrixWorld).applyMatrix4(ie);const Me=wt.update(C),Fe=C.material;if(Array.isArray(Fe)){const ze=Me.groups;for(let je=0,ft=ze.length;je<ft;je++){const Xe=ze[je],Qe=Fe[Xe.materialIndex];Qe&&Qe.visible&&d.push(C,Me,Qe,J,te.z,Xe)}}else Fe.visible&&d.push(C,Me,Fe,J,te.z,null)}}const ee=C.children;for(let Me=0,Fe=ee.length;Me<Fe;Me++)hr(ee[Me],W,J,q)}function pt(C,W,J,q){const ee=C.opaque,Me=C.transmissive,Fe=C.transparent;h.setupLightsView(J),Me.length>0&&ji(ee,W,J),q&&ne.viewport(S.copy(q)),ee.length>0&&gi(ee,W,J),Me.length>0&&gi(Me,W,J),Fe.length>0&&gi(Fe,W,J),ne.buffers.depth.setTest(!0),ne.buffers.depth.setMask(!0),ne.buffers.color.setMask(!0),ne.setPolygonOffset(!1)}function ji(C,W,J){const q=ae.isWebGL2;V===null&&(V=new en(1,1,{generateMipmaps:!0,type:Se.has("EXT_color_buffer_half_float")?1016:1009,minFilter:1008,samples:q&&a===!0?4:0})),f.getDrawingBufferSize(U),q?V.setSize(U.x,U.y):V.setSize(jo(U.x),jo(U.y));const ee=f.getRenderTarget();f.setRenderTarget(V),f.clear();const Me=f.toneMapping;f.toneMapping=0,gi(C,W,J),f.toneMapping=Me,be.updateMultisampleRenderTarget(V),be.updateRenderTargetMipmap(V),f.setRenderTarget(ee)}function gi(C,W,J){const q=W.isScene===!0?W.overrideMaterial:null;for(let ee=0,Me=C.length;ee<Me;ee++){const Fe=C[ee],ze=Fe.object,je=Fe.geometry,ft=q===null?Fe.material:q,Xe=Fe.group;ze.layers.test(J.layers)&&Ph(ze,W,J,je,ft,Xe)}}function Ph(C,W,J,q,ee,Me){C.onBeforeRender(f,W,J,q,ee,Me),C.modelViewMatrix.multiplyMatrices(J.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),ee.onBeforeRender(f,W,J,q,C,Me),ee.transparent===!0&&ee.side===2?(ee.side=1,ee.needsUpdate=!0,f.renderBufferDirect(J,W,q,ee,C,Me),ee.side=0,ee.needsUpdate=!0,f.renderBufferDirect(J,W,q,ee,C,Me),ee.side=2):f.renderBufferDirect(J,W,q,ee,C,Me),C.onAfterRender(f,W,J,q,ee,Me)}function Us(C,W,J){W.isScene!==!0&&(W=oe);const q=Pe.get(C),ee=h.state.lights,Me=h.state.shadowsArray,Fe=ee.state.version,ze=qe.getParameters(C,ee.state,Me,W,J),je=qe.getProgramCacheKey(ze);let ft=q.programs;q.environment=C.isMeshStandardMaterial?W.environment:null,q.fog=W.fog,q.envMap=(C.isMeshStandardMaterial?_t:Je).get(C.envMap||q.environment),ft===void 0&&(C.addEventListener("dispose",O),ft=new Map,q.programs=ft);let Xe=ft.get(je);if(Xe!==void 0){if(q.currentProgram===Xe&&q.lightsStateVersion===Fe)return El(C,ze),Xe}else ze.uniforms=qe.getUniforms(C),C.onBuild(J,ze,f),C.onBeforeCompile(ze,f),Xe=qe.acquireProgram(ze,je),ft.set(je,Xe),q.uniforms=ze.uniforms;const Qe=q.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(Qe.clippingPlanes=A.uniform),El(C,ze),q.needsLights=zh(C),q.lightsStateVersion=Fe,q.needsLights&&(Qe.ambientLightColor.value=ee.state.ambient,Qe.lightProbe.value=ee.state.probe,Qe.directionalLights.value=ee.state.directional,Qe.directionalLightShadows.value=ee.state.directionalShadow,Qe.spotLights.value=ee.state.spot,Qe.spotLightShadows.value=ee.state.spotShadow,Qe.rectAreaLights.value=ee.state.rectArea,Qe.ltc_1.value=ee.state.rectAreaLTC1,Qe.ltc_2.value=ee.state.rectAreaLTC2,Qe.pointLights.value=ee.state.point,Qe.pointLightShadows.value=ee.state.pointShadow,Qe.hemisphereLights.value=ee.state.hemi,Qe.directionalShadowMap.value=ee.state.directionalShadowMap,Qe.directionalShadowMatrix.value=ee.state.directionalShadowMatrix,Qe.spotShadowMap.value=ee.state.spotShadowMap,Qe.spotShadowMatrix.value=ee.state.spotShadowMatrix,Qe.pointShadowMap.value=ee.state.pointShadowMap,Qe.pointShadowMatrix.value=ee.state.pointShadowMatrix);const Ct=Xe.getUniforms(),Fr=hs.seqWithValue(Ct.seq,Qe);return q.currentProgram=Xe,q.uniformsList=Fr,Xe}function El(C,W){const J=Pe.get(C);J.outputEncoding=W.outputEncoding,J.instancing=W.instancing,J.skinning=W.skinning,J.morphTargets=W.morphTargets,J.morphNormals=W.morphNormals,J.morphColors=W.morphColors,J.morphTargetsCount=W.morphTargetsCount,J.numClippingPlanes=W.numClippingPlanes,J.numIntersection=W.numClipIntersection,J.vertexAlphas=W.vertexAlphas,J.vertexTangents=W.vertexTangents,J.toneMapping=W.toneMapping}function Ih(C,W,J,q,ee){W.isScene!==!0&&(W=oe),be.resetTextureUnits();const Me=W.fog,Fe=q.isMeshStandardMaterial?W.environment:null,ze=y===null?f.outputEncoding:y.isXRRenderTarget===!0?y.texture.encoding:3e3,je=(q.isMeshStandardMaterial?_t:Je).get(q.envMap||Fe),ft=q.vertexColors===!0&&!!J.attributes.color&&J.attributes.color.itemSize===4,Xe=!!q.normalMap&&!!J.attributes.tangent,Qe=!!J.morphAttributes.position,Ct=!!J.morphAttributes.normal,Fr=!!J.morphAttributes.color,ln=q.toneMapped?f.toneMapping:0,cn=J.morphAttributes.position||J.morphAttributes.normal||J.morphAttributes.color,Pi=cn!==void 0?cn.length:0,rt=Pe.get(q),un=h.state.lights;if(X===!0&&(k===!0||C!==w)){const ei=C===w&&q.id===x;A.setState(q,C,ei)}let Yn=!1;q.version===rt.__version?(rt.needsLights&&rt.lightsStateVersion!==un.state.version||rt.outputEncoding!==ze||ee.isInstancedMesh&&rt.instancing===!1||!ee.isInstancedMesh&&rt.instancing===!0||ee.isSkinnedMesh&&rt.skinning===!1||!ee.isSkinnedMesh&&rt.skinning===!0||rt.envMap!==je||q.fog===!0&&rt.fog!==Me||rt.numClippingPlanes!==void 0&&(rt.numClippingPlanes!==A.numPlanes||rt.numIntersection!==A.numIntersection)||rt.vertexAlphas!==ft||rt.vertexTangents!==Xe||rt.morphTargets!==Qe||rt.morphNormals!==Ct||rt.morphColors!==Fr||rt.toneMapping!==ln||ae.isWebGL2===!0&&rt.morphTargetsCount!==Pi)&&(Yn=!0):(Yn=!0,rt.__version=q.version);let vi=rt.currentProgram;Yn===!0&&(vi=Us(q,W,ee));let dr=!1,Zn=!1,Hs=!1;const Vt=vi.getUniforms(),$n=rt.uniforms;if(ne.useProgram(vi.program)&&(dr=!0,Zn=!0,Hs=!0),q.id!==x&&(x=q.id,Zn=!0),dr||w!==C){if(Vt.setValue(Q,"projectionMatrix",C.projectionMatrix),ae.logarithmicDepthBuffer&&Vt.setValue(Q,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),w!==C&&(w=C,Zn=!0,Hs=!0),q.isShaderMaterial||q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshStandardMaterial||q.envMap){const ei=Vt.map.cameraPosition;ei!==void 0&&ei.setValue(Q,te.setFromMatrixPosition(C.matrixWorld))}(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial)&&Vt.setValue(Q,"isOrthographic",C.isOrthographicCamera===!0),(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial||q.isShadowMaterial||ee.isSkinnedMesh)&&Vt.setValue(Q,"viewMatrix",C.matrixWorldInverse)}if(ee.isSkinnedMesh){Vt.setOptional(Q,ee,"bindMatrix"),Vt.setOptional(Q,ee,"bindMatrixInverse");const ei=ee.skeleton;ei&&(ae.floatVertexTextures?(ei.boneTexture===null&&ei.computeBoneTexture(),Vt.setValue(Q,"boneTexture",ei.boneTexture,be),Vt.setValue(Q,"boneTextureSize",ei.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Gs=J.morphAttributes;if((Gs.position!==void 0||Gs.normal!==void 0||Gs.color!==void 0&&ae.isWebGL2===!0)&&le.update(ee,J,q,vi),(Zn||rt.receiveShadow!==ee.receiveShadow)&&(rt.receiveShadow=ee.receiveShadow,Vt.setValue(Q,"receiveShadow",ee.receiveShadow)),Zn&&(Vt.setValue(Q,"toneMappingExposure",f.toneMappingExposure),rt.needsLights&&Fh($n,Hs),Me&&q.fog===!0&&fi.refreshFogUniforms($n,Me),fi.refreshMaterialUniforms($n,q,I,D,V),hs.upload(Q,rt.uniformsList,$n,be)),q.isShaderMaterial&&q.uniformsNeedUpdate===!0&&(hs.upload(Q,rt.uniformsList,$n,be),q.uniformsNeedUpdate=!1),q.isSpriteMaterial&&Vt.setValue(Q,"center",ee.center),Vt.setValue(Q,"modelViewMatrix",ee.modelViewMatrix),Vt.setValue(Q,"normalMatrix",ee.normalMatrix),Vt.setValue(Q,"modelMatrix",ee.matrixWorld),q.isShaderMaterial||q.isRawShaderMaterial){const ei=q.uniformsGroups;for(let Ws=0,Nh=ei.length;Ws<Nh;Ws++)if(ae.isWebGL2){const Tl=ei[Ws];ve.update(Tl,vi),ve.bind(Tl,vi)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return vi}function Fh(C,W){C.ambientLightColor.needsUpdate=W,C.lightProbe.needsUpdate=W,C.directionalLights.needsUpdate=W,C.directionalLightShadows.needsUpdate=W,C.pointLights.needsUpdate=W,C.pointLightShadows.needsUpdate=W,C.spotLights.needsUpdate=W,C.spotLightShadows.needsUpdate=W,C.rectAreaLights.needsUpdate=W,C.hemisphereLights.needsUpdate=W}function zh(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(C,W,J){Pe.get(C.texture).__webglTexture=W,Pe.get(C.depthTexture).__webglTexture=J;const q=Pe.get(C);q.__hasExternalTextures=!0,q.__hasExternalTextures&&(q.__autoAllocateDepthBuffer=J===void 0,q.__autoAllocateDepthBuffer||Se.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),q.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,W){const J=Pe.get(C);J.__webglFramebuffer=W,J.__useDefaultFramebuffer=W===void 0},this.setRenderTarget=function(C,W=0,J=0){y=C,v=W,_=J;let q=!0;if(C){const ze=Pe.get(C);ze.__useDefaultFramebuffer!==void 0?(ne.bindFramebuffer(36160,null),q=!1):ze.__webglFramebuffer===void 0?be.setupRenderTarget(C):ze.__hasExternalTextures&&be.rebindTextures(C,Pe.get(C.texture).__webglTexture,Pe.get(C.depthTexture).__webglTexture)}let ee=null,Me=!1,Fe=!1;if(C){const ze=C.texture;(ze.isData3DTexture||ze.isDataArrayTexture)&&(Fe=!0);const je=Pe.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(ee=je[W],Me=!0):ae.isWebGL2&&C.samples>0&&be.useMultisampledRTT(C)===!1?ee=Pe.get(C).__webglMultisampledFramebuffer:ee=je,S.copy(C.viewport),T.copy(C.scissor),b=C.scissorTest}else S.copy(L).multiplyScalar(I).floor(),T.copy(P).multiplyScalar(I).floor(),b=F;if(ne.bindFramebuffer(36160,ee)&&ae.drawBuffers&&q&&ne.drawBuffers(C,ee),ne.viewport(S),ne.scissor(T),ne.setScissorTest(b),Me){const ze=Pe.get(C.texture);Q.framebufferTexture2D(36160,36064,34069+W,ze.__webglTexture,J)}else if(Fe){const ze=Pe.get(C.texture),je=W||0;Q.framebufferTextureLayer(36160,36064,ze.__webglTexture,J||0,je)}x=-1},this.readRenderTargetPixels=function(C,W,J,q,ee,Me,Fe){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ze=Pe.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Fe!==void 0&&(ze=ze[Fe]),ze){ne.bindFramebuffer(36160,ze);try{const je=C.texture,ft=je.format,Xe=je.type;if(ft!==1023&&Y.convert(ft)!==Q.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Qe=Xe===1016&&(Se.has("EXT_color_buffer_half_float")||ae.isWebGL2&&Se.has("EXT_color_buffer_float"));if(Xe!==1009&&Y.convert(Xe)!==Q.getParameter(35738)&&!(Xe===1015&&(ae.isWebGL2||Se.has("OES_texture_float")||Se.has("WEBGL_color_buffer_float")))&&!Qe){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=C.width-q&&J>=0&&J<=C.height-ee&&Q.readPixels(W,J,q,ee,Y.convert(ft),Y.convert(Xe),Me)}finally{const je=y!==null?Pe.get(y).__webglFramebuffer:null;ne.bindFramebuffer(36160,je)}}},this.copyFramebufferToTexture=function(C,W,J=0){const q=Math.pow(2,-J),ee=Math.floor(W.image.width*q),Me=Math.floor(W.image.height*q);be.setTexture2D(W,0),Q.copyTexSubImage2D(3553,J,0,0,C.x,C.y,ee,Me),ne.unbindTexture()},this.copyTextureToTexture=function(C,W,J,q=0){const ee=W.image.width,Me=W.image.height,Fe=Y.convert(J.format),ze=Y.convert(J.type);be.setTexture2D(J,0),Q.pixelStorei(37440,J.flipY),Q.pixelStorei(37441,J.premultiplyAlpha),Q.pixelStorei(3317,J.unpackAlignment),W.isDataTexture?Q.texSubImage2D(3553,q,C.x,C.y,ee,Me,Fe,ze,W.image.data):W.isCompressedTexture?Q.compressedTexSubImage2D(3553,q,C.x,C.y,W.mipmaps[0].width,W.mipmaps[0].height,Fe,W.mipmaps[0].data):Q.texSubImage2D(3553,q,C.x,C.y,Fe,ze,W.image),q===0&&J.generateMipmaps&&Q.generateMipmap(3553),ne.unbindTexture()},this.copyTextureToTexture3D=function(C,W,J,q,ee=0){if(f.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Me=C.max.x-C.min.x+1,Fe=C.max.y-C.min.y+1,ze=C.max.z-C.min.z+1,je=Y.convert(q.format),ft=Y.convert(q.type);let Xe;if(q.isData3DTexture)be.setTexture3D(q,0),Xe=32879;else if(q.isDataArrayTexture)be.setTexture2DArray(q,0),Xe=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Q.pixelStorei(37440,q.flipY),Q.pixelStorei(37441,q.premultiplyAlpha),Q.pixelStorei(3317,q.unpackAlignment);const Qe=Q.getParameter(3314),Ct=Q.getParameter(32878),Fr=Q.getParameter(3316),ln=Q.getParameter(3315),cn=Q.getParameter(32877),Pi=J.isCompressedTexture?J.mipmaps[0]:J.image;Q.pixelStorei(3314,Pi.width),Q.pixelStorei(32878,Pi.height),Q.pixelStorei(3316,C.min.x),Q.pixelStorei(3315,C.min.y),Q.pixelStorei(32877,C.min.z),J.isDataTexture||J.isData3DTexture?Q.texSubImage3D(Xe,ee,W.x,W.y,W.z,Me,Fe,ze,je,ft,Pi.data):J.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Q.compressedTexSubImage3D(Xe,ee,W.x,W.y,W.z,Me,Fe,ze,je,Pi.data)):Q.texSubImage3D(Xe,ee,W.x,W.y,W.z,Me,Fe,ze,je,ft,Pi),Q.pixelStorei(3314,Qe),Q.pixelStorei(32878,Ct),Q.pixelStorei(3316,Fr),Q.pixelStorei(3315,ln),Q.pixelStorei(32877,cn),ee===0&&q.generateMipmaps&&Q.generateMipmap(Xe),ne.unbindTexture()},this.initTexture=function(C){C.isCubeTexture?be.setTextureCube(C,0):C.isData3DTexture?be.setTexture3D(C,0):C.isDataArrayTexture?be.setTexture2DArray(C,0):be.setTexture2D(C,0),ne.unbindTexture()},this.resetState=function(){v=0,_=0,y=null,ne.reset(),we.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class Jy extends yh{}Jy.prototype.isWebGL1Renderer=!0;class Ky extends Zt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}class Dc extends ui{constructor(e,t,i,r,a,o,s,l,c){super(e,t,i,r,a,o,s,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class xl extends Wi{constructor(e=1,t=1,i=1,r=8,a=1,o=!1,s=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:a,openEnded:o,thetaStart:s,thetaLength:l};const c=this;r=Math.floor(r),a=Math.floor(a);const u=[],d=[],h=[],m=[];let g=0;const f=[],p=i/2;let v=0;_(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new Wt(d,3)),this.setAttribute("normal",new Wt(h,3)),this.setAttribute("uv",new Wt(m,2));function _(){const x=new B,w=new B;let S=0;const T=(t-e)/i;for(let b=0;b<=a;b++){const E=[],D=b/a,I=D*(t-e)+e;for(let N=0;N<=r;N++){const z=N/r,L=z*l+s,P=Math.sin(L),F=Math.cos(L);w.x=I*P,w.y=-D*i+p,w.z=I*F,d.push(w.x,w.y,w.z),x.set(P,T,F).normalize(),h.push(x.x,x.y,x.z),m.push(z,1-D),E.push(g++)}f.push(E)}for(let b=0;b<r;b++)for(let E=0;E<a;E++){const D=f[E][b],I=f[E+1][b],N=f[E+1][b+1],z=f[E][b+1];u.push(D,I,z),u.push(I,N,z),S+=6}c.addGroup(v,S,0),v+=S}function y(x){const w=g,S=new $e,T=new B;let b=0;const E=x===!0?e:t,D=x===!0?1:-1;for(let N=1;N<=r;N++)d.push(0,p*D,0),h.push(0,D,0),m.push(.5,.5),g++;const I=g;for(let N=0;N<=r;N++){const z=N/r*l+s,L=Math.cos(z),P=Math.sin(z);T.x=E*P,T.y=p*D,T.z=E*L,d.push(T.x,T.y,T.z),h.push(0,D,0),S.x=L*.5+.5,S.y=P*.5*D+.5,m.push(S.x,S.y),g++}for(let N=0;N<r;N++){const z=w+N,L=I+N;x===!0?u.push(L,L+1,z):u.push(L+1,L,z),b+=3}c.addGroup(v,b,x===!0?1:2),v+=b}}static fromJSON(e){return new xl(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Qy extends on{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ye(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class eb extends on{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ye(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ye(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new $e(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class tb extends on{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ye(16777215),this.specular=new Ye(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ye(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new $e(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class bh extends Zt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ye(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class ib extends bh{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Zt.DefaultUp),this.updateMatrix(),this.groundColor=new Ye(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Rc=new Tt,Pc=new B,Ic=new B;class rb{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new $e(512,512),this.map=null,this.mapPass=null,this.matrix=new Tt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new vl,this._frameExtents=new $e(1,1),this._viewportCount=1,this._viewports=[new Et(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;Pc.setFromMatrixPosition(e.matrixWorld),t.position.copy(Pc),Ic.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Ic),t.updateMatrixWorld(),Rc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Rc),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(t.projectionMatrix),i.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class nb extends rb{constructor(){super(new si(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=qo*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,a=e.distance||t.far;(i!==t.fov||r!==t.aspect||a!==t.far)&&(t.fov=i,t.aspect=r,t.far=a,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class ab extends bh{constructor(e,t,i=0,r=Math.PI/3,a=0,o=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Zt.DefaultUp),this.updateMatrix(),this.target=new Zt,this.distance=i,this.angle=r,this.penumbra=a,this.decay=o,this.shadow=new nb}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:gl}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=gl);class Li{constructor(e){e===void 0&&(e=[0,0,0,0,0,0,0,0,0]),this.elements=e}identity(){const e=this.elements;e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1}setZero(){const e=this.elements;e[0]=0,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=0,e[6]=0,e[7]=0,e[8]=0}setTrace(e){const t=this.elements;t[0]=e.x,t[4]=e.y,t[8]=e.z}getTrace(e){e===void 0&&(e=new M);const t=this.elements;return e.x=t[0],e.y=t[4],e.z=t[8],e}vmult(e,t){t===void 0&&(t=new M);const i=this.elements,r=e.x,a=e.y,o=e.z;return t.x=i[0]*r+i[1]*a+i[2]*o,t.y=i[3]*r+i[4]*a+i[5]*o,t.z=i[6]*r+i[7]*a+i[8]*o,t}smult(e){for(let t=0;t<this.elements.length;t++)this.elements[t]*=e}mmult(e,t){t===void 0&&(t=new Li);const i=this.elements,r=e.elements,a=t.elements,o=i[0],s=i[1],l=i[2],c=i[3],u=i[4],d=i[5],h=i[6],m=i[7],g=i[8],f=r[0],p=r[1],v=r[2],_=r[3],y=r[4],x=r[5],w=r[6],S=r[7],T=r[8];return a[0]=o*f+s*_+l*w,a[1]=o*p+s*y+l*S,a[2]=o*v+s*x+l*T,a[3]=c*f+u*_+d*w,a[4]=c*p+u*y+d*S,a[5]=c*v+u*x+d*T,a[6]=h*f+m*_+g*w,a[7]=h*p+m*y+g*S,a[8]=h*v+m*x+g*T,t}scale(e,t){t===void 0&&(t=new Li);const i=this.elements,r=t.elements;for(let a=0;a!==3;a++)r[3*a+0]=e.x*i[3*a+0],r[3*a+1]=e.y*i[3*a+1],r[3*a+2]=e.z*i[3*a+2];return t}solve(e,t){t===void 0&&(t=new M);const i=3,r=4,a=[];let o,s;for(o=0;o<i*r;o++)a.push(0);for(o=0;o<3;o++)for(s=0;s<3;s++)a[o+r*s]=this.elements[o+3*s];a[3+4*0]=e.x,a[3+4*1]=e.y,a[3+4*2]=e.z;let l=3;const c=l;let u;const d=4;let h;do{if(o=c-l,a[o+r*o]===0){for(s=o+1;s<c;s++)if(a[o+r*s]!==0){u=d;do h=d-u,a[h+r*o]+=a[h+r*s];while(--u);break}}if(a[o+r*o]!==0)for(s=o+1;s<c;s++){const m=a[o+r*s]/a[o+r*o];u=d;do h=d-u,a[h+r*s]=h<=o?0:a[h+r*s]-a[h+r*o]*m;while(--u)}}while(--l);if(t.z=a[2*r+3]/a[2*r+2],t.y=(a[1*r+3]-a[1*r+2]*t.z)/a[1*r+1],t.x=(a[0*r+3]-a[0*r+2]*t.z-a[0*r+1]*t.y)/a[0*r+0],isNaN(t.x)||isNaN(t.y)||isNaN(t.z)||t.x===1/0||t.y===1/0||t.z===1/0)throw`Could not solve equation! Got x=[${t.toString()}], b=[${e.toString()}], A=[${this.toString()}]`;return t}e(e,t,i){if(i===void 0)return this.elements[t+3*e];this.elements[t+3*e]=i}copy(e){for(let t=0;t<e.elements.length;t++)this.elements[t]=e.elements[t];return this}toString(){let e="";const t=",";for(let i=0;i<9;i++)e+=this.elements[i]+t;return e}reverse(e){e===void 0&&(e=new Li);const t=3,i=6,r=sb;let a,o;for(a=0;a<3;a++)for(o=0;o<3;o++)r[a+i*o]=this.elements[a+3*o];r[3+6*0]=1,r[3+6*1]=0,r[3+6*2]=0,r[4+6*0]=0,r[4+6*1]=1,r[4+6*2]=0,r[5+6*0]=0,r[5+6*1]=0,r[5+6*2]=1;let s=3;const l=s;let c;const u=i;let d;do{if(a=l-s,r[a+i*a]===0){for(o=a+1;o<l;o++)if(r[a+i*o]!==0){c=u;do d=u-c,r[d+i*a]+=r[d+i*o];while(--c);break}}if(r[a+i*a]!==0)for(o=a+1;o<l;o++){const h=r[a+i*o]/r[a+i*a];c=u;do d=u-c,r[d+i*o]=d<=a?0:r[d+i*o]-r[d+i*a]*h;while(--c)}}while(--s);a=2;do{o=a-1;do{const h=r[a+i*o]/r[a+i*a];c=i;do d=i-c,r[d+i*o]=r[d+i*o]-r[d+i*a]*h;while(--c)}while(o--)}while(--a);a=2;do{const h=1/r[a+i*a];c=i;do d=i-c,r[d+i*a]=r[d+i*a]*h;while(--c)}while(a--);a=2;do{o=2;do{if(d=r[t+o+i*a],isNaN(d)||d===1/0)throw`Could not reverse! A=[${this.toString()}]`;e.e(a,o,d)}while(o--)}while(a--);return e}setRotationFromQuaternion(e){const t=e.x,i=e.y,r=e.z,a=e.w,o=t+t,s=i+i,l=r+r,c=t*o,u=t*s,d=t*l,h=i*s,m=i*l,g=r*l,f=a*o,p=a*s,v=a*l,_=this.elements;return _[3*0+0]=1-(h+g),_[3*0+1]=u-v,_[3*0+2]=d+p,_[3*1+0]=u+v,_[3*1+1]=1-(c+g),_[3*1+2]=m-f,_[3*2+0]=d-p,_[3*2+1]=m+f,_[3*2+2]=1-(c+h),this}transpose(e){e===void 0&&(e=new Li);const t=this.elements,i=e.elements;let r;return i[0]=t[0],i[4]=t[4],i[8]=t[8],r=t[1],i[1]=t[3],i[3]=r,r=t[2],i[2]=t[6],i[6]=r,r=t[5],i[5]=t[7],i[7]=r,e}}const sb=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class M{constructor(e,t,i){e===void 0&&(e=0),t===void 0&&(t=0),i===void 0&&(i=0),this.x=e,this.y=t,this.z=i}cross(e,t){t===void 0&&(t=new M);const i=e.x,r=e.y,a=e.z,o=this.x,s=this.y,l=this.z;return t.x=s*a-l*r,t.y=l*i-o*a,t.z=o*r-s*i,t}set(e,t,i){return this.x=e,this.y=t,this.z=i,this}setZero(){this.x=this.y=this.z=0}vadd(e,t){if(t)t.x=e.x+this.x,t.y=e.y+this.y,t.z=e.z+this.z;else return new M(this.x+e.x,this.y+e.y,this.z+e.z)}vsub(e,t){if(t)t.x=this.x-e.x,t.y=this.y-e.y,t.z=this.z-e.z;else return new M(this.x-e.x,this.y-e.y,this.z-e.z)}crossmat(){return new Li([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const e=this.x,t=this.y,i=this.z,r=Math.sqrt(e*e+t*t+i*i);if(r>0){const a=1/r;this.x*=a,this.y*=a,this.z*=a}else this.x=0,this.y=0,this.z=0;return r}unit(e){e===void 0&&(e=new M);const t=this.x,i=this.y,r=this.z;let a=Math.sqrt(t*t+i*i+r*r);return a>0?(a=1/a,e.x=t*a,e.y=i*a,e.z=r*a):(e.x=1,e.y=0,e.z=0),e}length(){const e=this.x,t=this.y,i=this.z;return Math.sqrt(e*e+t*t+i*i)}lengthSquared(){return this.dot(this)}distanceTo(e){const t=this.x,i=this.y,r=this.z,a=e.x,o=e.y,s=e.z;return Math.sqrt((a-t)*(a-t)+(o-i)*(o-i)+(s-r)*(s-r))}distanceSquared(e){const t=this.x,i=this.y,r=this.z,a=e.x,o=e.y,s=e.z;return(a-t)*(a-t)+(o-i)*(o-i)+(s-r)*(s-r)}scale(e,t){t===void 0&&(t=new M);const i=this.x,r=this.y,a=this.z;return t.x=e*i,t.y=e*r,t.z=e*a,t}vmul(e,t){return t===void 0&&(t=new M),t.x=e.x*this.x,t.y=e.y*this.y,t.z=e.z*this.z,t}addScaledVector(e,t,i){return i===void 0&&(i=new M),i.x=this.x+e*t.x,i.y=this.y+e*t.y,i.z=this.z+e*t.z,i}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(e){return e===void 0&&(e=new M),e.x=-this.x,e.y=-this.y,e.z=-this.z,e}tangents(e,t){const i=this.length();if(i>0){const r=ob,a=1/i;r.set(this.x*a,this.y*a,this.z*a);const o=lb;Math.abs(r.x)<.9?(o.set(1,0,0),r.cross(o,e)):(o.set(0,1,0),r.cross(o,e)),r.cross(e,t)}else e.set(1,0,0),t.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}lerp(e,t,i){const r=this.x,a=this.y,o=this.z;i.x=r+(e.x-r)*t,i.y=a+(e.y-a)*t,i.z=o+(e.z-o)*t}almostEquals(e,t){return t===void 0&&(t=1e-6),!(Math.abs(this.x-e.x)>t||Math.abs(this.y-e.y)>t||Math.abs(this.z-e.z)>t)}almostZero(e){return e===void 0&&(e=1e-6),!(Math.abs(this.x)>e||Math.abs(this.y)>e||Math.abs(this.z)>e)}isAntiparallelTo(e,t){return this.negate(Fc),Fc.almostEquals(e,t)}clone(){return new M(this.x,this.y,this.z)}}M.ZERO=new M(0,0,0);M.UNIT_X=new M(1,0,0);M.UNIT_Y=new M(0,1,0);M.UNIT_Z=new M(0,0,1);const ob=new M,lb=new M,Fc=new M;class di{constructor(e){e===void 0&&(e={}),this.lowerBound=new M,this.upperBound=new M,e.lowerBound&&this.lowerBound.copy(e.lowerBound),e.upperBound&&this.upperBound.copy(e.upperBound)}setFromPoints(e,t,i,r){const a=this.lowerBound,o=this.upperBound,s=i;a.copy(e[0]),s&&s.vmult(a,a),o.copy(a);for(let l=1;l<e.length;l++){let c=e[l];s&&(s.vmult(c,zc),c=zc),c.x>o.x&&(o.x=c.x),c.x<a.x&&(a.x=c.x),c.y>o.y&&(o.y=c.y),c.y<a.y&&(a.y=c.y),c.z>o.z&&(o.z=c.z),c.z<a.z&&(a.z=c.z)}return t&&(t.vadd(a,a),t.vadd(o,o)),r&&(a.x-=r,a.y-=r,a.z-=r,o.x+=r,o.y+=r,o.z+=r),this}copy(e){return this.lowerBound.copy(e.lowerBound),this.upperBound.copy(e.upperBound),this}clone(){return new di().copy(this)}extend(e){this.lowerBound.x=Math.min(this.lowerBound.x,e.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,e.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,e.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,e.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,e.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,e.upperBound.z)}overlaps(e){const t=this.lowerBound,i=this.upperBound,r=e.lowerBound,a=e.upperBound,o=r.x<=i.x&&i.x<=a.x||t.x<=a.x&&a.x<=i.x,s=r.y<=i.y&&i.y<=a.y||t.y<=a.y&&a.y<=i.y,l=r.z<=i.z&&i.z<=a.z||t.z<=a.z&&a.z<=i.z;return o&&s&&l}volume(){const e=this.lowerBound,t=this.upperBound;return(t.x-e.x)*(t.y-e.y)*(t.z-e.z)}contains(e){const t=this.lowerBound,i=this.upperBound,r=e.lowerBound,a=e.upperBound;return t.x<=r.x&&i.x>=a.x&&t.y<=r.y&&i.y>=a.y&&t.z<=r.z&&i.z>=a.z}getCorners(e,t,i,r,a,o,s,l){const c=this.lowerBound,u=this.upperBound;e.copy(c),t.set(u.x,c.y,c.z),i.set(u.x,u.y,c.z),r.set(c.x,u.y,u.z),a.set(u.x,c.y,u.z),o.set(c.x,u.y,c.z),s.set(c.x,c.y,u.z),l.copy(u)}toLocalFrame(e,t){const i=Nc,r=i[0],a=i[1],o=i[2],s=i[3],l=i[4],c=i[5],u=i[6],d=i[7];this.getCorners(r,a,o,s,l,c,u,d);for(let h=0;h!==8;h++){const m=i[h];e.pointToLocal(m,m)}return t.setFromPoints(i)}toWorldFrame(e,t){const i=Nc,r=i[0],a=i[1],o=i[2],s=i[3],l=i[4],c=i[5],u=i[6],d=i[7];this.getCorners(r,a,o,s,l,c,u,d);for(let h=0;h!==8;h++){const m=i[h];e.pointToWorld(m,m)}return t.setFromPoints(i)}overlapsRay(e){const{direction:t,from:i}=e,r=1/t.x,a=1/t.y,o=1/t.z,s=(this.lowerBound.x-i.x)*r,l=(this.upperBound.x-i.x)*r,c=(this.lowerBound.y-i.y)*a,u=(this.upperBound.y-i.y)*a,d=(this.lowerBound.z-i.z)*o,h=(this.upperBound.z-i.z)*o,m=Math.max(Math.max(Math.min(s,l),Math.min(c,u)),Math.min(d,h)),g=Math.min(Math.min(Math.max(s,l),Math.max(c,u)),Math.max(d,h));return!(g<0||m>g)}}const zc=new M,Nc=[new M,new M,new M,new M,new M,new M,new M,new M];class kc{constructor(){this.matrix=[]}get(e,t){let{index:i}=e,{index:r}=t;if(r>i){const a=r;r=i,i=a}return this.matrix[(i*(i+1)>>1)+r-1]}set(e,t,i){let{index:r}=e,{index:a}=t;if(a>r){const o=a;a=r,r=o}this.matrix[(r*(r+1)>>1)+a-1]=i?1:0}reset(){for(let e=0,t=this.matrix.length;e!==t;e++)this.matrix[e]=0}setNumObjects(e){this.matrix.length=e*(e-1)>>1}}class wh{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;return i[e]===void 0&&(i[e]=[]),i[e].includes(t)||i[e].push(t),this}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return!!(i[e]!==void 0&&i[e].includes(t))}hasAnyEventListener(e){return this._listeners===void 0?!1:this._listeners[e]!==void 0}removeEventListener(e,t){if(this._listeners===void 0)return this;const i=this._listeners;if(i[e]===void 0)return this;const r=i[e].indexOf(t);return r!==-1&&i[e].splice(r,1),this}dispatchEvent(e){if(this._listeners===void 0)return this;const t=this._listeners[e.type];if(t!==void 0){e.target=this;for(let i=0,r=t.length;i<r;i++)t[i].call(this,e)}return this}}class bt{constructor(e,t,i,r){e===void 0&&(e=0),t===void 0&&(t=0),i===void 0&&(i=0),r===void 0&&(r=1),this.x=e,this.y=t,this.z=i,this.w=r}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(e,t){const i=Math.sin(t*.5);return this.x=e.x*i,this.y=e.y*i,this.z=e.z*i,this.w=Math.cos(t*.5),this}toAxisAngle(e){e===void 0&&(e=new M),this.normalize();const t=2*Math.acos(this.w),i=Math.sqrt(1-this.w*this.w);return i<.001?(e.x=this.x,e.y=this.y,e.z=this.z):(e.x=this.x/i,e.y=this.y/i,e.z=this.z/i),[e,t]}setFromVectors(e,t){if(e.isAntiparallelTo(t)){const i=cb,r=ub;e.tangents(i,r),this.setFromAxisAngle(i,Math.PI)}else{const i=e.cross(t);this.x=i.x,this.y=i.y,this.z=i.z,this.w=Math.sqrt(e.length()**2*t.length()**2)+e.dot(t),this.normalize()}return this}mult(e,t){t===void 0&&(t=new bt);const i=this.x,r=this.y,a=this.z,o=this.w,s=e.x,l=e.y,c=e.z,u=e.w;return t.x=i*u+o*s+r*c-a*l,t.y=r*u+o*l+a*s-i*c,t.z=a*u+o*c+i*l-r*s,t.w=o*u-i*s-r*l-a*c,t}inverse(e){e===void 0&&(e=new bt);const t=this.x,i=this.y,r=this.z,a=this.w;this.conjugate(e);const o=1/(t*t+i*i+r*r+a*a);return e.x*=o,e.y*=o,e.z*=o,e.w*=o,e}conjugate(e){return e===void 0&&(e=new bt),e.x=-this.x,e.y=-this.y,e.z=-this.z,e.w=this.w,e}normalize(){let e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return e===0?(this.x=0,this.y=0,this.z=0,this.w=0):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}normalizeFast(){const e=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return e===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}vmult(e,t){t===void 0&&(t=new M);const i=e.x,r=e.y,a=e.z,o=this.x,s=this.y,l=this.z,c=this.w,u=c*i+s*a-l*r,d=c*r+l*i-o*a,h=c*a+o*r-s*i,m=-o*i-s*r-l*a;return t.x=u*c+m*-o+d*-l-h*-s,t.y=d*c+m*-s+h*-o-u*-l,t.z=h*c+m*-l+u*-s-d*-o,t}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}toEuler(e,t){t===void 0&&(t="YZX");let i,r,a;const o=this.x,s=this.y,l=this.z,c=this.w;switch(t){case"YZX":const u=o*s+l*c;if(u>.499&&(i=2*Math.atan2(o,c),r=Math.PI/2,a=0),u<-.499&&(i=-2*Math.atan2(o,c),r=-Math.PI/2,a=0),i===void 0){const d=o*o,h=s*s,m=l*l;i=Math.atan2(2*s*c-2*o*l,1-2*h-2*m),r=Math.asin(2*u),a=Math.atan2(2*o*c-2*s*l,1-2*d-2*m)}break;default:throw new Error(`Euler order ${t} not supported yet.`)}e.y=i,e.z=r,e.x=a}setFromEuler(e,t,i,r){r===void 0&&(r="XYZ");const a=Math.cos(e/2),o=Math.cos(t/2),s=Math.cos(i/2),l=Math.sin(e/2),c=Math.sin(t/2),u=Math.sin(i/2);return r==="XYZ"?(this.x=l*o*s+a*c*u,this.y=a*c*s-l*o*u,this.z=a*o*u+l*c*s,this.w=a*o*s-l*c*u):r==="YXZ"?(this.x=l*o*s+a*c*u,this.y=a*c*s-l*o*u,this.z=a*o*u-l*c*s,this.w=a*o*s+l*c*u):r==="ZXY"?(this.x=l*o*s-a*c*u,this.y=a*c*s+l*o*u,this.z=a*o*u+l*c*s,this.w=a*o*s-l*c*u):r==="ZYX"?(this.x=l*o*s-a*c*u,this.y=a*c*s+l*o*u,this.z=a*o*u-l*c*s,this.w=a*o*s+l*c*u):r==="YZX"?(this.x=l*o*s+a*c*u,this.y=a*c*s+l*o*u,this.z=a*o*u-l*c*s,this.w=a*o*s-l*c*u):r==="XZY"&&(this.x=l*o*s-a*c*u,this.y=a*c*s-l*o*u,this.z=a*o*u+l*c*s,this.w=a*o*s+l*c*u),this}clone(){return new bt(this.x,this.y,this.z,this.w)}slerp(e,t,i){i===void 0&&(i=new bt);const r=this.x,a=this.y,o=this.z,s=this.w;let l=e.x,c=e.y,u=e.z,d=e.w,h,m,g,f,p;return m=r*l+a*c+o*u+s*d,m<0&&(m=-m,l=-l,c=-c,u=-u,d=-d),1-m>1e-6?(h=Math.acos(m),g=Math.sin(h),f=Math.sin((1-t)*h)/g,p=Math.sin(t*h)/g):(f=1-t,p=t),i.x=f*r+p*l,i.y=f*a+p*c,i.z=f*o+p*u,i.w=f*s+p*d,i}integrate(e,t,i,r){r===void 0&&(r=new bt);const a=e.x*i.x,o=e.y*i.y,s=e.z*i.z,l=this.x,c=this.y,u=this.z,d=this.w,h=t*.5;return r.x+=h*(a*d+o*u-s*c),r.y+=h*(o*d+s*l-a*u),r.z+=h*(s*d+a*c-o*l),r.w+=h*(-a*l-o*c-s*u),r}}const cb=new M,ub=new M,hb={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class ge{constructor(e){e===void 0&&(e={}),this.id=ge.idCounter++,this.type=e.type||0,this.boundingSphereRadius=0,this.collisionResponse=e.collisionResponse?e.collisionResponse:!0,this.collisionFilterGroup=e.collisionFilterGroup!==void 0?e.collisionFilterGroup:1,this.collisionFilterMask=e.collisionFilterMask!==void 0?e.collisionFilterMask:-1,this.material=e.material?e.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(e,t){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(e,t,i,r){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}ge.idCounter=0;ge.types=hb;class it{constructor(e){e===void 0&&(e={}),this.position=new M,this.quaternion=new bt,e.position&&this.position.copy(e.position),e.quaternion&&this.quaternion.copy(e.quaternion)}pointToLocal(e,t){return it.pointToLocalFrame(this.position,this.quaternion,e,t)}pointToWorld(e,t){return it.pointToWorldFrame(this.position,this.quaternion,e,t)}vectorToWorldFrame(e,t){return t===void 0&&(t=new M),this.quaternion.vmult(e,t),t}static pointToLocalFrame(e,t,i,r){return r===void 0&&(r=new M),i.vsub(e,r),t.conjugate(Oc),Oc.vmult(r,r),r}static pointToWorldFrame(e,t,i,r){return r===void 0&&(r=new M),t.vmult(i,r),r.vadd(e,r),r}static vectorToWorldFrame(e,t,i){return i===void 0&&(i=new M),e.vmult(t,i),i}static vectorToLocalFrame(e,t,i,r){return r===void 0&&(r=new M),t.w*=-1,t.vmult(i,r),t.w*=-1,r}}const Oc=new bt;class Jr extends ge{constructor(e){e===void 0&&(e={});const{vertices:t=[],faces:i=[],normals:r=[],axes:a,boundingSphereRadius:o}=e;super({type:ge.types.CONVEXPOLYHEDRON}),this.vertices=t,this.faces=i,this.faceNormals=r,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=a?a.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const e=this.faces,t=this.vertices,i=this.uniqueEdges;i.length=0;const r=new M;for(let a=0;a!==e.length;a++){const o=e[a],s=o.length;for(let l=0;l!==s;l++){const c=(l+1)%s;t[o[l]].vsub(t[o[c]],r),r.normalize();let u=!1;for(let d=0;d!==i.length;d++)if(i[d].almostEquals(r)||i[d].almostEquals(r)){u=!0;break}u||i.push(r.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let e=0;e<this.faces.length;e++){for(let r=0;r<this.faces[e].length;r++)if(!this.vertices[this.faces[e][r]])throw new Error(`Vertex ${this.faces[e][r]} not found!`);const t=this.faceNormals[e]||new M;this.getFaceNormal(e,t),t.negate(t),this.faceNormals[e]=t;const i=this.vertices[this.faces[e][0]];if(t.dot(i)<0){console.error(`.faceNormals[${e}] = Vec3(${t.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let r=0;r<this.faces[e].length;r++)console.warn(`.vertices[${this.faces[e][r]}] = Vec3(${this.vertices[this.faces[e][r]].toString()})`)}}}getFaceNormal(e,t){const i=this.faces[e],r=this.vertices[i[0]],a=this.vertices[i[1]],o=this.vertices[i[2]];Jr.computeNormal(r,a,o,t)}static computeNormal(e,t,i,r){const a=new M,o=new M;t.vsub(e,o),i.vsub(t,a),a.cross(o,r),r.isZero()||r.normalize()}clipAgainstHull(e,t,i,r,a,o,s,l,c){const u=new M;let d=-1,h=-Number.MAX_VALUE;for(let g=0;g<i.faces.length;g++){u.copy(i.faceNormals[g]),a.vmult(u,u);const f=u.dot(o);f>h&&(h=f,d=g)}const m=[];for(let g=0;g<i.faces[d].length;g++){const f=i.vertices[i.faces[d][g]],p=new M;p.copy(f),a.vmult(p,p),r.vadd(p,p),m.push(p)}d>=0&&this.clipFaceAgainstHull(o,e,t,m,s,l,c)}findSeparatingAxis(e,t,i,r,a,o,s,l){const c=new M,u=new M,d=new M,h=new M,m=new M,g=new M;let f=Number.MAX_VALUE;const p=this;if(p.uniqueAxes)for(let v=0;v!==p.uniqueAxes.length;v++){i.vmult(p.uniqueAxes[v],c);const _=p.testSepAxis(c,e,t,i,r,a);if(_===!1)return!1;_<f&&(f=_,o.copy(c))}else{const v=s?s.length:p.faces.length;for(let _=0;_<v;_++){const y=s?s[_]:_;c.copy(p.faceNormals[y]),i.vmult(c,c);const x=p.testSepAxis(c,e,t,i,r,a);if(x===!1)return!1;x<f&&(f=x,o.copy(c))}}if(e.uniqueAxes)for(let v=0;v!==e.uniqueAxes.length;v++){a.vmult(e.uniqueAxes[v],u);const _=p.testSepAxis(u,e,t,i,r,a);if(_===!1)return!1;_<f&&(f=_,o.copy(u))}else{const v=l?l.length:e.faces.length;for(let _=0;_<v;_++){const y=l?l[_]:_;u.copy(e.faceNormals[y]),a.vmult(u,u);const x=p.testSepAxis(u,e,t,i,r,a);if(x===!1)return!1;x<f&&(f=x,o.copy(u))}}for(let v=0;v!==p.uniqueEdges.length;v++){i.vmult(p.uniqueEdges[v],h);for(let _=0;_!==e.uniqueEdges.length;_++)if(a.vmult(e.uniqueEdges[_],m),h.cross(m,g),!g.almostZero()){g.normalize();const y=p.testSepAxis(g,e,t,i,r,a);if(y===!1)return!1;y<f&&(f=y,o.copy(g))}}return r.vsub(t,d),d.dot(o)>0&&o.negate(o),!0}testSepAxis(e,t,i,r,a,o){const s=this;Jr.project(s,e,i,r,Ro),Jr.project(t,e,a,o,Po);const l=Ro[0],c=Ro[1],u=Po[0],d=Po[1];if(l<d||u<c)return!1;const h=l-d,m=u-c;return h<m?h:m}calculateLocalInertia(e,t){const i=new M,r=new M;this.computeLocalAABB(r,i);const a=i.x-r.x,o=i.y-r.y,s=i.z-r.z;t.x=1/12*e*(2*o*2*o+2*s*2*s),t.y=1/12*e*(2*a*2*a+2*s*2*s),t.z=1/12*e*(2*o*2*o+2*a*2*a)}getPlaneConstantOfFace(e){const t=this.faces[e],i=this.faceNormals[e],r=this.vertices[t[0]];return-i.dot(r)}clipFaceAgainstHull(e,t,i,r,a,o,s){const l=new M,c=new M,u=new M,d=new M,h=new M,m=new M,g=new M,f=new M,p=this,v=[],_=r,y=v;let x=-1,w=Number.MAX_VALUE;for(let D=0;D<p.faces.length;D++){l.copy(p.faceNormals[D]),i.vmult(l,l);const I=l.dot(e);I<w&&(w=I,x=D)}if(x<0)return;const S=p.faces[x];S.connectedFaces=[];for(let D=0;D<p.faces.length;D++)for(let I=0;I<p.faces[D].length;I++)S.indexOf(p.faces[D][I])!==-1&&D!==x&&S.connectedFaces.indexOf(D)===-1&&S.connectedFaces.push(D);const T=S.length;for(let D=0;D<T;D++){const I=p.vertices[S[D]],N=p.vertices[S[(D+1)%T]];I.vsub(N,c),u.copy(c),i.vmult(u,u),t.vadd(u,u),d.copy(this.faceNormals[x]),i.vmult(d,d),t.vadd(d,d),u.cross(d,h),h.negate(h),m.copy(I),i.vmult(m,m),t.vadd(m,m);const z=S.connectedFaces[D];g.copy(this.faceNormals[z]);const L=this.getPlaneConstantOfFace(z);f.copy(g),i.vmult(f,f);const P=L-f.dot(t);for(this.clipFaceAgainstPlane(_,y,f,P);_.length;)_.shift();for(;y.length;)_.push(y.shift())}g.copy(this.faceNormals[x]);const b=this.getPlaneConstantOfFace(x);f.copy(g),i.vmult(f,f);const E=b-f.dot(t);for(let D=0;D<_.length;D++){let I=f.dot(_[D])+E;if(I<=a&&(I=a),I<=o){const N=_[D];if(I<=1e-6){const z={point:N,normal:f,depth:I};s.push(z)}}}}clipFaceAgainstPlane(e,t,i,r){let a,o;const s=e.length;if(s<2)return t;let l=e[e.length-1],c=e[0];a=i.dot(l)+r;for(let u=0;u<s;u++){if(c=e[u],o=i.dot(c)+r,a<0)if(o<0){const d=new M;d.copy(c),t.push(d)}else{const d=new M;l.lerp(c,a/(a-o),d),t.push(d)}else if(o<0){const d=new M;l.lerp(c,a/(a-o),d),t.push(d),t.push(c)}l=c,a=o}return t}computeWorldVertices(e,t){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new M);const i=this.vertices,r=this.worldVertices;for(let a=0;a!==this.vertices.length;a++)t.vmult(i[a],r[a]),e.vadd(r[a],r[a]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(e,t){const i=this.vertices;e.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let r=0;r<this.vertices.length;r++){const a=i[r];a.x<e.x?e.x=a.x:a.x>t.x&&(t.x=a.x),a.y<e.y?e.y=a.y:a.y>t.y&&(t.y=a.y),a.z<e.z?e.z=a.z:a.z>t.z&&(t.z=a.z)}}computeWorldFaceNormals(e){const t=this.faceNormals.length;for(;this.worldFaceNormals.length<t;)this.worldFaceNormals.push(new M);const i=this.faceNormals,r=this.worldFaceNormals;for(let a=0;a!==t;a++)e.vmult(i[a],r[a]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let e=0;const t=this.vertices;for(let i=0;i!==t.length;i++){const r=t[i].lengthSquared();r>e&&(e=r)}this.boundingSphereRadius=Math.sqrt(e)}calculateWorldAABB(e,t,i,r){const a=this.vertices;let o,s,l,c,u,d,h=new M;for(let m=0;m<a.length;m++){h.copy(a[m]),t.vmult(h,h),e.vadd(h,h);const g=h;(o===void 0||g.x<o)&&(o=g.x),(c===void 0||g.x>c)&&(c=g.x),(s===void 0||g.y<s)&&(s=g.y),(u===void 0||g.y>u)&&(u=g.y),(l===void 0||g.z<l)&&(l=g.z),(d===void 0||g.z>d)&&(d=g.z)}i.set(o,s,l),r.set(c,u,d)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(e){e===void 0&&(e=new M);const t=this.vertices;for(let i=0;i<t.length;i++)e.vadd(t[i],e);return e.scale(1/t.length,e),e}transformAllPoints(e,t){const i=this.vertices.length,r=this.vertices;if(t){for(let a=0;a<i;a++){const o=r[a];t.vmult(o,o)}for(let a=0;a<this.faceNormals.length;a++){const o=this.faceNormals[a];t.vmult(o,o)}}if(e)for(let a=0;a<i;a++){const o=r[a];o.vadd(e,o)}}pointIsInside(e){const t=this.vertices,i=this.faces,r=this.faceNormals,a=null,o=new M;this.getAveragePointLocal(o);for(let s=0;s<this.faces.length;s++){let l=r[s];const c=t[i[s][0]],u=new M;e.vsub(c,u);const d=l.dot(u),h=new M;o.vsub(c,h);const m=l.dot(h);if(d<0&&m>0||d>0&&m<0)return!1}return a?1:-1}static project(e,t,i,r,a){const o=e.vertices.length,s=db;let l=0,c=0;const u=pb,d=e.vertices;u.setZero(),it.vectorToLocalFrame(i,r,t,s),it.pointToLocalFrame(i,r,u,u);const h=u.dot(s);c=l=d[0].dot(s);for(let m=1;m<o;m++){const g=d[m].dot(s);g>l&&(l=g),g<c&&(c=g)}if(c-=h,l-=h,c>l){const m=c;c=l,l=m}a[0]=l,a[1]=c}}const Ro=[],Po=[];new M;const db=new M,pb=new M;class yl extends ge{constructor(e){super({type:ge.types.BOX}),this.halfExtents=e,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const e=this.halfExtents.x,t=this.halfExtents.y,i=this.halfExtents.z,r=M,a=[new r(-e,-t,-i),new r(e,-t,-i),new r(e,t,-i),new r(-e,t,-i),new r(-e,-t,i),new r(e,-t,i),new r(e,t,i),new r(-e,t,i)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],s=[new r(0,0,1),new r(0,1,0),new r(1,0,0)],l=new Jr({vertices:a,faces:o,axes:s});this.convexPolyhedronRepresentation=l,l.material=this.material}calculateLocalInertia(e,t){return t===void 0&&(t=new M),yl.calculateInertia(this.halfExtents,e,t),t}static calculateInertia(e,t,i){const r=e;i.x=1/12*t*(2*r.y*2*r.y+2*r.z*2*r.z),i.y=1/12*t*(2*r.x*2*r.x+2*r.z*2*r.z),i.z=1/12*t*(2*r.y*2*r.y+2*r.x*2*r.x)}getSideNormals(e,t){const i=e,r=this.halfExtents;if(i[0].set(r.x,0,0),i[1].set(0,r.y,0),i[2].set(0,0,r.z),i[3].set(-r.x,0,0),i[4].set(0,-r.y,0),i[5].set(0,0,-r.z),t!==void 0)for(let a=0;a!==i.length;a++)t.vmult(i[a],i[a]);return i}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(e,t,i){const r=this.halfExtents,a=[[r.x,r.y,r.z],[-r.x,r.y,r.z],[-r.x,-r.y,r.z],[-r.x,-r.y,-r.z],[r.x,-r.y,-r.z],[r.x,r.y,-r.z],[-r.x,r.y,-r.z],[r.x,-r.y,r.z]];for(let o=0;o<a.length;o++)yr.set(a[o][0],a[o][1],a[o][2]),t.vmult(yr,yr),e.vadd(yr,yr),i(yr.x,yr.y,yr.z)}calculateWorldAABB(e,t,i,r){const a=this.halfExtents;Ii[0].set(a.x,a.y,a.z),Ii[1].set(-a.x,a.y,a.z),Ii[2].set(-a.x,-a.y,a.z),Ii[3].set(-a.x,-a.y,-a.z),Ii[4].set(a.x,-a.y,-a.z),Ii[5].set(a.x,a.y,-a.z),Ii[6].set(-a.x,a.y,-a.z),Ii[7].set(a.x,-a.y,a.z);const o=Ii[0];t.vmult(o,o),e.vadd(o,o),r.copy(o),i.copy(o);for(let s=1;s<8;s++){const l=Ii[s];t.vmult(l,l),e.vadd(l,l);const c=l.x,u=l.y,d=l.z;c>r.x&&(r.x=c),u>r.y&&(r.y=u),d>r.z&&(r.z=d),c<i.x&&(i.x=c),u<i.y&&(i.y=u),d<i.z&&(i.z=d)}}}const yr=new M,Ii=[new M,new M,new M,new M,new M,new M,new M,new M],bl={DYNAMIC:1,STATIC:2,KINEMATIC:4},wl={AWAKE:0,SLEEPY:1,SLEEPING:2};class ue extends wh{constructor(e){e===void 0&&(e={}),super(),this.id=ue.idCounter++,this.index=-1,this.world=null,this.vlambda=new M,this.collisionFilterGroup=typeof e.collisionFilterGroup=="number"?e.collisionFilterGroup:1,this.collisionFilterMask=typeof e.collisionFilterMask=="number"?e.collisionFilterMask:-1,this.collisionResponse=typeof e.collisionResponse=="boolean"?e.collisionResponse:!0,this.position=new M,this.previousPosition=new M,this.interpolatedPosition=new M,this.initPosition=new M,e.position&&(this.position.copy(e.position),this.previousPosition.copy(e.position),this.interpolatedPosition.copy(e.position),this.initPosition.copy(e.position)),this.velocity=new M,e.velocity&&this.velocity.copy(e.velocity),this.initVelocity=new M,this.force=new M;const t=typeof e.mass=="number"?e.mass:0;this.mass=t,this.invMass=t>0?1/t:0,this.material=e.material||null,this.linearDamping=typeof e.linearDamping=="number"?e.linearDamping:.01,this.type=t<=0?ue.STATIC:ue.DYNAMIC,typeof e.type==typeof ue.STATIC&&(this.type=e.type),this.allowSleep=typeof e.allowSleep<"u"?e.allowSleep:!0,this.sleepState=ue.AWAKE,this.sleepSpeedLimit=typeof e.sleepSpeedLimit<"u"?e.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof e.sleepTimeLimit<"u"?e.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new M,this.quaternion=new bt,this.initQuaternion=new bt,this.previousQuaternion=new bt,this.interpolatedQuaternion=new bt,e.quaternion&&(this.quaternion.copy(e.quaternion),this.initQuaternion.copy(e.quaternion),this.previousQuaternion.copy(e.quaternion),this.interpolatedQuaternion.copy(e.quaternion)),this.angularVelocity=new M,e.angularVelocity&&this.angularVelocity.copy(e.angularVelocity),this.initAngularVelocity=new M,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new M,this.invInertia=new M,this.invInertiaWorld=new Li,this.invMassSolve=0,this.invInertiaSolve=new M,this.invInertiaWorldSolve=new Li,this.fixedRotation=typeof e.fixedRotation<"u"?e.fixedRotation:!1,this.angularDamping=typeof e.angularDamping<"u"?e.angularDamping:.01,this.linearFactor=new M(1,1,1),e.linearFactor&&this.linearFactor.copy(e.linearFactor),this.angularFactor=new M(1,1,1),e.angularFactor&&this.angularFactor.copy(e.angularFactor),this.aabb=new di,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new M,this.isTrigger=!!e.isTrigger,e.shape&&this.addShape(e.shape),this.updateMassProperties()}wakeUp(){const e=this.sleepState;this.sleepState=ue.AWAKE,this.wakeUpAfterNarrowphase=!1,e===ue.SLEEPING&&this.dispatchEvent(ue.wakeupEvent)}sleep(){this.sleepState=ue.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(e){if(this.allowSleep){const t=this.sleepState,i=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),r=this.sleepSpeedLimit**2;t===ue.AWAKE&&i<r?(this.sleepState=ue.SLEEPY,this.timeLastSleepy=e,this.dispatchEvent(ue.sleepyEvent)):t===ue.SLEEPY&&i>r?this.wakeUp():t===ue.SLEEPY&&e-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(ue.sleepEvent))}}updateSolveMassProperties(){this.sleepState===ue.SLEEPING||this.type===ue.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(e,t){return t===void 0&&(t=new M),e.vsub(this.position,t),this.quaternion.conjugate().vmult(t,t),t}vectorToLocalFrame(e,t){return t===void 0&&(t=new M),this.quaternion.conjugate().vmult(e,t),t}pointToWorldFrame(e,t){return t===void 0&&(t=new M),this.quaternion.vmult(e,t),t.vadd(this.position,t),t}vectorToWorldFrame(e,t){return t===void 0&&(t=new M),this.quaternion.vmult(e,t),t}addShape(e,t,i){const r=new M,a=new bt;return t&&r.copy(t),i&&a.copy(i),this.shapes.push(e),this.shapeOffsets.push(r),this.shapeOrientations.push(a),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=this,this}removeShape(e){const t=this.shapes.indexOf(e);return t===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(t,1),this.shapeOffsets.splice(t,1),this.shapeOrientations.splice(t,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=null,this)}updateBoundingRadius(){const e=this.shapes,t=this.shapeOffsets,i=e.length;let r=0;for(let a=0;a!==i;a++){const o=e[a];o.updateBoundingSphereRadius();const s=t[a].length(),l=o.boundingSphereRadius;s+l>r&&(r=s+l)}this.boundingRadius=r}updateAABB(){const e=this.shapes,t=this.shapeOffsets,i=this.shapeOrientations,r=e.length,a=fb,o=mb,s=this.quaternion,l=this.aabb,c=gb;for(let u=0;u!==r;u++){const d=e[u];s.vmult(t[u],a),a.vadd(this.position,a),s.mult(i[u],o),d.calculateWorldAABB(a,o,c.lowerBound,c.upperBound),u===0?l.copy(c):l.extend(c)}this.aabbNeedsUpdate=!1}updateInertiaWorld(e){const t=this.invInertia;if(!(t.x===t.y&&t.y===t.z&&!e)){const i=vb,r=_b;i.setRotationFromQuaternion(this.quaternion),i.transpose(r),i.scale(t,i),i.mmult(r,this.invInertiaWorld)}}applyForce(e,t){if(t===void 0&&(t=new M),this.type!==ue.DYNAMIC)return;this.sleepState===ue.SLEEPING&&this.wakeUp();const i=xb;t.cross(e,i),this.force.vadd(e,this.force),this.torque.vadd(i,this.torque)}applyLocalForce(e,t){if(t===void 0&&(t=new M),this.type!==ue.DYNAMIC)return;const i=yb,r=bb;this.vectorToWorldFrame(e,i),this.vectorToWorldFrame(t,r),this.applyForce(i,r)}applyTorque(e){this.type===ue.DYNAMIC&&(this.sleepState===ue.SLEEPING&&this.wakeUp(),this.torque.vadd(e,this.torque))}applyImpulse(e,t){if(t===void 0&&(t=new M),this.type!==ue.DYNAMIC)return;this.sleepState===ue.SLEEPING&&this.wakeUp();const i=t,r=wb;r.copy(e),r.scale(this.invMass,r),this.velocity.vadd(r,this.velocity);const a=Mb;i.cross(e,a),this.invInertiaWorld.vmult(a,a),this.angularVelocity.vadd(a,this.angularVelocity)}applyLocalImpulse(e,t){if(t===void 0&&(t=new M),this.type!==ue.DYNAMIC)return;const i=Sb,r=Eb;this.vectorToWorldFrame(e,i),this.vectorToWorldFrame(t,r),this.applyImpulse(i,r)}updateMassProperties(){const e=Tb;this.invMass=this.mass>0?1/this.mass:0;const t=this.inertia,i=this.fixedRotation;this.updateAABB(),e.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),yl.calculateInertia(e,this.mass,t),this.invInertia.set(t.x>0&&!i?1/t.x:0,t.y>0&&!i?1/t.y:0,t.z>0&&!i?1/t.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(e,t){const i=new M;return e.vsub(this.position,i),this.angularVelocity.cross(i,t),this.velocity.vadd(t,t),t}integrate(e,t,i){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===ue.DYNAMIC||this.type===ue.KINEMATIC)||this.sleepState===ue.SLEEPING)return;const r=this.velocity,a=this.angularVelocity,o=this.position,s=this.force,l=this.torque,c=this.quaternion,u=this.invMass,d=this.invInertiaWorld,h=this.linearFactor,m=u*e;r.x+=s.x*m*h.x,r.y+=s.y*m*h.y,r.z+=s.z*m*h.z;const g=d.elements,f=this.angularFactor,p=l.x*f.x,v=l.y*f.y,_=l.z*f.z;a.x+=e*(g[0]*p+g[1]*v+g[2]*_),a.y+=e*(g[3]*p+g[4]*v+g[5]*_),a.z+=e*(g[6]*p+g[7]*v+g[8]*_),o.x+=r.x*e,o.y+=r.y*e,o.z+=r.z*e,c.integrate(this.angularVelocity,e,this.angularFactor,c),t&&(i?c.normalizeFast():c.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}ue.idCounter=0;ue.COLLIDE_EVENT_NAME="collide";ue.DYNAMIC=bl.DYNAMIC;ue.STATIC=bl.STATIC;ue.KINEMATIC=bl.KINEMATIC;ue.AWAKE=wl.AWAKE;ue.SLEEPY=wl.SLEEPY;ue.SLEEPING=wl.SLEEPING;ue.wakeupEvent={type:"wakeup"};ue.sleepyEvent={type:"sleepy"};ue.sleepEvent={type:"sleep"};const fb=new M,mb=new bt,gb=new di,vb=new Li,_b=new Li;new Li;const xb=new M,yb=new M,bb=new M,wb=new M,Mb=new M,Sb=new M,Eb=new M,Tb=new M;class Ab{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(e,t,i){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(e,t){return!((e.collisionFilterGroup&t.collisionFilterMask)===0||(t.collisionFilterGroup&e.collisionFilterMask)===0||((e.type&ue.STATIC)!==0||e.sleepState===ue.SLEEPING)&&((t.type&ue.STATIC)!==0||t.sleepState===ue.SLEEPING))}intersectionTest(e,t,i,r){this.useBoundingBoxes?this.doBoundingBoxBroadphase(e,t,i,r):this.doBoundingSphereBroadphase(e,t,i,r)}doBoundingSphereBroadphase(e,t,i,r){const a=Cb;t.position.vsub(e.position,a);const o=(e.boundingRadius+t.boundingRadius)**2;a.lengthSquared()<o&&(i.push(e),r.push(t))}doBoundingBoxBroadphase(e,t,i,r){e.aabbNeedsUpdate&&e.updateAABB(),t.aabbNeedsUpdate&&t.updateAABB(),e.aabb.overlaps(t.aabb)&&(i.push(e),r.push(t))}makePairsUnique(e,t){const i=Lb,r=Db,a=Rb,o=e.length;for(let s=0;s!==o;s++)r[s]=e[s],a[s]=t[s];e.length=0,t.length=0;for(let s=0;s!==o;s++){const l=r[s].id,c=a[s].id,u=l<c?`${l},${c}`:`${c},${l}`;i[u]=s,i.keys.push(u)}for(let s=0;s!==i.keys.length;s++){const l=i.keys.pop(),c=i[l];e.push(r[c]),t.push(a[c]),delete i[l]}}setWorld(e){}static boundingSphereCheck(e,t){const i=new M;e.position.vsub(t.position,i);const r=e.shapes[0],a=t.shapes[0];return Math.pow(r.boundingSphereRadius+a.boundingSphereRadius,2)>i.lengthSquared()}aabbQuery(e,t,i){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const Cb=new M;new M;new bt;new M;const Lb={keys:[]},Db=[],Rb=[];new M;new M;new M;class Mh extends Ab{constructor(){super()}collisionPairs(e,t,i){const r=e.bodies,a=r.length;let o,s;for(let l=0;l!==a;l++)for(let c=0;c!==l;c++)o=r[l],s=r[c],this.needBroadphaseCollision(o,s)&&this.intersectionTest(o,s,t,i)}aabbQuery(e,t,i){i===void 0&&(i=[]);for(let r=0;r<e.bodies.length;r++){const a=e.bodies[r];a.aabbNeedsUpdate&&a.updateAABB(),a.aabb.overlaps(t)&&i.push(a)}return i}}class Ms{constructor(){this.rayFromWorld=new M,this.rayToWorld=new M,this.hitNormalWorld=new M,this.hitPointWorld=new M,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(e,t,i,r,a,o,s){this.rayFromWorld.copy(e),this.rayToWorld.copy(t),this.hitNormalWorld.copy(i),this.hitPointWorld.copy(r),this.shape=a,this.body=o,this.distance=s}}let Sh,Eh,Th,Ah,Ch,Lh,Dh;const Ml={CLOSEST:1,ANY:2,ALL:4};Sh=ge.types.SPHERE;Eh=ge.types.PLANE;Th=ge.types.BOX;Ah=ge.types.CYLINDER;Ch=ge.types.CONVEXPOLYHEDRON;Lh=ge.types.HEIGHTFIELD;Dh=ge.types.TRIMESH;class yt{get[Sh](){return this._intersectSphere}get[Eh](){return this._intersectPlane}get[Th](){return this._intersectBox}get[Ah](){return this._intersectConvex}get[Ch](){return this._intersectConvex}get[Lh](){return this._intersectHeightfield}get[Dh](){return this._intersectTrimesh}constructor(e,t){e===void 0&&(e=new M),t===void 0&&(t=new M),this.from=e.clone(),this.to=t.clone(),this.direction=new M,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=yt.ANY,this.result=new Ms,this.hasHit=!1,this.callback=i=>{}}intersectWorld(e,t){return this.mode=t.mode||yt.ANY,this.result=t.result||new Ms,this.skipBackfaces=!!t.skipBackfaces,this.collisionFilterMask=typeof t.collisionFilterMask<"u"?t.collisionFilterMask:-1,this.collisionFilterGroup=typeof t.collisionFilterGroup<"u"?t.collisionFilterGroup:-1,this.checkCollisionResponse=typeof t.checkCollisionResponse<"u"?t.checkCollisionResponse:!0,t.from&&this.from.copy(t.from),t.to&&this.to.copy(t.to),this.callback=t.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(Bc),Io.length=0,e.broadphase.aabbQuery(e,Bc,Io),this.intersectBodies(Io),this.hasHit}intersectBody(e,t){t&&(this.result=t,this.updateDirection());const i=this.checkCollisionResponse;if(i&&!e.collisionResponse||(this.collisionFilterGroup&e.collisionFilterMask)===0||(e.collisionFilterGroup&this.collisionFilterMask)===0)return;const r=Pb,a=Ib;for(let o=0,s=e.shapes.length;o<s;o++){const l=e.shapes[o];if(!(i&&!l.collisionResponse)&&(e.quaternion.mult(e.shapeOrientations[o],a),e.quaternion.vmult(e.shapeOffsets[o],r),r.vadd(e.position,r),this.intersectShape(l,a,r,e),this.result.shouldStop))break}}intersectBodies(e,t){t&&(this.result=t,this.updateDirection());for(let i=0,r=e.length;!this.result.shouldStop&&i<r;i++)this.intersectBody(e[i])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(e,t,i,r){const a=this.from;if(Xb(a,this.direction,i)>e.boundingSphereRadius)return;const o=this[e.type];o&&o.call(this,e,t,i,r,e)}_intersectBox(e,t,i,r,a){return this._intersectConvex(e.convexPolyhedronRepresentation,t,i,r,a)}_intersectPlane(e,t,i,r,a){const o=this.from,s=this.to,l=this.direction,c=new M(0,0,1);t.vmult(c,c);const u=new M;o.vsub(i,u);const d=u.dot(c);s.vsub(i,u);const h=u.dot(c);if(d*h>0||o.distanceTo(s)<d)return;const m=c.dot(l);if(Math.abs(m)<this.precision)return;const g=new M,f=new M,p=new M;o.vsub(i,g);const v=-c.dot(g)/m;l.scale(v,f),o.vadd(f,p),this.reportIntersection(c,p,a,r,-1)}getAABB(e){const{lowerBound:t,upperBound:i}=e,r=this.to,a=this.from;t.x=Math.min(r.x,a.x),t.y=Math.min(r.y,a.y),t.z=Math.min(r.z,a.z),i.x=Math.max(r.x,a.x),i.y=Math.max(r.y,a.y),i.z=Math.max(r.z,a.z)}_intersectHeightfield(e,t,i,r,a){e.data,e.elementSize;const o=Fb;o.from.copy(this.from),o.to.copy(this.to),it.pointToLocalFrame(i,t,o.from,o.from),it.pointToLocalFrame(i,t,o.to,o.to),o.updateDirection();const s=zb;let l,c,u,d;l=c=0,u=d=e.data.length-1;const h=new di;o.getAABB(h),e.getIndexOfPosition(h.lowerBound.x,h.lowerBound.y,s,!0),l=Math.max(l,s[0]),c=Math.max(c,s[1]),e.getIndexOfPosition(h.upperBound.x,h.upperBound.y,s,!0),u=Math.min(u,s[0]+1),d=Math.min(d,s[1]+1);for(let m=l;m<u;m++)for(let g=c;g<d;g++){if(this.result.shouldStop)return;if(e.getAabbAtIndex(m,g,h),!!h.overlapsRay(o)){if(e.getConvexTrianglePillar(m,g,!1),it.pointToWorldFrame(i,t,e.pillarOffset,as),this._intersectConvex(e.pillarConvex,t,as,r,a,Uc),this.result.shouldStop)return;e.getConvexTrianglePillar(m,g,!0),it.pointToWorldFrame(i,t,e.pillarOffset,as),this._intersectConvex(e.pillarConvex,t,as,r,a,Uc)}}}_intersectSphere(e,t,i,r,a){const o=this.from,s=this.to,l=e.radius,c=(s.x-o.x)**2+(s.y-o.y)**2+(s.z-o.z)**2,u=2*((s.x-o.x)*(o.x-i.x)+(s.y-o.y)*(o.y-i.y)+(s.z-o.z)*(o.z-i.z)),d=(o.x-i.x)**2+(o.y-i.y)**2+(o.z-i.z)**2-l**2,h=u**2-4*c*d,m=Nb,g=kb;if(!(h<0))if(h===0)o.lerp(s,h,m),m.vsub(i,g),g.normalize(),this.reportIntersection(g,m,a,r,-1);else{const f=(-u-Math.sqrt(h))/(2*c),p=(-u+Math.sqrt(h))/(2*c);if(f>=0&&f<=1&&(o.lerp(s,f,m),m.vsub(i,g),g.normalize(),this.reportIntersection(g,m,a,r,-1)),this.result.shouldStop)return;p>=0&&p<=1&&(o.lerp(s,p,m),m.vsub(i,g),g.normalize(),this.reportIntersection(g,m,a,r,-1))}}_intersectConvex(e,t,i,r,a,o){const s=Ob,l=Hc,c=o&&o.faceList||null,u=e.faces,d=e.vertices,h=e.faceNormals,m=this.direction,g=this.from,f=this.to,p=g.distanceTo(f),v=c?c.length:u.length,_=this.result;for(let y=0;!_.shouldStop&&y<v;y++){const x=c?c[y]:y,w=u[x],S=h[x],T=t,b=i;l.copy(d[w[0]]),T.vmult(l,l),l.vadd(b,l),l.vsub(g,l),T.vmult(S,s);const E=m.dot(s);if(Math.abs(E)<this.precision)continue;const D=s.dot(l)/E;if(!(D<0)){m.scale(D,Kt),Kt.vadd(g,Kt),Ci.copy(d[w[0]]),T.vmult(Ci,Ci),b.vadd(Ci,Ci);for(let I=1;!_.shouldStop&&I<w.length-1;I++){Fi.copy(d[w[I]]),zi.copy(d[w[I+1]]),T.vmult(Fi,Fi),T.vmult(zi,zi),b.vadd(Fi,Fi),b.vadd(zi,zi);const N=Kt.distanceTo(g);!(yt.pointInTriangle(Kt,Ci,Fi,zi)||yt.pointInTriangle(Kt,Fi,Ci,zi))||N>p||this.reportIntersection(s,Kt,a,r,x)}}}}_intersectTrimesh(e,t,i,r,a,o){const s=Bb,l=qb,c=jb,u=Hc,d=Ub,h=Hb,m=Gb,g=Vb,f=Wb,p=e.indices;e.vertices;const v=this.from,_=this.to,y=this.direction;c.position.copy(i),c.quaternion.copy(t),it.vectorToLocalFrame(i,t,y,d),it.pointToLocalFrame(i,t,v,h),it.pointToLocalFrame(i,t,_,m),m.x*=e.scale.x,m.y*=e.scale.y,m.z*=e.scale.z,h.x*=e.scale.x,h.y*=e.scale.y,h.z*=e.scale.z,m.vsub(h,d),d.normalize();const x=h.distanceSquared(m);e.tree.rayQuery(this,c,l);for(let w=0,S=l.length;!this.result.shouldStop&&w!==S;w++){const T=l[w];e.getNormal(T,s),e.getVertex(p[T*3],Ci),Ci.vsub(h,u);const b=d.dot(s),E=s.dot(u)/b;if(E<0)continue;d.scale(E,Kt),Kt.vadd(h,Kt),e.getVertex(p[T*3+1],Fi),e.getVertex(p[T*3+2],zi);const D=Kt.distanceSquared(h);!(yt.pointInTriangle(Kt,Fi,Ci,zi)||yt.pointInTriangle(Kt,Ci,Fi,zi))||D>x||(it.vectorToWorldFrame(t,s,f),it.pointToWorldFrame(i,t,Kt,g),this.reportIntersection(f,g,a,r,T))}l.length=0}reportIntersection(e,t,i,r,a){const o=this.from,s=this.to,l=o.distanceTo(t),c=this.result;if(!(this.skipBackfaces&&e.dot(this.direction)>0))switch(c.hitFaceIndex=typeof a<"u"?a:-1,this.mode){case yt.ALL:this.hasHit=!0,c.set(o,s,e,t,i,r,l),c.hasHit=!0,this.callback(c);break;case yt.CLOSEST:(l<c.distance||!c.hasHit)&&(this.hasHit=!0,c.hasHit=!0,c.set(o,s,e,t,i,r,l));break;case yt.ANY:this.hasHit=!0,c.hasHit=!0,c.set(o,s,e,t,i,r,l),c.shouldStop=!0;break}}static pointInTriangle(e,t,i,r){r.vsub(t,Wr),i.vsub(t,na),e.vsub(t,Fo);const a=Wr.dot(Wr),o=Wr.dot(na),s=Wr.dot(Fo),l=na.dot(na),c=na.dot(Fo);let u,d;return(u=l*s-o*c)>=0&&(d=a*c-o*s)>=0&&u+d<a*l-o*o}}yt.CLOSEST=Ml.CLOSEST;yt.ANY=Ml.ANY;yt.ALL=Ml.ALL;const Bc=new di,Io=[],na=new M,Fo=new M,Pb=new M,Ib=new bt,Kt=new M,Ci=new M,Fi=new M,zi=new M;new M;new Ms;const Uc={faceList:[0]},as=new M,Fb=new yt,zb=[],Nb=new M,kb=new M,Ob=new M;new M;new M;const Hc=new M,Bb=new M,Ub=new M,Hb=new M,Gb=new M,Wb=new M,Vb=new M;new di;const qb=[],jb=new it,Wr=new M,ss=new M;function Xb(n,e,t){t.vsub(n,Wr);const i=Wr.dot(e);return e.scale(i,ss),ss.vadd(n,ss),t.distanceTo(ss)}class Yb{static defaults(e,t){e===void 0&&(e={});for(let i in t)i in e||(e[i]=t[i]);return e}}class Gc{constructor(){this.spatial=new M,this.rotational=new M}multiplyElement(e){return e.spatial.dot(this.spatial)+e.rotational.dot(this.rotational)}multiplyVectors(e,t){return e.dot(this.spatial)+t.dot(this.rotational)}}class Fa{constructor(e,t,i,r){i===void 0&&(i=-1e6),r===void 0&&(r=1e6),this.id=Fa.idCounter++,this.minForce=i,this.maxForce=r,this.bi=e,this.bj=t,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new Gc,this.jacobianElementB=new Gc,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(e,t,i){const r=t,a=e,o=i;this.a=4/(o*(1+4*r)),this.b=4*r/(1+4*r),this.eps=4/(o*o*a*(1+4*r))}computeB(e,t,i){const r=this.computeGW(),a=this.computeGq(),o=this.computeGiMf();return-a*e-r*t-o*i}computeGq(){const e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,r=this.bj,a=i.position,o=r.position;return e.spatial.dot(a)+t.spatial.dot(o)}computeGW(){const e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,r=this.bj,a=i.velocity,o=r.velocity,s=i.angularVelocity,l=r.angularVelocity;return e.multiplyVectors(a,s)+t.multiplyVectors(o,l)}computeGWlambda(){const e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,r=this.bj,a=i.vlambda,o=r.vlambda,s=i.wlambda,l=r.wlambda;return e.multiplyVectors(a,s)+t.multiplyVectors(o,l)}computeGiMf(){const e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,r=this.bj,a=i.force,o=i.torque,s=r.force,l=r.torque,c=i.invMassSolve,u=r.invMassSolve;return a.scale(c,Wc),s.scale(u,Vc),i.invInertiaWorldSolve.vmult(o,qc),r.invInertiaWorldSolve.vmult(l,jc),e.multiplyVectors(Wc,qc)+t.multiplyVectors(Vc,jc)}computeGiMGt(){const e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,r=this.bj,a=i.invMassSolve,o=r.invMassSolve,s=i.invInertiaWorldSolve,l=r.invInertiaWorldSolve;let c=a+o;return s.vmult(e.rotational,os),c+=os.dot(e.rotational),l.vmult(t.rotational,os),c+=os.dot(t.rotational),c}addToWlambda(e){const t=this.jacobianElementA,i=this.jacobianElementB,r=this.bi,a=this.bj,o=Zb;r.vlambda.addScaledVector(r.invMassSolve*e,t.spatial,r.vlambda),a.vlambda.addScaledVector(a.invMassSolve*e,i.spatial,a.vlambda),r.invInertiaWorldSolve.vmult(t.rotational,o),r.wlambda.addScaledVector(e,o,r.wlambda),a.invInertiaWorldSolve.vmult(i.rotational,o),a.wlambda.addScaledVector(e,o,a.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Fa.idCounter=0;const Wc=new M,Vc=new M,qc=new M,jc=new M,os=new M,Zb=new M;class $b extends Fa{constructor(e,t,i){i===void 0&&(i=1e6),super(e,t,0,i),this.restitution=0,this.ri=new M,this.rj=new M,this.ni=new M}computeB(e){const t=this.a,i=this.b,r=this.bi,a=this.bj,o=this.ri,s=this.rj,l=Jb,c=Kb,u=r.velocity,d=r.angularVelocity;r.force,r.torque;const h=a.velocity,m=a.angularVelocity;a.force,a.torque;const g=Qb,f=this.jacobianElementA,p=this.jacobianElementB,v=this.ni;o.cross(v,l),s.cross(v,c),v.negate(f.spatial),l.negate(f.rotational),p.spatial.copy(v),p.rotational.copy(c),g.copy(a.position),g.vadd(s,g),g.vsub(r.position,g),g.vsub(o,g);const _=v.dot(g),y=this.restitution+1,x=y*h.dot(v)-y*u.dot(v)+m.dot(c)-d.dot(l),w=this.computeGiMf();return-_*t-x*i-e*w}getImpactVelocityAlongNormal(){const e=e1,t=t1,i=i1,r=r1,a=n1;return this.bi.position.vadd(this.ri,i),this.bj.position.vadd(this.rj,r),this.bi.getVelocityAtWorldPoint(i,e),this.bj.getVelocityAtWorldPoint(r,t),e.vsub(t,a),this.ni.dot(a)}}const Jb=new M,Kb=new M,Qb=new M,e1=new M,t1=new M,i1=new M,r1=new M,n1=new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;class Xc extends Fa{constructor(e,t,i){super(e,t,-i,i),this.ri=new M,this.rj=new M,this.t=new M}computeB(e){this.a;const t=this.b;this.bi,this.bj;const i=this.ri,r=this.rj,a=a1,o=s1,s=this.t;i.cross(s,a),r.cross(s,o);const l=this.jacobianElementA,c=this.jacobianElementB;s.negate(l.spatial),a.negate(l.rotational),c.spatial.copy(s),c.rotational.copy(o);const u=this.computeGW(),d=this.computeGiMf();return-u*t-e*d}}const a1=new M,s1=new M;class Kr{constructor(e,t,i){i=Yb.defaults(i,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=Kr.idCounter++,this.materials=[e,t],this.friction=i.friction,this.restitution=i.restitution,this.contactEquationStiffness=i.contactEquationStiffness,this.contactEquationRelaxation=i.contactEquationRelaxation,this.frictionEquationStiffness=i.frictionEquationStiffness,this.frictionEquationRelaxation=i.frictionEquationRelaxation}}Kr.idCounter=0;class Qr{constructor(e){e===void 0&&(e={});let t="";typeof e=="string"&&(t=e,e={}),this.name=t,this.id=Qr.idCounter++,this.friction=typeof e.friction<"u"?e.friction:-1,this.restitution=typeof e.restitution<"u"?e.restitution:-1}}Qr.idCounter=0;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new yt;new M;new M;new M;new M(1,0,0),new M(0,1,0),new M(0,0,1);new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;class o1 extends Jr{constructor(e,t,i,r){if(e===void 0&&(e=1),t===void 0&&(t=1),i===void 0&&(i=1),r===void 0&&(r=8),e<0)throw new Error("The cylinder radiusTop cannot be negative.");if(t<0)throw new Error("The cylinder radiusBottom cannot be negative.");const a=r,o=[],s=[],l=[],c=[],u=[],d=Math.cos,h=Math.sin;o.push(new M(-t*h(0),-i*.5,t*d(0))),c.push(0),o.push(new M(-e*h(0),i*.5,e*d(0))),u.push(1);for(let g=0;g<a;g++){const f=2*Math.PI/a*(g+1),p=2*Math.PI/a*(g+.5);g<a-1?(o.push(new M(-t*h(f),-i*.5,t*d(f))),c.push(2*g+2),o.push(new M(-e*h(f),i*.5,e*d(f))),u.push(2*g+3),l.push([2*g,2*g+1,2*g+3,2*g+2])):l.push([2*g,2*g+1,1,0]),(a%2===1||g<a/2)&&s.push(new M(-h(p),0,d(p)))}l.push(c),s.push(new M(0,1,0));const m=[];for(let g=0;g<u.length;g++)m.push(u[u.length-g-1]);l.push(m),super({vertices:o,faces:l,axes:s}),this.type=ge.types.CYLINDER,this.radiusTop=e,this.radiusBottom=t,this.height=i,this.numSegments=r}}class aa extends ge{constructor(){super({type:ge.types.PLANE}),this.worldNormal=new M,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(e){const t=this.worldNormal;t.set(0,0,1),e.vmult(t,t),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(e,t){return t===void 0&&(t=new M),t}volume(){return Number.MAX_VALUE}calculateWorldAABB(e,t,i,r){Ki.set(0,0,1),t.vmult(Ki,Ki);const a=Number.MAX_VALUE;i.set(-a,-a,-a),r.set(a,a,a),Ki.x===1?r.x=e.x:Ki.x===-1&&(i.x=e.x),Ki.y===1?r.y=e.y:Ki.y===-1&&(i.y=e.y),Ki.z===1?r.z=e.z:Ki.z===-1&&(i.z=e.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const Ki=new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new M;new di;new M;new di;new M;new M;new M;new M;new M;new M;new M;new di;new M;new it;new di;class l1{constructor(){this.equations=[]}solve(e,t){return 0}addEquation(e){e.enabled&&!e.bi.isTrigger&&!e.bj.isTrigger&&this.equations.push(e)}removeEquation(e){const t=this.equations,i=t.indexOf(e);i!==-1&&t.splice(i,1)}removeAllEquations(){this.equations.length=0}}class c1 extends l1{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(e,t){let i=0;const r=this.iterations,a=this.tolerance*this.tolerance,o=this.equations,s=o.length,l=t.bodies,c=l.length,u=e;let d,h,m,g,f,p;if(s!==0)for(let x=0;x!==c;x++)l[x].updateSolveMassProperties();const v=h1,_=d1,y=u1;v.length=s,_.length=s,y.length=s;for(let x=0;x!==s;x++){const w=o[x];y[x]=0,_[x]=w.computeB(u),v[x]=1/w.computeC()}if(s!==0){for(let S=0;S!==c;S++){const T=l[S],b=T.vlambda,E=T.wlambda;b.set(0,0,0),E.set(0,0,0)}for(i=0;i!==r;i++){g=0;for(let S=0;S!==s;S++){const T=o[S];d=_[S],h=v[S],p=y[S],f=T.computeGWlambda(),m=h*(d-f-T.eps*p),p+m<T.minForce?m=T.minForce-p:p+m>T.maxForce&&(m=T.maxForce-p),y[S]+=m,g+=m>0?m:-m,T.addToWlambda(m)}if(g*g<a)break}for(let S=0;S!==c;S++){const T=l[S],b=T.velocity,E=T.angularVelocity;T.vlambda.vmul(T.linearFactor,T.vlambda),b.vadd(T.vlambda,b),T.wlambda.vmul(T.angularFactor,T.wlambda),E.vadd(T.wlambda,E)}let x=o.length;const w=1/u;for(;x--;)o[x].multiplier=y[x]*w}return i}}const u1=[],h1=[],d1=[];class p1{constructor(){this.objects=[],this.type=Object}release(){const e=arguments.length;for(let t=0;t!==e;t++)this.objects.push(t<0||arguments.length<=t?void 0:arguments[t]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(e){const t=this.objects;for(;t.length>e;)t.pop();for(;t.length<e;)t.push(this.constructObject());return this}}class f1 extends p1{constructor(){super(...arguments),this.type=M}constructObject(){return new M}}const ct={sphereSphere:ge.types.SPHERE,spherePlane:ge.types.SPHERE|ge.types.PLANE,boxBox:ge.types.BOX|ge.types.BOX,sphereBox:ge.types.SPHERE|ge.types.BOX,planeBox:ge.types.PLANE|ge.types.BOX,convexConvex:ge.types.CONVEXPOLYHEDRON,sphereConvex:ge.types.SPHERE|ge.types.CONVEXPOLYHEDRON,planeConvex:ge.types.PLANE|ge.types.CONVEXPOLYHEDRON,boxConvex:ge.types.BOX|ge.types.CONVEXPOLYHEDRON,sphereHeightfield:ge.types.SPHERE|ge.types.HEIGHTFIELD,boxHeightfield:ge.types.BOX|ge.types.HEIGHTFIELD,convexHeightfield:ge.types.CONVEXPOLYHEDRON|ge.types.HEIGHTFIELD,sphereParticle:ge.types.PARTICLE|ge.types.SPHERE,planeParticle:ge.types.PLANE|ge.types.PARTICLE,boxParticle:ge.types.BOX|ge.types.PARTICLE,convexParticle:ge.types.PARTICLE|ge.types.CONVEXPOLYHEDRON,cylinderCylinder:ge.types.CYLINDER,sphereCylinder:ge.types.SPHERE|ge.types.CYLINDER,planeCylinder:ge.types.PLANE|ge.types.CYLINDER,boxCylinder:ge.types.BOX|ge.types.CYLINDER,convexCylinder:ge.types.CONVEXPOLYHEDRON|ge.types.CYLINDER,heightfieldCylinder:ge.types.HEIGHTFIELD|ge.types.CYLINDER,particleCylinder:ge.types.PARTICLE|ge.types.CYLINDER,sphereTrimesh:ge.types.SPHERE|ge.types.TRIMESH,planeTrimesh:ge.types.PLANE|ge.types.TRIMESH};class m1{get[ct.sphereSphere](){return this.sphereSphere}get[ct.spherePlane](){return this.spherePlane}get[ct.boxBox](){return this.boxBox}get[ct.sphereBox](){return this.sphereBox}get[ct.planeBox](){return this.planeBox}get[ct.convexConvex](){return this.convexConvex}get[ct.sphereConvex](){return this.sphereConvex}get[ct.planeConvex](){return this.planeConvex}get[ct.boxConvex](){return this.boxConvex}get[ct.sphereHeightfield](){return this.sphereHeightfield}get[ct.boxHeightfield](){return this.boxHeightfield}get[ct.convexHeightfield](){return this.convexHeightfield}get[ct.sphereParticle](){return this.sphereParticle}get[ct.planeParticle](){return this.planeParticle}get[ct.boxParticle](){return this.boxParticle}get[ct.convexParticle](){return this.convexParticle}get[ct.cylinderCylinder](){return this.convexConvex}get[ct.sphereCylinder](){return this.sphereConvex}get[ct.planeCylinder](){return this.planeConvex}get[ct.boxCylinder](){return this.boxConvex}get[ct.convexCylinder](){return this.convexConvex}get[ct.heightfieldCylinder](){return this.heightfieldCylinder}get[ct.particleCylinder](){return this.particleCylinder}get[ct.sphereTrimesh](){return this.sphereTrimesh}get[ct.planeTrimesh](){return this.planeTrimesh}constructor(e){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new f1,this.world=e,this.currentContactMaterial=e.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(e,t,i,r,a,o){let s;this.contactPointPool.length?(s=this.contactPointPool.pop(),s.bi=e,s.bj=t):s=new $b(e,t),s.enabled=e.collisionResponse&&t.collisionResponse&&i.collisionResponse&&r.collisionResponse;const l=this.currentContactMaterial;s.restitution=l.restitution,s.setSpookParams(l.contactEquationStiffness,l.contactEquationRelaxation,this.world.dt);const c=i.material||e.material,u=r.material||t.material;return c&&u&&c.restitution>=0&&u.restitution>=0&&(s.restitution=c.restitution*u.restitution),s.si=a||i,s.sj=o||r,s}createFrictionEquationsFromContact(e,t){const i=e.bi,r=e.bj,a=e.si,o=e.sj,s=this.world,l=this.currentContactMaterial;let c=l.friction;const u=a.material||i.material,d=o.material||r.material;if(u&&d&&u.friction>=0&&d.friction>=0&&(c=u.friction*d.friction),c>0){const h=c*(s.frictionGravity||s.gravity).length();let m=i.invMass+r.invMass;m>0&&(m=1/m);const g=this.frictionEquationPool,f=g.length?g.pop():new Xc(i,r,h*m),p=g.length?g.pop():new Xc(i,r,h*m);return f.bi=p.bi=i,f.bj=p.bj=r,f.minForce=p.minForce=-h*m,f.maxForce=p.maxForce=h*m,f.ri.copy(e.ri),f.rj.copy(e.rj),p.ri.copy(e.ri),p.rj.copy(e.rj),e.ni.tangents(f.t,p.t),f.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,s.dt),p.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,s.dt),f.enabled=p.enabled=e.enabled,t.push(f,p),!0}return!1}createFrictionFromAverage(e){let t=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(t,this.frictionResult)||e===1)return;const i=this.frictionResult[this.frictionResult.length-2],r=this.frictionResult[this.frictionResult.length-1];Or.setZero(),Cn.setZero(),Ln.setZero();const a=t.bi;t.bj;for(let s=0;s!==e;s++)t=this.result[this.result.length-1-s],t.bi!==a?(Or.vadd(t.ni,Or),Cn.vadd(t.ri,Cn),Ln.vadd(t.rj,Ln)):(Or.vsub(t.ni,Or),Cn.vadd(t.rj,Cn),Ln.vadd(t.ri,Ln));const o=1/e;Cn.scale(o,i.ri),Ln.scale(o,i.rj),r.ri.copy(i.ri),r.rj.copy(i.rj),Or.normalize(),Or.tangents(i.t,r.t)}getContacts(e,t,i,r,a,o,s){this.contactPointPool=a,this.frictionEquationPool=s,this.result=r,this.frictionResult=o;const l=_1,c=x1,u=g1,d=v1;for(let h=0,m=e.length;h!==m;h++){const g=e[h],f=t[h];let p=null;g.material&&f.material&&(p=i.getContactMaterial(g.material,f.material)||null);const v=g.type&ue.KINEMATIC&&f.type&ue.STATIC||g.type&ue.STATIC&&f.type&ue.KINEMATIC||g.type&ue.KINEMATIC&&f.type&ue.KINEMATIC;for(let _=0;_<g.shapes.length;_++){g.quaternion.mult(g.shapeOrientations[_],l),g.quaternion.vmult(g.shapeOffsets[_],u),u.vadd(g.position,u);const y=g.shapes[_];for(let x=0;x<f.shapes.length;x++){f.quaternion.mult(f.shapeOrientations[x],c),f.quaternion.vmult(f.shapeOffsets[x],d),d.vadd(f.position,d);const w=f.shapes[x];if(!(y.collisionFilterMask&w.collisionFilterGroup&&w.collisionFilterMask&y.collisionFilterGroup)||u.distanceTo(d)>y.boundingSphereRadius+w.boundingSphereRadius)continue;let S=null;y.material&&w.material&&(S=i.getContactMaterial(y.material,w.material)||null),this.currentContactMaterial=S||p||i.defaultContactMaterial;const T=y.type|w.type,b=this[T];if(b){let E=!1;y.type<w.type?E=b.call(this,y,w,u,d,l,c,g,f,y,w,v):E=b.call(this,w,y,d,u,c,l,f,g,y,w,v),E&&v&&(i.shapeOverlapKeeper.set(y.id,w.id),i.bodyOverlapKeeper.set(g.id,f.id))}}}}}sphereSphere(e,t,i,r,a,o,s,l,c,u,d){if(d)return i.distanceSquared(r)<(e.radius+t.radius)**2;const h=this.createContactEquation(s,l,e,t,c,u);r.vsub(i,h.ni),h.ni.normalize(),h.ri.copy(h.ni),h.rj.copy(h.ni),h.ri.scale(e.radius,h.ri),h.rj.scale(-t.radius,h.rj),h.ri.vadd(i,h.ri),h.ri.vsub(s.position,h.ri),h.rj.vadd(r,h.rj),h.rj.vsub(l.position,h.rj),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}spherePlane(e,t,i,r,a,o,s,l,c,u,d){const h=this.createContactEquation(s,l,e,t,c,u);if(h.ni.set(0,0,1),o.vmult(h.ni,h.ni),h.ni.negate(h.ni),h.ni.normalize(),h.ni.scale(e.radius,h.ri),i.vsub(r,ls),h.ni.scale(h.ni.dot(ls),Yc),ls.vsub(Yc,h.rj),-ls.dot(h.ni)<=e.radius){if(d)return!0;const m=h.ri,g=h.rj;m.vadd(i,m),m.vsub(s.position,m),g.vadd(r,g),g.vsub(l.position,g),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}}boxBox(e,t,i,r,a,o,s,l,c,u,d){return e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t.convexPolyhedronRepresentation,i,r,a,o,s,l,e,t,d)}sphereBox(e,t,i,r,a,o,s,l,c,u,d){const h=this.v3pool,m=q1;i.vsub(r,cs),t.getSideNormals(m,o);const g=e.radius;let f=!1;const p=X1,v=Y1,_=Z1;let y=null,x=0,w=0,S=0,T=null;for(let F=0,H=m.length;F!==H&&f===!1;F++){const X=G1;X.copy(m[F]);const k=X.length();X.normalize();const V=cs.dot(X);if(V<k+g&&V>0){const ie=W1,U=V1;ie.copy(m[(F+1)%3]),U.copy(m[(F+2)%3]);const te=ie.length(),oe=U.length();ie.normalize(),U.normalize();const Re=cs.dot(ie),Q=cs.dot(U);if(Re<te&&Re>-te&&Q<oe&&Q>-oe){const Be=Math.abs(V-k-g);if((T===null||Be<T)&&(T=Be,w=Re,S=Q,y=k,p.copy(X),v.copy(ie),_.copy(U),x++,d))return!0}}}if(x){f=!0;const F=this.createContactEquation(s,l,e,t,c,u);p.scale(-g,F.ri),F.ni.copy(p),F.ni.negate(F.ni),p.scale(y,p),v.scale(w,v),p.vadd(v,p),_.scale(S,_),p.vadd(_,F.rj),F.ri.vadd(i,F.ri),F.ri.vsub(s.position,F.ri),F.rj.vadd(r,F.rj),F.rj.vsub(l.position,F.rj),this.result.push(F),this.createFrictionEquationsFromContact(F,this.frictionResult)}let b=h.get();const E=j1;for(let F=0;F!==2&&!f;F++)for(let H=0;H!==2&&!f;H++)for(let X=0;X!==2&&!f;X++)if(b.set(0,0,0),F?b.vadd(m[0],b):b.vsub(m[0],b),H?b.vadd(m[1],b):b.vsub(m[1],b),X?b.vadd(m[2],b):b.vsub(m[2],b),r.vadd(b,E),E.vsub(i,E),E.lengthSquared()<g*g){if(d)return!0;f=!0;const k=this.createContactEquation(s,l,e,t,c,u);k.ri.copy(E),k.ri.normalize(),k.ni.copy(k.ri),k.ri.scale(g,k.ri),k.rj.copy(b),k.ri.vadd(i,k.ri),k.ri.vsub(s.position,k.ri),k.rj.vadd(r,k.rj),k.rj.vsub(l.position,k.rj),this.result.push(k),this.createFrictionEquationsFromContact(k,this.frictionResult)}h.release(b),b=null;const D=h.get(),I=h.get(),N=h.get(),z=h.get(),L=h.get(),P=m.length;for(let F=0;F!==P&&!f;F++)for(let H=0;H!==P&&!f;H++)if(F%3!==H%3){m[H].cross(m[F],D),D.normalize(),m[F].vadd(m[H],I),N.copy(i),N.vsub(I,N),N.vsub(r,N);const X=N.dot(D);D.scale(X,z);let k=0;for(;k===F%3||k===H%3;)k++;L.copy(i),L.vsub(z,L),L.vsub(I,L),L.vsub(r,L);const V=Math.abs(X),ie=L.length();if(V<m[k].length()&&ie<g){if(d)return!0;f=!0;const U=this.createContactEquation(s,l,e,t,c,u);I.vadd(z,U.rj),U.rj.copy(U.rj),L.negate(U.ni),U.ni.normalize(),U.ri.copy(U.rj),U.ri.vadd(r,U.ri),U.ri.vsub(i,U.ri),U.ri.normalize(),U.ri.scale(g,U.ri),U.ri.vadd(i,U.ri),U.ri.vsub(s.position,U.ri),U.rj.vadd(r,U.rj),U.rj.vsub(l.position,U.rj),this.result.push(U),this.createFrictionEquationsFromContact(U,this.frictionResult)}}h.release(D,I,N,z,L)}planeBox(e,t,i,r,a,o,s,l,c,u,d){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,t.convexPolyhedronRepresentation.id=t.id,this.planeConvex(e,t.convexPolyhedronRepresentation,i,r,a,o,s,l,e,t,d)}convexConvex(e,t,i,r,a,o,s,l,c,u,d,h,m){const g=uw;if(!(i.distanceTo(r)>e.boundingSphereRadius+t.boundingSphereRadius)&&e.findSeparatingAxis(t,i,a,r,o,g,h,m)){const f=[],p=hw;e.clipAgainstHull(i,a,t,r,o,g,-100,100,f);let v=0;for(let _=0;_!==f.length;_++){if(d)return!0;const y=this.createContactEquation(s,l,e,t,c,u),x=y.ri,w=y.rj;g.negate(y.ni),f[_].normal.negate(p),p.scale(f[_].depth,p),f[_].point.vadd(p,x),w.copy(f[_].point),x.vsub(i,x),w.vsub(r,w),x.vadd(i,x),x.vsub(s.position,x),w.vadd(r,w),w.vsub(l.position,w),this.result.push(y),v++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(y,this.frictionResult)}this.enableFrictionReduction&&v&&this.createFrictionFromAverage(v)}}sphereConvex(e,t,i,r,a,o,s,l,c,u,d){const h=this.v3pool;i.vsub(r,$1);const m=t.faceNormals,g=t.faces,f=t.vertices,p=e.radius;let v=!1;for(let _=0;_!==f.length;_++){const y=f[_],x=ew;o.vmult(y,x),r.vadd(x,x);const w=Q1;if(x.vsub(i,w),w.lengthSquared()<p*p){if(d)return!0;v=!0;const S=this.createContactEquation(s,l,e,t,c,u);S.ri.copy(w),S.ri.normalize(),S.ni.copy(S.ri),S.ri.scale(p,S.ri),x.vsub(r,S.rj),S.ri.vadd(i,S.ri),S.ri.vsub(s.position,S.ri),S.rj.vadd(r,S.rj),S.rj.vsub(l.position,S.rj),this.result.push(S),this.createFrictionEquationsFromContact(S,this.frictionResult);return}}for(let _=0,y=g.length;_!==y&&v===!1;_++){const x=m[_],w=g[_],S=tw;o.vmult(x,S);const T=iw;o.vmult(f[w[0]],T),T.vadd(r,T);const b=rw;S.scale(-p,b),i.vadd(b,b);const E=nw;b.vsub(T,E);const D=E.dot(S),I=aw;if(i.vsub(T,I),D<0&&I.dot(S)>0){const N=[];for(let z=0,L=w.length;z!==L;z++){const P=h.get();o.vmult(f[w[z]],P),r.vadd(P,P),N.push(P)}if(H1(N,S,i)){if(d)return!0;v=!0;const z=this.createContactEquation(s,l,e,t,c,u);S.scale(-p,z.ri),S.negate(z.ni);const L=h.get();S.scale(-D,L);const P=h.get();S.scale(-p,P),i.vsub(r,z.rj),z.rj.vadd(P,z.rj),z.rj.vadd(L,z.rj),z.rj.vadd(r,z.rj),z.rj.vsub(l.position,z.rj),z.ri.vadd(i,z.ri),z.ri.vsub(s.position,z.ri),h.release(L),h.release(P),this.result.push(z),this.createFrictionEquationsFromContact(z,this.frictionResult);for(let F=0,H=N.length;F!==H;F++)h.release(N[F]);return}else for(let z=0;z!==w.length;z++){const L=h.get(),P=h.get();o.vmult(f[w[(z+1)%w.length]],L),o.vmult(f[w[(z+2)%w.length]],P),r.vadd(L,L),r.vadd(P,P);const F=J1;P.vsub(L,F);const H=K1;F.unit(H);const X=h.get(),k=h.get();i.vsub(L,k);const V=k.dot(H);H.scale(V,X),X.vadd(L,X);const ie=h.get();if(X.vsub(i,ie),V>0&&V*V<F.lengthSquared()&&ie.lengthSquared()<p*p){if(d)return!0;const U=this.createContactEquation(s,l,e,t,c,u);X.vsub(r,U.rj),X.vsub(i,U.ni),U.ni.normalize(),U.ni.scale(p,U.ri),U.rj.vadd(r,U.rj),U.rj.vsub(l.position,U.rj),U.ri.vadd(i,U.ri),U.ri.vsub(s.position,U.ri),this.result.push(U),this.createFrictionEquationsFromContact(U,this.frictionResult);for(let te=0,oe=N.length;te!==oe;te++)h.release(N[te]);h.release(L),h.release(P),h.release(X),h.release(ie),h.release(k);return}h.release(L),h.release(P),h.release(X),h.release(ie),h.release(k)}for(let z=0,L=N.length;z!==L;z++)h.release(N[z])}}}planeConvex(e,t,i,r,a,o,s,l,c,u,d){const h=sw,m=ow;m.set(0,0,1),a.vmult(m,m);let g=0;const f=lw;for(let p=0;p!==t.vertices.length;p++)if(h.copy(t.vertices[p]),o.vmult(h,h),r.vadd(h,h),h.vsub(i,f),m.dot(f)<=0){if(d)return!0;const v=this.createContactEquation(s,l,e,t,c,u),_=cw;m.scale(m.dot(f),_),h.vsub(_,_),_.vsub(i,v.ri),v.ni.copy(m),h.vsub(r,v.rj),v.ri.vadd(i,v.ri),v.ri.vsub(s.position,v.ri),v.rj.vadd(r,v.rj),v.rj.vsub(l.position,v.rj),this.result.push(v),g++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&g&&this.createFrictionFromAverage(g)}boxConvex(e,t,i,r,a,o,s,l,c,u,d){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t,i,r,a,o,s,l,e,t,d)}sphereHeightfield(e,t,i,r,a,o,s,l,c,u,d){const h=t.data,m=e.radius,g=t.elementSize,f=Mw,p=ww;it.pointToLocalFrame(r,o,i,p);let v=Math.floor((p.x-m)/g)-1,_=Math.ceil((p.x+m)/g)+1,y=Math.floor((p.y-m)/g)-1,x=Math.ceil((p.y+m)/g)+1;if(_<0||x<0||v>h.length||y>h[0].length)return;v<0&&(v=0),_<0&&(_=0),y<0&&(y=0),x<0&&(x=0),v>=h.length&&(v=h.length-1),_>=h.length&&(_=h.length-1),x>=h[0].length&&(x=h[0].length-1),y>=h[0].length&&(y=h[0].length-1);const w=[];t.getRectMinMax(v,y,_,x,w);const S=w[0],T=w[1];if(p.z-m>T||p.z+m<S)return;const b=this.result;for(let E=v;E<_;E++)for(let D=y;D<x;D++){const I=b.length;let N=!1;if(t.getConvexTrianglePillar(E,D,!1),it.pointToWorldFrame(r,o,t.pillarOffset,f),i.distanceTo(f)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(N=this.sphereConvex(e,t.pillarConvex,i,f,a,o,s,l,e,t,d)),d&&N||(t.getConvexTrianglePillar(E,D,!0),it.pointToWorldFrame(r,o,t.pillarOffset,f),i.distanceTo(f)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(N=this.sphereConvex(e,t.pillarConvex,i,f,a,o,s,l,e,t,d)),d&&N))return!0;if(b.length-I>2)return}}boxHeightfield(e,t,i,r,a,o,s,l,c,u,d){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexHeightfield(e.convexPolyhedronRepresentation,t,i,r,a,o,s,l,e,t,d)}convexHeightfield(e,t,i,r,a,o,s,l,c,u,d){const h=t.data,m=t.elementSize,g=e.boundingSphereRadius,f=yw,p=bw,v=xw;it.pointToLocalFrame(r,o,i,v);let _=Math.floor((v.x-g)/m)-1,y=Math.ceil((v.x+g)/m)+1,x=Math.floor((v.y-g)/m)-1,w=Math.ceil((v.y+g)/m)+1;if(y<0||w<0||_>h.length||x>h[0].length)return;_<0&&(_=0),y<0&&(y=0),x<0&&(x=0),w<0&&(w=0),_>=h.length&&(_=h.length-1),y>=h.length&&(y=h.length-1),w>=h[0].length&&(w=h[0].length-1),x>=h[0].length&&(x=h[0].length-1);const S=[];t.getRectMinMax(_,x,y,w,S);const T=S[0],b=S[1];if(!(v.z-g>b||v.z+g<T))for(let E=_;E<y;E++)for(let D=x;D<w;D++){let I=!1;if(t.getConvexTrianglePillar(E,D,!1),it.pointToWorldFrame(r,o,t.pillarOffset,f),i.distanceTo(f)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(I=this.convexConvex(e,t.pillarConvex,i,f,a,o,s,l,null,null,d,p,null)),d&&I||(t.getConvexTrianglePillar(E,D,!0),it.pointToWorldFrame(r,o,t.pillarOffset,f),i.distanceTo(f)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(I=this.convexConvex(e,t.pillarConvex,i,f,a,o,s,l,null,null,d,p,null)),d&&I))return!0}}sphereParticle(e,t,i,r,a,o,s,l,c,u,d){const h=mw;if(h.set(0,0,1),r.vsub(i,h),h.lengthSquared()<=e.radius*e.radius){if(d)return!0;const m=this.createContactEquation(l,s,t,e,c,u);h.normalize(),m.rj.copy(h),m.rj.scale(e.radius,m.rj),m.ni.copy(h),m.ni.negate(m.ni),m.ri.set(0,0,0),this.result.push(m),this.createFrictionEquationsFromContact(m,this.frictionResult)}}planeParticle(e,t,i,r,a,o,s,l,c,u,d){const h=dw;h.set(0,0,1),s.quaternion.vmult(h,h);const m=pw;if(r.vsub(s.position,m),h.dot(m)<=0){if(d)return!0;const g=this.createContactEquation(l,s,t,e,c,u);g.ni.copy(h),g.ni.negate(g.ni),g.ri.set(0,0,0);const f=fw;h.scale(h.dot(r),f),r.vsub(f,f),g.rj.copy(f),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}}boxParticle(e,t,i,r,a,o,s,l,c,u,d){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexParticle(e.convexPolyhedronRepresentation,t,i,r,a,o,s,l,e,t,d)}convexParticle(e,t,i,r,a,o,s,l,c,u,d){let h=-1;const m=vw,g=_w;let f=null;const p=gw;if(p.copy(r),p.vsub(i,p),a.conjugate(Zc),Zc.vmult(p,p),e.pointIsInside(p)){e.worldVerticesNeedsUpdate&&e.computeWorldVertices(i,a),e.worldFaceNormalsNeedsUpdate&&e.computeWorldFaceNormals(a);for(let v=0,_=e.faces.length;v!==_;v++){const y=[e.worldVertices[e.faces[v][0]]],x=e.worldFaceNormals[v];r.vsub(y[0],$c);const w=-x.dot($c);if(f===null||Math.abs(w)<Math.abs(f)){if(d)return!0;f=w,h=v,m.copy(x)}}if(h!==-1){const v=this.createContactEquation(l,s,t,e,c,u);m.scale(f,g),g.vadd(r,g),g.vsub(i,g),v.rj.copy(g),m.negate(v.ni),v.ri.set(0,0,0);const _=v.ri,y=v.rj;_.vadd(r,_),_.vsub(l.position,_),y.vadd(i,y),y.vsub(s.position,y),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(e,t,i,r,a,o,s,l,c,u,d){return this.convexHeightfield(t,e,r,i,o,a,l,s,c,u,d)}particleCylinder(e,t,i,r,a,o,s,l,c,u,d){return this.convexParticle(t,e,r,i,o,a,l,s,c,u,d)}sphereTrimesh(e,t,i,r,a,o,s,l,c,u,d){const h=A1,m=C1,g=L1,f=D1,p=R1,v=P1,_=N1,y=T1,x=S1,w=k1;it.pointToLocalFrame(r,o,i,p);const S=e.radius;_.lowerBound.set(p.x-S,p.y-S,p.z-S),_.upperBound.set(p.x+S,p.y+S,p.z+S),t.getTrianglesInAABB(_,w);const T=E1,b=e.radius*e.radius;for(let z=0;z<w.length;z++)for(let L=0;L<3;L++)if(t.getVertex(t.indices[w[z]*3+L],T),T.vsub(p,x),x.lengthSquared()<=b){if(y.copy(T),it.pointToWorldFrame(r,o,y,T),T.vsub(i,x),d)return!0;let P=this.createContactEquation(s,l,e,t,c,u);P.ni.copy(x),P.ni.normalize(),P.ri.copy(P.ni),P.ri.scale(e.radius,P.ri),P.ri.vadd(i,P.ri),P.ri.vsub(s.position,P.ri),P.rj.copy(T),P.rj.vsub(l.position,P.rj),this.result.push(P),this.createFrictionEquationsFromContact(P,this.frictionResult)}for(let z=0;z<w.length;z++)for(let L=0;L<3;L++){t.getVertex(t.indices[w[z]*3+L],h),t.getVertex(t.indices[w[z]*3+(L+1)%3],m),m.vsub(h,g),p.vsub(m,v);const P=v.dot(g);p.vsub(h,v);let F=v.dot(g);if(F>0&&P<0&&(p.vsub(h,v),f.copy(g),f.normalize(),F=v.dot(f),f.scale(F,v),v.vadd(h,v),v.distanceTo(p)<e.radius)){if(d)return!0;const H=this.createContactEquation(s,l,e,t,c,u);v.vsub(p,H.ni),H.ni.normalize(),H.ni.scale(e.radius,H.ri),H.ri.vadd(i,H.ri),H.ri.vsub(s.position,H.ri),it.pointToWorldFrame(r,o,v,v),v.vsub(l.position,H.rj),it.vectorToWorldFrame(o,H.ni,H.ni),it.vectorToWorldFrame(o,H.ri,H.ri),this.result.push(H),this.createFrictionEquationsFromContact(H,this.frictionResult)}}const E=I1,D=F1,I=z1,N=M1;for(let z=0,L=w.length;z!==L;z++){t.getTriangleVertices(w[z],E,D,I),t.getNormal(w[z],N),p.vsub(E,v);let P=v.dot(N);if(N.scale(P,v),p.vsub(v,v),P=v.distanceTo(p),yt.pointInTriangle(v,E,D,I)&&P<e.radius){if(d)return!0;let F=this.createContactEquation(s,l,e,t,c,u);v.vsub(p,F.ni),F.ni.normalize(),F.ni.scale(e.radius,F.ri),F.ri.vadd(i,F.ri),F.ri.vsub(s.position,F.ri),it.pointToWorldFrame(r,o,v,v),v.vsub(l.position,F.rj),it.vectorToWorldFrame(o,F.ni,F.ni),it.vectorToWorldFrame(o,F.ri,F.ri),this.result.push(F),this.createFrictionEquationsFromContact(F,this.frictionResult)}}w.length=0}planeTrimesh(e,t,i,r,a,o,s,l,c,u,d){const h=new M,m=y1;m.set(0,0,1),a.vmult(m,m);for(let g=0;g<t.vertices.length/3;g++){t.getVertex(g,h);const f=new M;f.copy(h),it.pointToWorldFrame(r,o,f,h);const p=b1;if(h.vsub(i,p),m.dot(p)<=0){if(d)return!0;const v=this.createContactEquation(s,l,e,t,c,u);v.ni.copy(m);const _=w1;m.scale(p.dot(m),_),h.vsub(_,_),v.ri.copy(_),v.ri.vsub(s.position,v.ri),v.rj.copy(h),v.rj.vsub(l.position,v.rj),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}}}}const Or=new M,Cn=new M,Ln=new M,g1=new M,v1=new M,_1=new bt,x1=new bt,y1=new M,b1=new M,w1=new M,M1=new M,S1=new M;new M;const E1=new M,T1=new M,A1=new M,C1=new M,L1=new M,D1=new M,R1=new M,P1=new M,I1=new M,F1=new M,z1=new M,N1=new di,k1=[],ls=new M,Yc=new M,O1=new M,B1=new M,U1=new M;function H1(n,e,t){let i=null;const r=n.length;for(let a=0;a!==r;a++){const o=n[a],s=O1;n[(a+1)%r].vsub(o,s);const l=B1;s.cross(e,l);const c=U1;t.vsub(o,c);const u=l.dot(c);if(i===null||u>0&&i===!0||u<=0&&i===!1){i===null&&(i=u>0);continue}else return!1}return!0}const cs=new M,G1=new M,W1=new M,V1=new M,q1=[new M,new M,new M,new M,new M,new M],j1=new M,X1=new M,Y1=new M,Z1=new M,$1=new M,J1=new M,K1=new M,Q1=new M,ew=new M,tw=new M,iw=new M,rw=new M,nw=new M,aw=new M;new M;new M;const sw=new M,ow=new M,lw=new M,cw=new M,uw=new M,hw=new M,dw=new M,pw=new M,fw=new M,mw=new M,Zc=new bt,gw=new M;new M;const vw=new M,$c=new M,_w=new M,xw=new M,yw=new M,bw=[0],ww=new M,Mw=new M;class Jc{constructor(){this.current=[],this.previous=[]}getKey(e,t){if(t<e){const i=t;t=e,e=i}return e<<16|t}set(e,t){const i=this.getKey(e,t),r=this.current;let a=0;for(;i>r[a];)a++;if(i!==r[a]){for(let o=r.length-1;o>=a;o--)r[o+1]=r[o];r[a]=i}}tick(){const e=this.current;this.current=this.previous,this.previous=e,this.current.length=0}getDiff(e,t){const i=this.current,r=this.previous,a=i.length,o=r.length;let s=0;for(let l=0;l<a;l++){let c=!1;const u=i[l];for(;u>r[s];)s++;c=u===r[s],c||Kc(e,u)}s=0;for(let l=0;l<o;l++){let c=!1;const u=r[l];for(;u>i[s];)s++;c=i[s]===u,c||Kc(t,u)}}}function Kc(n,e){n.push((e&4294901760)>>16,e&65535)}const zo=(n,e)=>n<e?`${n}-${e}`:`${e}-${n}`;class Sw{constructor(){this.data={keys:[]}}get(e,t){const i=zo(e,t);return this.data[i]}set(e,t,i){const r=zo(e,t);this.get(e,t)||this.data.keys.push(r),this.data[r]=i}delete(e,t){const i=zo(e,t),r=this.data.keys.indexOf(i);r!==-1&&this.data.keys.splice(r,1),delete this.data[i]}reset(){const e=this.data,t=e.keys;for(;t.length>0;){const i=t.pop();delete e[i]}}}class Ew extends wh{constructor(e){e===void 0&&(e={}),super(),this.dt=-1,this.allowSleep=!!e.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=e.quatNormalizeSkip!==void 0?e.quatNormalizeSkip:0,this.quatNormalizeFast=e.quatNormalizeFast!==void 0?e.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new M,e.gravity&&this.gravity.copy(e.gravity),e.frictionGravity&&(this.frictionGravity=new M,this.frictionGravity.copy(e.frictionGravity)),this.broadphase=e.broadphase!==void 0?e.broadphase:new Mh,this.bodies=[],this.hasActiveBodies=!1,this.solver=e.solver!==void 0?e.solver:new c1,this.constraints=[],this.narrowphase=new m1(this),this.collisionMatrix=new kc,this.collisionMatrixPrevious=new kc,this.bodyOverlapKeeper=new Jc,this.shapeOverlapKeeper=new Jc,this.contactmaterials=[],this.contactMaterialTable=new Sw,this.defaultMaterial=new Qr("default"),this.defaultContactMaterial=new Kr(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(e,t){return this.contactMaterialTable.get(e.id,t.id)}collisionMatrixTick(){const e=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=e,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(e){this.constraints.push(e)}removeConstraint(e){const t=this.constraints.indexOf(e);t!==-1&&this.constraints.splice(t,1)}rayTest(e,t,i){i instanceof Ms?this.raycastClosest(e,t,{skipBackfaces:!0},i):this.raycastAll(e,t,{skipBackfaces:!0},i)}raycastAll(e,t,i,r){return i===void 0&&(i={}),i.mode=yt.ALL,i.from=e,i.to=t,i.callback=r,No.intersectWorld(this,i)}raycastAny(e,t,i,r){return i===void 0&&(i={}),i.mode=yt.ANY,i.from=e,i.to=t,i.result=r,No.intersectWorld(this,i)}raycastClosest(e,t,i,r){return i===void 0&&(i={}),i.mode=yt.CLOSEST,i.from=e,i.to=t,i.result=r,No.intersectWorld(this,i)}addBody(e){this.bodies.includes(e)||(e.index=this.bodies.length,this.bodies.push(e),e.world=this,e.initPosition.copy(e.position),e.initVelocity.copy(e.velocity),e.timeLastSleepy=this.time,e instanceof ue&&(e.initAngularVelocity.copy(e.angularVelocity),e.initQuaternion.copy(e.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=e,this.idToBodyMap[e.id]=e,this.dispatchEvent(this.addBodyEvent))}removeBody(e){e.world=null;const t=this.bodies.length-1,i=this.bodies,r=i.indexOf(e);if(r!==-1){i.splice(r,1);for(let a=0;a!==i.length;a++)i[a].index=a;this.collisionMatrix.setNumObjects(t),this.removeBodyEvent.body=e,delete this.idToBodyMap[e.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(e){return this.idToBodyMap[e]}getShapeById(e){const t=this.bodies;for(let i=0;i<t.length;i++){const r=t[i].shapes;for(let a=0;a<r.length;a++){const o=r[a];if(o.id===e)return o}}return null}addContactMaterial(e){this.contactmaterials.push(e),this.contactMaterialTable.set(e.materials[0].id,e.materials[1].id,e)}removeContactMaterial(e){const t=this.contactmaterials.indexOf(e);t!==-1&&(this.contactmaterials.splice(t,1),this.contactMaterialTable.delete(e.materials[0].id,e.materials[1].id))}fixedStep(e,t){e===void 0&&(e=1/60),t===void 0&&(t=10);const i=St.now()/1e3;if(!this.lastCallTime)this.step(e,void 0,t);else{const r=i-this.lastCallTime;this.step(e,r,t)}this.lastCallTime=i}step(e,t,i){if(i===void 0&&(i=10),t===void 0)this.internalStep(e),this.time+=e;else{this.accumulator+=t;const r=St.now();let a=0;for(;this.accumulator>=e&&a<i&&(this.internalStep(e),this.accumulator-=e,a++,!(St.now()-r>e*1e3)););this.accumulator=this.accumulator%e;const o=this.accumulator/e;for(let s=0;s!==this.bodies.length;s++){const l=this.bodies[s];l.previousPosition.lerp(l.position,o,l.interpolatedPosition),l.previousQuaternion.slerp(l.quaternion,o,l.interpolatedQuaternion),l.previousQuaternion.normalize()}this.time+=t}}internalStep(e){this.dt=e;const t=this.contacts,i=Dw,r=Rw,a=this.bodies.length,o=this.bodies,s=this.solver,l=this.gravity,c=this.doProfiling,u=this.profile,d=ue.DYNAMIC;let h=-1/0;const m=this.constraints,g=Lw;l.length();const f=l.x,p=l.y,v=l.z;let _=0;for(c&&(h=St.now()),_=0;_!==a;_++){const N=o[_];if(N.type===d){const z=N.force,L=N.mass;z.x+=L*f,z.y+=L*p,z.z+=L*v}}for(let N=0,z=this.subsystems.length;N!==z;N++)this.subsystems[N].update();c&&(h=St.now()),i.length=0,r.length=0,this.broadphase.collisionPairs(this,i,r),c&&(u.broadphase=St.now()-h);let y=m.length;for(_=0;_!==y;_++){const N=m[_];if(!N.collideConnected)for(let z=i.length-1;z>=0;z-=1)(N.bodyA===i[z]&&N.bodyB===r[z]||N.bodyB===i[z]&&N.bodyA===r[z])&&(i.splice(z,1),r.splice(z,1))}this.collisionMatrixTick(),c&&(h=St.now());const x=Cw,w=t.length;for(_=0;_!==w;_++)x.push(t[_]);t.length=0;const S=this.frictionEquations.length;for(_=0;_!==S;_++)g.push(this.frictionEquations[_]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(i,r,this,t,x,this.frictionEquations,g),c&&(u.narrowphase=St.now()-h),c&&(h=St.now()),_=0;_<this.frictionEquations.length;_++)s.addEquation(this.frictionEquations[_]);const T=t.length;for(let N=0;N!==T;N++){const z=t[N],L=z.bi,P=z.bj,F=z.si,H=z.sj;let X;if(L.material&&P.material?X=this.getContactMaterial(L.material,P.material)||this.defaultContactMaterial:X=this.defaultContactMaterial,X.friction,L.material&&P.material&&(L.material.friction>=0&&P.material.friction>=0&&L.material.friction*P.material.friction,L.material.restitution>=0&&P.material.restitution>=0&&(z.restitution=L.material.restitution*P.material.restitution)),s.addEquation(z),L.allowSleep&&L.type===ue.DYNAMIC&&L.sleepState===ue.SLEEPING&&P.sleepState===ue.AWAKE&&P.type!==ue.STATIC){const k=P.velocity.lengthSquared()+P.angularVelocity.lengthSquared(),V=P.sleepSpeedLimit**2;k>=V*2&&(L.wakeUpAfterNarrowphase=!0)}if(P.allowSleep&&P.type===ue.DYNAMIC&&P.sleepState===ue.SLEEPING&&L.sleepState===ue.AWAKE&&L.type!==ue.STATIC){const k=L.velocity.lengthSquared()+L.angularVelocity.lengthSquared(),V=L.sleepSpeedLimit**2;k>=V*2&&(P.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(L,P,!0),this.collisionMatrixPrevious.get(L,P)||(sa.body=P,sa.contact=z,L.dispatchEvent(sa),sa.body=L,P.dispatchEvent(sa)),this.bodyOverlapKeeper.set(L.id,P.id),this.shapeOverlapKeeper.set(F.id,H.id)}for(this.emitContactEvents(),c&&(u.makeContactConstraints=St.now()-h,h=St.now()),_=0;_!==a;_++){const N=o[_];N.wakeUpAfterNarrowphase&&(N.wakeUp(),N.wakeUpAfterNarrowphase=!1)}for(y=m.length,_=0;_!==y;_++){const N=m[_];N.update();for(let z=0,L=N.equations.length;z!==L;z++){const P=N.equations[z];s.addEquation(P)}}s.solve(e,this),c&&(u.solve=St.now()-h),s.removeAllEquations();const b=Math.pow;for(_=0;_!==a;_++){const N=o[_];if(N.type&d){const z=b(1-N.linearDamping,e),L=N.velocity;L.scale(z,L);const P=N.angularVelocity;if(P){const F=b(1-N.angularDamping,e);P.scale(F,P)}}}this.dispatchEvent(Aw),c&&(h=St.now());const E=this.stepnumber%(this.quatNormalizeSkip+1)===0,D=this.quatNormalizeFast;for(_=0;_!==a;_++)o[_].integrate(e,E,D);this.clearForces(),this.broadphase.dirty=!0,c&&(u.integrate=St.now()-h),this.stepnumber+=1,this.dispatchEvent(Tw);let I=!0;if(this.allowSleep)for(I=!1,_=0;_!==a;_++){const N=o[_];N.sleepTick(this.time),N.sleepState!==ue.SLEEPING&&(I=!0)}this.hasActiveBodies=I}emitContactEvents(){const e=this.hasAnyEventListener("beginContact"),t=this.hasAnyEventListener("endContact");if((e||t)&&this.bodyOverlapKeeper.getDiff(Qi,er),e){for(let a=0,o=Qi.length;a<o;a+=2)oa.bodyA=this.getBodyById(Qi[a]),oa.bodyB=this.getBodyById(Qi[a+1]),this.dispatchEvent(oa);oa.bodyA=oa.bodyB=null}if(t){for(let a=0,o=er.length;a<o;a+=2)la.bodyA=this.getBodyById(er[a]),la.bodyB=this.getBodyById(er[a+1]),this.dispatchEvent(la);la.bodyA=la.bodyB=null}Qi.length=er.length=0;const i=this.hasAnyEventListener("beginShapeContact"),r=this.hasAnyEventListener("endShapeContact");if((i||r)&&this.shapeOverlapKeeper.getDiff(Qi,er),i){for(let a=0,o=Qi.length;a<o;a+=2){const s=this.getShapeById(Qi[a]),l=this.getShapeById(Qi[a+1]);tr.shapeA=s,tr.shapeB=l,s&&(tr.bodyA=s.body),l&&(tr.bodyB=l.body),this.dispatchEvent(tr)}tr.bodyA=tr.bodyB=tr.shapeA=tr.shapeB=null}if(r){for(let a=0,o=er.length;a<o;a+=2){const s=this.getShapeById(er[a]),l=this.getShapeById(er[a+1]);ir.shapeA=s,ir.shapeB=l,s&&(ir.bodyA=s.body),l&&(ir.bodyB=l.body),this.dispatchEvent(ir)}ir.bodyA=ir.bodyB=ir.shapeA=ir.shapeB=null}}clearForces(){const e=this.bodies,t=e.length;for(let i=0;i!==t;i++){const r=e[i];r.force,r.torque,r.force.set(0,0,0),r.torque.set(0,0,0)}}}new di;const No=new yt,St=globalThis.performance||{};if(!St.now){let n=Date.now();St.timing&&St.timing.navigationStart&&(n=St.timing.navigationStart),St.now=()=>Date.now()-n}new M;const Tw={type:"postStep"},Aw={type:"preStep"},sa={type:ue.COLLIDE_EVENT_NAME,body:null,contact:null},Cw=[],Lw=[],Dw=[],Rw=[],Qi=[],er=[],oa={type:"beginContact",bodyA:null,bodyB:null},la={type:"endContact",bodyA:null,bodyB:null},tr={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},ir={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};class Qc{constructor(e){typeof e=="object"&&(e=e.notation),this.set=[],this.setkeys=[],this.setid=0,this.groups=[],this.totalDice=0,this.op="",this.constant=null,this.result=[],this.error=!1,this.boost=1,this.notation="",this.vectors=[],(!e||e=="0")&&(this.error=!0),this.parseNotation(e)}parseNotation(e){if(e){let h=e.split("!").length-1||0;h>0&&(this.boost=Math.min(Math.max(h,0),3)*4),e=e.split("!").join(""),e=e.split(" ").join("");let m=e.split("(").length-1,g=e.split(")").length-1;m!=g&&(this.error=!0)}const t=this.notation.length>0?"+":"";this.notation+=t+e;let i=e.split("@"),r=i[0],a=new RegExp(/(\+|\-|\*|\/|\%|\^|){0,1}()(\d*)([a-z]+\d+|[a-z]+|)(?:\{([a-z]+)(.*?|)\}|)()/,"i"),o=new RegExp(/(\b)*(\-\d+|\d+)(\b)*/,"gi"),s,l=0,c=30,u=0,d=0;for(;!this.error&&r.length>0&&(s=a.exec(r))!==null&&l<c;){l++,r=r.substring(s[0].length);let h=s[1],m=s[2]&&s[2].length>0,g=s[3],f=s[4],p=s[5]||"",v=s[6]||"",_=s[7]&&s[7].length>0,y=!0;m&&(u+=s[2].length),v=v.split(","),(!v||v.length<1)&&(v=""),v.shift(),l==1&&r.length==0&&!f&&h&&g?(f="d20",this.op=h,this.constant=parseInt(g),g=1):l>1&&r.length==0&&!f&&(this.op=h,this.constant=parseInt(g),y=!1),y&&this.addSet(g,f,d,u,p,v,h),_&&(u-=s[7].length,d+=s[7].length)}!this.error&&i[1]&&(s=i[1].match(o))!==null&&this.result.push(...s)}stringify(e=!0){let t="";if(this.set.length<1)return t;for(let i=0;i<this.set.length;i++){let r=this.set[i];t+=i>0&&r.op?r.op:"",t+=r.num+r.type,r.func&&(t+="{",t+=r.func?r.func:"",t+=r.args?","+(Array.isArray(r.args)?r.args.join(","):r.args):"",t+="}")}return t+=this.constant?this.op+""+Math.abs(this.constant):"",e&&this.result&&this.result.length>0&&(t+="@"+this.result.join(",")),this.boost>1&&(t+="!".repeat(this.boost/4)),t}addSet(e,t,i=0,r=0,a="",o="",s="+"){e=Math.abs(parseInt(e||1));let l=s+""+t+i+r+a+o,c=this.setkeys[l]!=null,u={};c&&(u=this.set[this.setkeys[l]-1]),e>0&&(u.num=c?e+u.num:e,u.type=t,u.sid=this.setid,u.gid=i,u.glvl=r,a&&(u.func=a),o&&(u.args=o),s&&(u.op=s),c?this.set[this.setkeys[l]-1]=u:this.setkeys[l]=this.set.push(u)),c||++this.setid}static mergeNotation(e,t){return{...e,constant:e.constant+t.constant,notation:e.notation+"+"+t.notation,set:[...e.set,...t.set],totalDice:e.vectors.length+t.vectors.length,vectors:[...e.vectors,...t.vectors]}}}const ko={d2:{name:"d2",labels:["1","2"],values:[1,2],inertia:8,mass:400,scale:.9,system:"dweird"},dc:{type:"d2",name:"Coin",labels:["textures/silvercoin/tail.png","textures/silvercoin/heads.png"],setBumpMaps:["textures/silvercoin/tail_bump.png","textures/silvercoin/heads_bump.png"],values:[0,1],inertia:8,mass:400,scale:.9,colorset:"coin_silver"},d1:{name:"One-sided Dice",type:"d6",labels:["1"],values:[1,1],scale:.9,system:"dweird"},d3:{name:"Three-Sided Dice",type:"d6",labels:["1","2","3"],values:[1,3],scale:.9,system:"dweird"},df:{name:"Fudge Dice",type:"d6",labels:["-","0","+"],values:[-1,1],scale:.9,system:"dweird"},d4:{name:"Four-Sided Dice",labels:["1","2","3","4"],values:[1,4],inertia:5,scale:1.2},d6:{name:"Six-Sided Dice (Numbers)",labels:["1","2","3","4","5","6"],values:[1,6],scale:.9},dpip:{name:"Six-Sided Dice (Pips)",type:"d6",labels:[`   
 ⬤ 
   `,`⬤  
   
  ⬤`,`⬤  
 ⬤ 
  ⬤`,`⬤ ⬤
   
⬤ ⬤`,`⬤ ⬤
 ⬤ 
⬤ ⬤`,`⬤ ⬤
⬤ ⬤
⬤ ⬤`],values:[1,6],scale:.9,font:"monospace"},dsex:{name:"Sex-Sided Emoji Dice",type:"d6",labels:["🍆","🍑","👌","💦","🙏","💥"],values:[1,6],scale:.9,display:"labels",system:"dweird"},dpoker:{name:"Poker Dice (9-Ace)",type:"d6",labels:["A","9","10","J","Q","K"],values:[1,6],scale:.9,display:"labels",system:"dweird",font:"Times New Roman"},dspanpoker:{name:"Spanish Poker Dice (7-Ace)",type:"d8",labels:["A","7","8","9","10","J","Q","K"],values:[1,8],display:"labels",system:"dweird",font:"Times New Roman"},disotope:{name:"Radioactive Twelve-Sided Dice",type:"d12",labels:["","","","","","","","","","","","☢️"],values:[0,0,0,0,0,0,0,0,0,0,0,1],mass:350,inertia:8,scale:.9,system:"dweird"},dsuit:{name:"Four-Suited Dice",type:"d4",labels:["♠️","♥️","♦️","♣️"],values:[1,4],inertia:5,scale:1.2,display:"labels",system:"dweird"},d8:{name:"Eight-Sided Dice",labels:["1","2","3","4","5","6","7","8"],values:[1,8]},d10:{name:"Ten-Sided Dice (Single Digit)",labels:["1","2","3","4","5","6","7","8","9","0"],values:[1,10],mass:350,inertia:9,scale:.9},d100:{name:"Ten-Sided Dice (Tens Digit)",type:"d10",labels:["10","20","30","40","50","60","70","80","90","00"],values:[10,100,10],mass:350,inertia:9,scale:.9},d12:{name:"Twelve-Sided Dice",labels:["1","2","3","4","5","6","7","8","9","10","11","12"],values:[1,12],mass:350,inertia:8,scale:.9},d20:{name:"Twenty-Sided Dice",labels:["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"],values:[1,20],mass:400,inertia:6},dabi:{name:"Star Wars RPG: Ability Dice",type:"d8",labels:["s","a",`s
a`,`s
s`,"a","s",`a
a`,""],values:[1,8],font:"SWRPG-Symbol-Regular",color:"#00FF00",colorset:"swrpg_abi",display:"labels",system:"swrpg"},ddif:{name:"Star Wars RPG: Difficulty Dice",type:"d8",labels:["t","f",`f
t`,"t","",`t
t`,`f
f`,"t"],values:[1,8],font:"SWRPG-Symbol-Regular",color:"#8000FC",colorset:"swrpg_dif",display:"labels",system:"swrpg"},dpro:{name:"Star Wars RPG: Proficiency Dice",type:"d12",labels:[`a
a`,"a",`a
a`,"x","s",`s
a`,"s",`s
a`,`s
s`,`s
a`,`s
s`,""],values:[1,12],mass:350,inertia:8,scale:.9,font:"SWRPG-Symbol-Regular",color:"#FFFF00",colorset:"swrpg_pro",display:"labels",system:"swrpg"},dcha:{name:"Star Wars RPG: Challenge Dice",type:"d12",labels:[`t
t`,"t",`t
t`,"t",`t
f`,"f",`t
f`,"f",`f
f`,"y",`f
f`,""],values:[1,12],mass:350,inertia:8,scale:.9,font:"SWRPG-Symbol-Regular",color:"#FF0000",colorset:"swrpg_cha",display:"labels",system:"swrpg"},dfor:{name:"Star Wars RPG: Force Dice",type:"d12",labels:["z",`Z
Z`,"z",`Z
Z`,"z",`Z
Z`,"z","Z","z","Z","z",`z
z`],values:[1,12],mass:350,inertia:8,scale:.9,font:"SWRPG-Symbol-Regular",color:"#FFFFFF",colorset:"swrpg_for",display:"labels",system:"swrpg"},dboo:{name:"Star Wars RPG: Boost Dice",type:"d6",labels:[`s  
  a`,`a  
  a`,"s","a","",""],values:[1,6],scale:.9,font:"SWRPG-Symbol-Regular",color:"#00FFFF",colorset:"swrpg_boo",display:"labels",system:"swrpg"},dset:{name:"Star Wars RPG: Setback Dice",type:"d6",labels:["","t","f"],values:[1,3],scale:.9,font:"SWRPG-Symbol-Regular",color:"#111111",colorset:"swrpg_set",display:"labels",system:"swrpg"},swar:{name:"Star Wars Armada: Red Attack Dice",type:"d8",labels:["F","F",`F
F`,"E","E","G","",""],values:[1,8],font:"Armada-Symbol-Regular",color:"#FF0000",colorset:"swa_red",display:"labels",system:"swarmada"},swab:{name:"Star Wars Armada: Blue Attack Dice",type:"d8",labels:["F","F","F","F","E","E","G","G"],values:[1,8],font:"Armada-Symbol-Regular",color:"#0000FF",colorset:"swa_blue",display:"labels",system:"swarmada"},swak:{name:"Star Wars Armada: Black Attack Dice",type:"d8",labels:["F","F","F","F",`F
E`,`F
E`,"",""],values:[1,8],font:"Armada-Symbol-Regular",color:"#111111",colorset:"swa_black",display:"labels",system:"swarmada"},xwatk:{name:"Star Wars X-Wing: Red Attack Dice",type:"d8",labels:["c","d","d","d","f","f","",""],values:[1,8],font:"XWing-Symbol-Regular",color:"#FF0000",colorset:"xwing_red",display:"labels",system:"xwing"},xwdef:{name:"Star Wars X-Wing: Green Defense Dice",type:"d8",labels:["e","e","e","f","f","","",""],values:[1,8],font:"XWing-Symbol-Regular",color:"#00FF00",colorset:"xwing_green",display:"labels",system:"xwing"},swlar:{name:"Star Wars Legion: Red Attack Dice",type:"d8",labels:["h","h","h","h","h","c","o",""],values:[1,8],font:"Legion-Symbol-Regular",color:"#FF0000",colorset:"swl_atkred",display:"labels",system:"legion"},swlab:{name:"Star Wars Legion: Black Attack Dice",type:"d8",labels:["h","h","h","","","c","o",""],values:[1,8],font:"Legion-Symbol-Regular",color:"#111111",colorset:"swl_atkblack",display:"labels",system:"legion"},swlaw:{name:"Star Wars Legion: White Attack Dice",type:"d8",labels:["h","","","","","c","o",""],values:[1,8],font:"Legion-Symbol-Regular",color:"#FFFFFF",colorset:"swl_atkwhite",display:"labels",system:"legion"},swldr:{name:"Star Wars Legion: Red Defense Dice",type:"d6",labels:["s","s","s","d","",""],values:[1,6],scale:.9,font:"Legion-Symbol-Regular",color:"#FF0000",colorset:"swl_defred",display:"labels",system:"legion"},swldw:{name:"Star Wars Legion: White Defense Dice",type:"d6",labels:["s","","","d","",""],values:[1,6],scale:.9,font:"Legion-Symbol-Regular",color:"#FFFFFF",colorset:"swl_defwhite",display:"labels",system:"legion"}},yi={d4:{vertices:[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],faces:[[1,0,2,1],[0,1,3,2],[0,3,2,3],[1,2,3,4]]},d6:{vertices:[[-1,-1,-1],[1,-1,-1],[1,1,-1],[-1,1,-1],[-1,-1,1],[1,-1,1],[1,1,1],[-1,1,1]],faces:[[0,3,2,1,1],[1,2,6,5,2],[0,1,5,4,3],[3,7,6,2,4],[0,4,7,3,5],[4,5,6,7,6]]},d8:{vertices:[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],faces:[[0,2,4,1],[0,4,3,2],[0,3,5,3],[0,5,2,4],[1,3,4,5],[1,4,2,6],[1,2,5,7],[1,5,3,8]]},d10:{vertices:[[1,0,-.105],[.809,.5877,.105],[.309,.951,-.105],[-.309,.951,.105],[-.809,.5877,-.105],[-1,0,.105],[-.809,-.587,-.105],[-.309,-.951,.105],[.309,-.951,-.105],[.809,-.5877,.105],[0,0,-1],[0,0,1]],faces:[[5,6,7,11,0],[4,3,2,10,1],[1,2,3,11,2],[0,9,8,10,3],[7,8,9,11,4],[8,7,6,10,5],[9,0,1,11,6],[2,1,0,10,7],[3,4,5,11,8],[6,5,4,10,9]]},d12:{vertices:[[0,.618,1.618],[0,.618,-1.618],[0,-.618,1.618],[0,-.618,-1.618],[1.618,0,.618],[1.618,0,-.618],[-1.618,0,.618],[-1.618,0,-.618],[.618,1.618,0],[.618,-1.618,0],[-.618,1.618,0],[-.618,-1.618,0],[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]],faces:[[2,14,4,12,0,1],[15,9,11,19,3,2],[16,10,17,7,6,3],[6,7,19,11,18,4],[6,18,2,0,16,5],[18,11,9,14,2,6],[1,17,10,8,13,7],[1,13,5,15,3,8],[13,8,12,4,5,9],[5,4,14,9,15,10],[0,12,8,10,16,11],[3,19,7,17,1,12]]},d20:{vertices:[[-1,1.618,0],[1,1.618,0],[-1,-1.618,0],[1,-1.618,0],[0,-1,1.618],[0,1,1.618],[0,-1,-1.618],[0,1,-1.618],[1.618,0,-1],[1.618,0,1],[-1.618,0,-1],[-1.618,0,1]],faces:[[0,11,5,1],[0,5,1,2],[0,1,7,3],[0,7,10,4],[0,10,11,5],[1,5,9,6],[5,11,4,7],[11,10,2,8],[10,7,6,9],[7,1,8,10],[3,9,4,11],[3,4,2,12],[3,2,6,13],[3,6,8,14],[3,8,9,15],[4,9,5,16],[2,4,11,17],[6,2,10,18],[8,6,7,19],[9,8,1,20]]}},Pw={name:"",scale:1,font:"Arial",color:"",labels:[],valueMap:[],values:[],normals:[],mass:300,inertia:13,geometry:null,display:"values",system:"d20"};class Iw{constructor(e){if(!ko.hasOwnProperty(e))return console.error("dice type unavailable");Object.assign(this,Pw,ko[e]),this.shape=ko[e].type||e,this.type=e,this.setLabels(this.labels),this.setValues(this.values[0],this.values[1],this.values[2]),this.setValueMap(this.valueMap),this.bumpMaps&&this.setBumpMaps(this.bumpMaps)}setValues(e=1,t=20,i=1){this.values=this.range(e,t,i)}setValueMap(e){for(let t=0;t<this.values.length;t++){let i=this.values[t];e[i]!=null&&(this.valueMap[i]=e[i])}}registerFaces(e,t="labels"){let i;if(t=="labels"?i=this.labels:i=this.normals,i.unshift(""),["d2","d10"].includes(this.shape)||i.unshift(""),this.shape=="d4"){let r=e[0],a=e[1],o=e[2],s=e[3];this.labels=[[[],[0,0,0],[a,s,o],[r,o,s],[a,r,s],[r,a,o]],[[],[0,0,0],[a,o,s],[o,r,s],[a,s,r],[o,a,r]],[[],[0,0,0],[s,o,a],[o,s,r],[s,a,r],[o,r,a]],[[],[0,0,0],[s,a,o],[r,s,o],[s,r,a],[r,o,a]]]}else Array.prototype.push.apply(i,e)}setLabels(e){this.loadTextures(e,this.registerFaces.bind(this),"labels")}setBumpMaps(e){this.loadTextures(e,this.registerFaces.bind(this),"bump")}loadTextures(e,t,i){let r=0,a=e.length,o=/\.(PNG|JPG|GIF|WEBP)$/i,s=Array(e.length),l=!1;for(let c=0;c<a;c++){if(e[c]==""||!e[c].match(o)){s[c]=e[c],++r;continue}l=!0,s[c]=new Image,s[c].onload=function(){++r>=a&&t(s,i)},s[c].src=e[c]}l||t(s,i)}range(e,t,i=1){for(var r=[e],a=e;a<t;)r.push(a+=i||1);return r}}const Fw={none:{name:"Plastic"},perfectmetal:{name:"Perfect Metal",color:14540253,roughness:0,metalness:1,envMapIntensity:1},metal:{name:"Metal",color:14540253,roughness:.5,metalness:.6,envMapIntensity:1},wood:{name:"Wood",color:14540253,roughness:.9,metalness:0,envMapIntensity:1},glass:{name:"Glass",color:14540253,roughness:.1,metalness:0,envMapIntensity:1}},zw={baseScale:100,bumpMapping:!0},pa=class{constructor(n){this.geometries={},this.materials_cache={},this.cache_hits=0,this.cache_misses=0,this.label_color="",this.dice_color="",this.edge_color="",this.label_outline="",this.dice_texture="",this.dice_material="",this.material_options={specular:16777215,color:11908533,shininess:5,flatShading:!0},Object.assign(this,zw,n)}updateConfig(n={}){Object.assign(this,n),n.scale&&this.scaleGeometry()}setBumpMapping(n){this.bumpMapping=n,this.materials_cache={}}create(n){let e=this.get(n);if(!e)return null;let t=this.geometries[n];if(t||(t=this.createGeometry(e.shape,e.scale*this.baseScale),this.geometries[n]=t),!t)return null;this.setMaterialInfo();let i=new Bi(t,this.createMaterials(e,this.baseScale/2,1));switch(i.result=[],i.shape=e.shape,i.rerolls=0,i.resultReason="natural",i.mass=e.mass,i.getFaceValue=function(){let r=this.resultReason,a=new B(0,0,this.shape=="d4"?-1:1),o,s=Math.PI*2,l=this.geometry.getAttribute("normal").array;for(let g=0,f=this.geometry.groups.length;g<f;++g){let p=this.geometry.groups[g];if(p.materialIndex==0)continue;let v=g*9,_=new B(l[v],l[v+1],l[v+2]).clone().applyQuaternion(this.body.quaternion).angleTo(a);_<s&&(s=_,o=p)}let c=o.materialIndex-1,u=2;const d=pa.dice[this.notation.type];if(this.shape=="d4"){let g=c-1==0?5:c;return{value:c,label:d.labels[c-1][g][0],reason:r}}["d10","d2"].includes(this.shape)&&(c+=1,u-=1);let h=d.values[(c-1)%d.values.length],m=d.labels[(c-1)%(d.labels.length-2)+u];return{value:h,label:m,reason:r}},i.storeRolledValue=function(r){this.resultReason=r||this.resultReason,this.result.push(this.getFaceValue())},i.getLastValue=function(){return!this.result||this.result.length<1?{value:void 0,label:"",reason:""}:this.result[this.result.length-1]},i.ignoreLastValue=function(r){let a=this.getLastValue();a.value!==void 0&&(a.ignore=r,this.setLastValue(a))},i.setLastValue=function(r){if(!(!this.result||this.result.length<1)&&!(!r||r.length<1))return this.result[this.result.length-1]=r},e.color&&(i.material[0].color=new Ye(e.color),i.material[0].emissive=new Ye(e.color),i.material[0].emissiveIntensity=1,i.material[0].needsUpdate=!0),e.values.length){case 1:return this.fixmaterials(i,1);case 2:return this.fixmaterials(i,2);case 3:return this.fixmaterials(i,3);default:return i}}get(n){let e;return pa.dice.hasOwnProperty(n)?e=pa.dice[n]:(e=new Iw(n),pa.dice[n]=e),e}getGeometry(n){return this.geometries[n]}scaleGeometry(){}createMaterials(n,e,t,i=!0,r=0){let a=[],o=n.labels;n.shape=="d4"&&(o=n.labels[r],e=this.baseScale/2,t=this.baseScale*2);for(var s=0;s<o.length;++s){var l;this.dice_material!="none"?(l=new eb(Fw[this.dice_material]),l.envMapIntensity=0):l=new tb(this.material_options);let c;if(s==0){let u={name:"none"};this.dice_texture_rand.composite!="source-over"&&(u=this.dice_texture_rand),c=this.createTextMaterial(n,o,s,e,t,u,this.label_color_rand,this.label_outline_rand,this.edge_color_rand,i),l.map=c.composite}else if(c=this.createTextMaterial(n,o,s,e,t,this.dice_texture_rand,this.label_color_rand,this.label_outline_rand,this.dice_color_rand,i),l.map=c.composite,this.bumpMapping){{let u=.75;e>35&&(u=1),e>40&&(u=2.5),e>45&&(u=4),l.bumpScale=u}c.bump&&(l.bumpMap=c.bump),n.shape!="d4"&&n.normals[s]&&(l.bumpMap=new ui(n.normals[s]),l.bumpScale=4,l.bumpMap.needsUpdate=!0)}l.opacity=1,l.transparent=!0,l.depthTest=!1,l.needUpdate=!0,a.push(l)}return a}createTextMaterial(n,e,t,i,r,a,o,s,l,c){if(e[t]===void 0)return null;a=a||this.dice_texture_rand,o=o||this.label_color_rand,s=s||this.label_outline_rand,l=l||this.dice_color_rand,c=c??!0;let u=e[t],d=!1,h=u;u instanceof HTMLImageElement?h=u.src:u instanceof Array&&u.forEach(T=>{h+=T.src});let m=n.type+h+t+a.name+o+s+l;if(n.shape=="d4"&&(m=n.type+h+a.name+o+s+l),c&&this.materials_cache[m]!=null)return this.cache_hits++,this.materials_cache[m];let g=document.createElement("canvas"),f=g.getContext("2d",{alpha:!0});f.globalAlpha=0,f.clearRect(0,0,g.width,g.height);let p=document.createElement("canvas"),v=p.getContext("2d",{alpha:!0});v.globalAlpha=0,v.clearRect(0,0,p.width,p.height);let _;if(n.shape=="d4"?_=this.calc_texture_size(i+r)*4:_=this.calc_texture_size(i+i*2*r)*4,g.width=g.height=_,p.width=p.height=_,f.fillStyle=l,f.fillRect(0,0,g.width,g.height),v.fillStyle="#FFFFFF",v.fillRect(0,0,p.width,p.height),a.texture&&a.name!=""&&a.name!="none"?(f.globalCompositeOperation=a.composite||"source-over",f.drawImage(a.texture,0,0,g.width,g.height),f.globalCompositeOperation="source-over",a.bump&&(v.globalCompositeOperation="source-over",v.drawImage(a.bump,0,0,g.width,g.height))):f.globalCompositeOperation="source-over",f.globalCompositeOperation="source-over",f.textAlign="center",f.textBaseline="middle",v.textAlign="center",v.textBaseline="middle",n.shape!="d4"){let T={d8:{even:-7.5,odd:-127.5},d10:{all:-6},d12:{all:5},d20:{all:-7.5}}[n.shape];if(T){let b;if(T.hasOwnProperty("all")?b=T.all:t>0&&t%2!=0?b=T.odd:b=T.even,b&&b!=0){var y=g.width/2,x=g.height/2;f.translate(y,x),f.rotate(b*(Math.PI/180)),f.translate(-y,-x),v.translate(y,x),v.rotate(b*(Math.PI/180)),v.translate(-y,-x)}}if(u instanceof HTMLImageElement)d=!0,f.drawImage(u,0,0,u.width,u.height,0,0,g.width,g.height);else{let b=_/(1+2*r),E=g.height/2+10,D=g.width/2;n.shape=="d10"?(b=b*.75,E=E*1.15-10):n.shape=="d20"&&(D=D*.98),f.font=b+"pt "+n.font,v.font=b+"pt "+n.font;let I=f.measureText("M").width*1.4,N=u.split(`
`);N.length>1&&(b=b/N.length,f.font=b+"pt "+n.font,v.font=b+"pt "+n.font,I=f.measureText("M").width*1.2,E-=I*N.length/2);for(let z=0,L=N.length;z<L;z++){let P=N[z].trim();s!="none"&&s!=l&&(f.strokeStyle=s,f.lineWidth=5,f.strokeText(N[z],D,E),v.strokeStyle="#000000",v.lineWidth=5,v.strokeText(N[z],D,E),(P=="6"||P=="9")&&(f.strokeText("  .",D,E),v.strokeText("  .",D,E))),f.fillStyle=o,f.fillText(N[z],D,E),v.fillStyle="#000000",v.fillText(N[z],D,E),(P=="6"||P=="9")&&(f.fillText("  .",D,E),v.fillText("  .",D,E)),E+=I*1.5}}}else{var y=g.width/2,x=g.height/2;f.font=_/128*24+"pt "+n.font,v.font=_/128*24+"pt "+n.font;for(let E=0;E<u.length;E++){if(u[E]instanceof HTMLImageElement){let D=u[E].width/g.width;f.drawImage(u[E],0,0,u[E].width,u[E].height,100/D,25/D,60/D,60/D)}else s!="none"&&s!=l&&(f.strokeStyle=s,f.lineWidth=5,f.strokeText(u[E],y,x-_*.3),v.strokeStyle="#000000",v.lineWidth=5,v.strokeText(u[E],y,x-_*.3)),f.fillStyle=o,f.fillText(u[E],y,x-_*.3),v.fillStyle="#000000",v.fillText(u[E],y,x-_*.3);f.translate(y,x),f.rotate(Math.PI*2/3),f.translate(-y,-x),v.translate(y,x),v.rotate(Math.PI*2/3),v.translate(-y,-x)}}var w=new Dc(g),S;return d?S=null:S=new Dc(p),c&&(this.cache_misses++,this.materials_cache[m]={composite:w,bump:S}),{composite:w,bump:S}}applyColorSet(n){var e;this.colordata=n,this.label_color=n.foreground,this.dice_color=n.background,this.label_outline=n.outline,this.dice_texture=n.texture,this.dice_material=((e=n==null?void 0:n.texture)==null?void 0:e.material)||"none",this.edge_color=n.hasOwnProperty("edge")?n.edge:n.background}setMaterialInfo(n=""){let e=this.colordata,t=this.dice_texture,i=this.dice_material;if(this.dice_color_rand="",this.label_color_rand="",this.label_outline_rand="",this.dice_texture_rand="",this.dice_material_rand="",this.edge_color_rand="",Array.isArray(this.dice_color)){var r=Math.floor(Math.random()*this.dice_color.length);Array.isArray(this.label_color)&&this.label_color.length==this.dice_color.length&&(this.label_color_rand=this.label_color[r],Array.isArray(this.label_outline)&&this.label_outline.length==this.label_color.length&&(this.label_outline_rand=this.label_outline[r])),Array.isArray(this.dice_texture)&&this.dice_texture.length==this.dice_color.length&&(this.dice_texture_rand=this.dice_texture[r],this.dice_material_rand=this.dice_texture_rand.material),Array.isArray(this.edge_color)&&this.edge_color.length==this.dice_color.length&&(this.edge_color_rand=this.edge_color[r]),this.dice_color_rand=this.dice_color[r]}else this.dice_color_rand=this.dice_color;if(this.edge_color_rand=="")if(Array.isArray(this.edge_color)){var r=Math.floor(Math.random()*this.edge_color.length);this.edge_color_rand=this.edge_color[r]}else this.edge_color_rand=this.edge_color;if(this.label_color_rand==""&&Array.isArray(this.label_color)){var r=this.label_color[Math.floor(Math.random()*this.label_color.length)];Array.isArray(this.label_outline)&&this.label_outline.length==this.label_color.length&&(this.label_outline_rand=this.label_outline[r]),this.label_color_rand=this.label_color[r]}else this.label_color_rand==""&&(this.label_color_rand=this.label_color);if(this.label_outline_rand==""&&Array.isArray(this.label_outline)){var r=this.label_outline[Math.floor(Math.random()*this.label_outline.length)];this.label_outline_rand=this.label_outline[r]}else this.label_outline_rand==""&&(this.label_outline_rand=this.label_outline);this.dice_texture_rand==""&&Array.isArray(this.dice_texture)?(this.dice_texture_rand=this.dice_texture[Math.floor(Math.random()*this.dice_texture.length)],this.dice_material_rand=this.dice_texture_rand.material||this.dice_material):this.dice_texture_rand==""&&(this.dice_texture_rand=this.dice_texture,this.dice_material_rand=this.dice_texture_rand.material||this.dice_material),this.dice_material_rand==""&&Array.isArray(this.dice_material)?this.dice_material_rand=this.dice_material[Math.floor(Math.random()*this.dice_material.length)]:this.dice_material_rand==""&&(this.dice_material_rand=this.dice_material),this.colordata&&this.colordata.id!=e.id&&this.applyColorSet(e,t,i)}calc_texture_size(n){return Math.pow(2,Math.floor(Math.log(n)/Math.log(2)))}createGeometry(n,e,t=!1){const i=t?"create_shape":"create_geom";switch(n){case"d2":var r=new xl(1*e,1*e,.1*e,32);return r.cannon_shape=new o1(1*e,1*e,.1*e,8),r;case"d4":return this[i](yi.d4.vertices,yi.d4.faces,e,-.1,Math.PI*7/6,.96);case"d6":return this[i](yi.d6.vertices,yi.d6.faces,e,.1,Math.PI/4,.96);case"d8":return this[i](yi.d8.vertices,yi.d8.faces,e,0,-Math.PI/4/2,.965);case"d10":return this[i](yi.d10.vertices,yi.d10.faces,e,.3,Math.PI,.945);case"d12":return this[i](yi.d12.vertices,yi.d12.faces,e,.2,-Math.PI/4/2,.968);case"d20":return this[i](yi.d20.vertices,yi.d20.faces,e,-.2,-Math.PI/4/2,.955);default:return console.error(`Geometry for ${n} is not available`),null}}fixmaterials(n,e){for(let i=0,r=n.geometry.groups.length;i<r;++i){var t=n.geometry.groups[i].materialIndex-2;if(t<e)continue;let a=t%e;n.geometry.groups[i].materialIndex=a+2}return n.geometry.elementsNeedUpdate=!0,n}create_shape(n,e,t){for(var i=new Array(n.length),r=0;r<n.length;++r)i[r]=new B().fromArray(n[r]).normalize();for(var a=new Array(n.length),o=new Array(e.length),r=0;r<i.length;++r){var s=i[r];a[r]=new M(s.x*t,s.y*t,s.z*t)}for(var r=0;r<e.length;++r)o[r]=e[r].slice(0,e[r].length-1);return new Jr({vertices:a,faces:o})}make_geom(n,e,t,i,r){let a=new Wi;for(let m=0;m<n.length;++m)n[m]=n[m].multiplyScalar(t);let o=[];const s=[],l=[],c=new B,u=new B;let d,h=0;for(let m=0;m<e.length;++m){let g=e[m],f=g.length-1,p=Math.PI*2/f;d=g[f]+1;for(let _=0;_<f-2;++_)o.push(...n[g[0]].toArray()),o.push(...n[g[_+1]].toArray()),o.push(...n[g[_+2]].toArray()),c.subVectors(n[g[_+2]],n[g[_+1]]),u.subVectors(n[g[0]],n[g[_+1]]),c.cross(u),c.normalize(),s.push(...c.toArray()),s.push(...c.toArray()),s.push(...c.toArray()),l.push((Math.cos(r)+1+i)/2/(1+i),(Math.sin(r)+1+i)/2/(1+i)),l.push((Math.cos(p*(_+1)+r)+1+i)/2/(1+i),(Math.sin(p*(_+1)+r)+1+i)/2/(1+i)),l.push((Math.cos(p*(_+2)+r)+1+i)/2/(1+i),(Math.sin(p*(_+2)+r)+1+i)/2/(1+i));let v=(f-2)*3;for(let _=0;_<v/3;_++)a.addGroup(h,3,d),h+=3}return a.setAttribute("position",new Wt(o,3)),a.setAttribute("normal",new Wt(s,3)),a.setAttribute("uv",new Wt(l,2)),a.boundingSphere=new ya(new B,t),a}make_d10_geom(n,e,t,i,r){let a=new Wi;for(let _=0;_<n.length;++_)n[_]=n[_].multiplyScalar(t);let o=[];const s=[],l=[],c=new B,u=new B;let d,h=0;for(let _=0;_<e.length;++_){let y=e[_],x=y.length-1,w=Math.PI*2/x;d=y[x]+1;var m=.65,g=.85,f=1-1*g,p=1-.895/1.105*g,v=1;for(let T=0;T<x-2;++T)o.push(...n[y[0]].toArray()),o.push(...n[y[T+1]].toArray()),o.push(...n[y[T+2]].toArray()),c.subVectors(n[y[T+2]],n[y[T+1]]),u.subVectors(n[y[0]],n[y[T+1]]),c.cross(u),c.normalize(),s.push(...c.toArray()),s.push(...c.toArray()),s.push(...c.toArray()),e[_][e[_].length-1]==-1||T>=2?(l.push((Math.cos(r)+1+i)/2/(1+i),(Math.sin(r)+1+i)/2/(1+i)),l.push((Math.cos(w*(T+1)+r)+1+i)/2/(1+i),(Math.sin(w*(T+1)+r)+1+i)/2/(1+i)),l.push((Math.cos(w*(T+2)+r)+1+i)/2/(1+i),(Math.sin(w*(T+2)+r)+1+i)/2/(1+i))):T==0?(l.push(.5-m/2,p),l.push(.5,f),l.push(.5+m/2,p)):T==1&&(l.push(.5-m/2,p),l.push(.5+m/2,p),l.push(.5,v));let S=(x-2)*3;for(let T=0;T<S/3;T++)a.addGroup(h,3,d),h+=3}return a.setAttribute("position",new Wt(o,3)),a.setAttribute("normal",new Wt(s,3)),a.setAttribute("uv",new Wt(l,2)),a.boundingSphere=new ya(new B,t),a}chamfer_geom(n,e,t){for(var i=[],r=[],a=new Array(n.length),o=0;o<n.length;++o)a[o]=[];for(var o=0;o<e.length;++o){for(var s=e[o],l=s.length-1,c=new B,u=new Array(l),d=0;d<l;++d){var h=n[s[d]].clone();c.add(h),a[s[d]].push(u[d]=i.push(h)-1)}c.divideScalar(l);for(var d=0;d<l;++d){var h=i[u[d]];h.subVectors(h,c).multiplyScalar(t).addVectors(h,c)}u.push(s[l]),r.push(u)}for(var o=0;o<e.length-1;++o)for(var d=o+1;d<e.length;++d){for(var m=[],g=-1,f=0;f<e[o].length-1;++f){var p=e[d].indexOf(e[o][f]);p>=0&&p<e[d].length-1&&(g>=0&&f!=g+1?m.unshift([o,f],[d,p]):m.push([o,f],[d,p]),g=f)}m.length==4&&r.push([r[m[0][0]][m[0][1]],r[m[1][0]][m[1][1]],r[m[3][0]][m[3][1]],r[m[2][0]][m[2][1]],-1])}for(var o=0;o<a.length;++o){for(var v=a[o],u=[v[0]],_=v.length-1;_;){for(var f=e.length;f<r.length;++f){var y=r[f].indexOf(u[u.length-1]);if(y>=0&&y<4){--y==-1&&(y=3);var x=r[f][y];if(v.indexOf(x)>=0){u.push(x);break}}}--_}u.push(-1),r.push(u)}return{vectors:i,faces:r}}create_geom(n,e,t,i,r,a){for(var o=new Array(n.length),s=0;s<n.length;++s)o[s]=new B().fromArray(n[s]).normalize();var l=this.chamfer_geom(o,e,a);if(e.length!=10)var c=this.make_geom(l.vectors,l.faces,t,i,r);else var c=this.make_d10_geom(l.vectors,l.faces,t,i,r);return c.cannon_shape=this.create_shape(n,e,t),c.name="d"+e.length,c}};let Rh=pa;Jg(Rh,"dice",{});const Oo={cloudy:{name:"Clouds (Transparent)",composite:"destination-in",source:"textures/cloudy.webp",source_bump:"textures/cloudy.alt.webp"},cloudy_2:{name:"Clouds",composite:"multiply",source:"textures/cloudy.alt.webp",source_bump:"textures/cloudy.alt.webp"},fire:{name:"Fire",composite:"multiply",source:"textures/fire.webp",source_bump:"textures/fire.webp",material:"metal"},marble:{name:"Marble",composite:"multiply",source:"textures/marble.webp",source_bump:"",material:"glass"},water:{name:"Water",composite:"destination-in",source:"textures/water.webp",source_bump:"textures/water.webp",material:"glass"},ice:{name:"Ice",composite:"destination-in",source:"textures/ice.webp",source_bump:"textures/ice.webp",material:"glass"},paper:{name:"Paper",composite:"multiply",source:"textures/paper.webp",source_bump:"textures/paper-bump.webp",material:"wood"},speckles:{name:"Speckles",composite:"multiply",source:"textures/speckles.webp",source_bump:"textures/speckles.webp",material:"none"},glitter:{name:"Glitter",composite:"multiply",source:"textures/glitter.webp",source_bump:"textures/glitter-bump.webp",material:"none"},glitter_2:{name:"Glitter (Transparent)",composite:"destination-in",source:"textures/glitter-alpha.webp",source_bump:"",material:"none"},stars:{name:"Stars",composite:"multiply",source:"textures/stars.webp",source_bump:"textures/stars.webp",material:"none"},stainedglass:{name:"Stained Glass",composite:"multiply",source:"textures/stainedglass.webp",source_bump:"textures/stainedglass-bump.webp",material:"glass"},wood:{name:"Wood",composite:"multiply",source:"textures/wood.webp",source_bump:"textures/wood.webp",material:"wood"},metal:{name:"Stainless Steel",composite:"multiply",source:"textures/metal.webp",source_bump:"textures/metal-bump.webp",material:"metal"},skulls:{name:"Skulls",composite:"multiply",source:"textures/skulls.webp",source_bump:"textures/skulls.webp"},leopard:{name:"Leopard",composite:"multiply",source:"textures/leopard.webp",source_bump:"textures/leopard.webp",material:"wood"},tiger:{name:"Tiger",composite:"multiply",source:"textures/tiger.webp",source_bump:"textures/tiger.webp",material:"wood"},cheetah:{name:"Cheetah",composite:"multiply",source:"textures/cheetah.webp",source_bump:"textures/cheetah.webp",material:"wood"},dragon:{name:"Dragon",composite:"multiply",source:"textures/dragon.webp",source_bump:"textures/dragon-bump.webp",material:"none"},lizard:{name:"Lizard",composite:"multiply",source:"textures/lizard.webp",source_bump:"textures/lizard.webp",material:"none"},bird:{name:"Bird",composite:"multiply",source:"textures/feather.webp",source_bump:"textures/feather-bump.webp",material:"wood"},astral:{name:"Astral Sea",composite:"multiply",source:"textures/astral.webp",source_bump:"textures/stars.webp",material:"none"},acleaf:{name:"AC Leaf",composite:"multiply",source:"textures/acleaf.webp",source_bump:"textures/acleaf.webp",material:"none"},thecage:{name:"Nicholas Cage",composite:"multiply",source:"textures/thecage.webp",source_bump:"",material:"metal"},isabelle:{name:"Isabelle",composite:"source-over",source:"textures/isabelle.webp",source_bump:"",material:"none"},bronze01:{name:"bronze01",composite:"difference",source:"textures/bronze01.webp",source_bump:"",material:"metal"},bronze02:{name:"bronze02",composite:"difference",source:"textures/bronze02.webp",source_bump:"",material:"metal"},bronze03:{name:"bronze03",composite:"difference",source:"textures/bronze03.webp",source_bump:"",material:"metal"},bronze03a:{name:"bronze03a",composite:"difference",source:"textures/bronze03a.webp",source_bump:"",material:"metal"},bronze03b:{name:"bronze03b",composite:"difference",source:"textures/bronze03b.webp",source_bump:"",material:"metal"},bronze04:{name:"bronze04",composite:"difference",source:"textures/bronze04.webp",source_bump:"",material:"metal"},none:{name:"none",composite:"source-over",source:"",source_bump:"",material:""},"":{name:"~ Preset ~",composite:"source-over",source:"",source_bump:"",material:""}},eu={coin_default:{name:"Gold Coin",description:"Gold Dragonhead Coin",category:"Other",foreground:"#f6c928",background:"#f6c928",outline:"none",texture:"metal"},coin_silver:{name:"Silver Coin",description:"Gold Dragonhead Coin",category:"Other",foreground:"#f6c928",background:"#f6c928",outline:"none",texture:"metal"},radiant:{name:"Radiant",category:"Damage Types",foreground:"#F9B333",background:"#FFFFFF",outline:"",texture:"paper",description:"Radiant"},fire:{name:"Fire",category:"Damage Types",foreground:"#f8d84f",background:["#f8d84f","#f9b02d","#f43c04","#910200","#4c1009"],outline:"black",texture:"fire",description:"Fire"},ice:{name:"Ice",category:"Damage Types",foreground:"#60E9FF",background:["#214fa3","#3c6ac1","#253f70","#0b56e2","#09317a"],outline:"black",texture:"ice",description:"Ice"},poison:{name:"Poison",category:"Damage Types",foreground:"#D6A8FF",background:["#313866","#504099","#66409e","#934fc3","#c949fc"],outline:"black",texture:"cloudy",description:"Poison"},acid:{name:"Acid",category:"Damage Types",foreground:"#A9FF70",background:["#a6ff00","#83b625","#5ace04","#69f006","#b0f006","#93bc25"],outline:"black",texture:"marble",description:"Acid"},thunder:{name:"Thunder",category:"Damage Types",foreground:"#FFC500",background:"#7D7D7D",outline:"black",texture:"cloudy",description:"Thunder"},lightning:{name:"Lightning",category:"Damage Types",foreground:"#FFC500",background:["#f17105","#f3ca40","#eddea4","#df9a57","#dea54b"],outline:"#7D7D7D",texture:"ice",description:"Lightning"},air:{name:"Air",category:"Damage Types",foreground:"#ffffff",background:["#d0e5ea","#c3dee5","#a4ccd6","#8dafb7","#80a4ad"],outline:"black",texture:"cloudy",description:"Air"},water:{name:"Water",category:"Damage Types",foreground:"#60E9FF",background:["#87b8c4","#77a6b2","#6b98a3","#5b8691","#4b757f"],outline:"black",texture:"water",description:"Water"},earth:{name:"Earth",category:"Damage Types",foreground:"#6C9943",background:["#346804","#184200","#527f22","#3a1d04","#56341a","#331c17","#5a352a","#302210"],outline:"black",texture:"speckles",description:"Earth"},force:{name:"Force",category:"Damage Types",foreground:"white",background:["#FF97FF","#FF68FF","#C651C6"],outline:"#570000",texture:"stars",description:"Force"},psychic:{name:"Psychic",category:"Damage Types",foreground:"#D6A8FF",background:["#313866","#504099","#66409E","#934FC3","#C949FC","#313866"],outline:"black",texture:"speckles",description:"Psychic"},necrotic:{name:"Necrotic",category:"Damage Types",foreground:"#ffffff",background:"#6F0000",outline:"black",texture:"skulls",description:"Necrotic"},breebaby:{name:"Pastel Sunset",category:"Custom Sets",foreground:["#5E175E","#564A5E","#45455E","#3D5A5E","#1E595E","#5E3F3D","#5E1E29","#283C5E","#25295E"],background:["#FE89CF","#DFD4F2","#C2C2E8","#CCE7FA","#A1D9FC","#F3C3C2","#EB8993","#8EA1D2","#7477AD"],outline:"white",texture:"marble",description:"Pastel Sunset, for Breyanna"},pinkdreams:{name:"Pink Dreams",category:"Custom Sets",foreground:"white",background:["#ff007c","#df73ff","#f400a1","#df00ff","#ff33cc"],outline:"#570000",texture:"skulls",description:"Pink Dreams, for Ethan"},inspired:{name:"Inspired",category:"Custom Sets",foreground:"#FFD800",background:"#C4C4B6",outline:"#8E8E86",texture:"none",description:"Inspired, for Austin"},bloodmoon:{name:"Blood Moon",category:"Custom Sets",foreground:"#CDB800",background:"#6F0000",outline:"black",texture:"marble",description:"Blood Moon, for Jared"},starynight:{name:"Stary Night",category:"Custom Sets",foreground:"#4F708F",background:["#091636","#233660","#4F708F","#8597AD","#E2E2E2"],outline:"white",texture:"speckles",description:"Stary Night, for Mai"},glitterparty:{name:"Glitter Party",category:"Custom Sets",foreground:"white",background:["#FFB5F5","#7FC9FF","#A17FFF"],outline:"none",texture:"glitter",description:"Glitter Party, for Austin"},astralsea:{name:"Astral Sea",category:"Custom Sets",foreground:"#565656",background:"white",outline:"none",texture:"astral",description:"The Astral Sea, for Austin"},bronze:{name:"Thylean Bronze",description:"Thylean Bronze by @SpencerThayer",category:"Custom Sets",foreground:["#FF9159","#FFB066","#FFBF59","#FFD059"],background:["#705206","#7A4E06","#643100","#7A2D06"],outline:["#3D2D03","#472D04","#301700","#471A04"],edge:["#FF5D0D","#FF7B00","#FFA20D","#FFBA0D"],texture:["bronze01","bronze02","bronze03","bronze03a","bronze03b","bronze04"]},dragons:{name:"Here be Dragons",category:"Custom Sets",foreground:"#FFFFFF",background:["#B80000","#4D5A5A","#5BB8FF","#7E934E","#FFFFFF","#F6ED7C","#7797A3","#A78437","#862C1A","#FFDF8A"],outline:"black",texture:["dragon","lizard"],description:"Here be Dragons"},birdup:{name:"Bird Up",category:"Custom Sets",foreground:"#FFFFFF",background:["#F11602","#FFC000","#6EC832","#0094BC","#05608D","#FEABB3","#F75680","#F3F0DF","#C7A57F"],outline:"black",texture:"bird",description:"Bird Up!"},tigerking:{name:"Tiger King",category:"Other",foreground:"#ffffff",background:"#FFCC40",outline:"black",texture:["leopard","tiger","cheetah"],description:"Leopard Print"},covid:{name:"COViD",category:"Other",foreground:"#A9FF70",background:["#a6ff00","#83b625","#5ace04","#69f006","#b0f006","#93bc25"],outline:"black",texture:"fire",description:"Covid-19"},acleaf:{name:"Animal Crossing",category:"Other",foreground:"#00FF00",background:"#07540A",outline:"black",texture:"acleaf",description:"Animal Crossing Leaf"},isabelle:{name:"Isabelle",category:"Other",foreground:"white",background:"#FEE5CC",outline:"black",texture:"isabelle",description:"Isabelle"},thecage:{name:"Nicholas Cage",category:"Other",foreground:"#ffffff",background:"#ffffff",outline:"black",texture:"thecage",description:"Nicholas Cage"},test:{name:"Test",category:"Colors",foreground:["#00FF00","#0000FF","#FF0000"],background:["#FF0000","#00FF00","#0000FF"],outline:"black",texture:"none",description:"Test"},rainbow:{name:"Rainblow",category:"Colors",foreground:["#FF5959","#FFA74F","#FFFF56","#59FF59","#2374FF","#00FFFF","#FF59FF"],background:["#900000","#CE3900","#BCBC00","#00B500","#00008E","#008282","#A500A5"],outline:"black",texture:"none",description:"Rainblow"},black:{name:"Black",category:"Colors",foreground:"#ffffff",background:"#000000",outline:"black",texture:"none",description:"Black"},white:{name:"White",category:"Colors",foreground:"#000000",background:"#FFFFFF",outline:"#FFFFFF",texture:"none",description:"White"},swrpg_abi:{name:"Star Wars RPG - Ability",category:"Star Wars™ RPG",foreground:"#00FF00",background:["#3D9238","#52B848","#5EAC56","#9ECB9A"],outline:"#000000",texture:"cloudy_2",description:"Star Wars™ RPG Ability Dice"},swrpg_pro:{name:"Star Wars RPG - Proficiency",category:"Star Wars™ RPG",foreground:"#FFFF00",background:["#CABB1C","#F9E33B","#FFE900","#F0E49D"],outline:"#000000",texture:"paper",description:"Star Wars™ RPG Proficiency Dice"},swrpg_dif:{name:"Star Wars RPG - Difficulty",category:"Star Wars™ RPG",foreground:"#8000FC",background:["#39165F","#664B84","#50247E","#745F88"],outline:"#000000",texture:"cloudy_2",description:"Star Wars™ RPG Difficulty Dice"},swrpg_cha:{name:"Star Wars RPG - Challenge",category:"Star Wars™ RPG",foreground:"#FF0000",background:["#A91F32","#EB4254","#E51836","#BA3645"],outline:"#000000",texture:"paper",description:"Star Wars™ RPG Challenge Dice"},swrpg_boo:{name:"Star Wars RPG - Boost",category:"Star Wars™ RPG",foreground:"#00FFFF",background:["#4B9DC6","#689FC4","#85CFF2","#8FC0D8"],outline:"#000000",texture:"glitter",description:"Star Wars™ RPG Boost Dice"},swrpg_set:{name:"Star Wars RPG - Setback",category:"Star Wars™ RPG",foreground:"#111111",background:["#252223","#241F21","#282828","#111111"],outline:"#ffffff",texture:"glitter",description:"Star Wars™ RPG Setback Dice"},swrpg_for:{name:"Star Wars RPG - Force",category:"Star Wars™ RPG",foreground:"#000000",background:["#F3F3F3","#D3D3D3","#BABABA","#FFFFFF"],outline:"#FFFFFF",texture:"stars",description:"Star Wars™ RPG Force Dice"},swa_red:{name:"Armada Attack - Red",category:"Star Wars™ Armada",foreground:"#ffffff",background:["#440D19","#8A1425","#C72336","#C04551"],outline:"none",texture:"stainedglass",description:"Star Wars™ Armada Red Attack Dice"},swa_blue:{name:"Armada Attack - Blue",category:"Star Wars™ Armada",foreground:"#ffffff",background:["#212642","#28286E","#2B348C","#3D4BB5","#5D64AB"],outline:"none",texture:"stainedglass",description:"Star Wars™ Armada Blue Attack Dice"},swa_black:{name:"Armada Attack - Black",category:"Star Wars™ Armada",foreground:"#ffffff",background:["#252223","#241F21","#282828","#111111"],outline:"none",texture:"stainedglass",description:"Star Wars™ Armada Black Attack Dice"},xwing_red:{name:"X-Wing Attack - Red",category:"Star Wars™ X-Wing",foreground:"#ffffff",background:["#440D19","#8A1425","#C72336","#C04551"],outline:"none",texture:"stars",description:"Star Wars™ X-Wing Red Attack Dice"},xwing_green:{name:"X-Wing Attack - Green",category:"Star Wars™ X-Wing",foreground:"#ffffff",background:["#3D9238","#52B848","#5EAC56","#9ECB9A"],outline:"none",texture:"stars",description:"Star Wars™ X-Wing Green Attack Dice"},swl_atkred:{name:"Legion Attack - Red",category:"Star Wars™ Legion",foreground:"#ffffff",background:["#440D19","#8A1425","#C72336","#C04551"],outline:"none",texture:"fire",description:"Star Wars™ Legion Red Attack Dice"},swl_atkblack:{name:"Legion Attack - Black",category:"Star Wars™ Legion",foreground:"#ffffff",background:["#252223","#241F21","#282828","#111111"],outline:"none",texture:"fire",description:"Star Wars™ Legion Black Attack Dice"},swl_atkwhite:{name:"Legion Attack - White",category:"Star Wars™ Legion",foreground:"#000000",background:["#ffffff","#DFF4FA","#BCBCBC","#F1EDE2","#F2ECE0"],outline:"none",texture:"fire",description:"Star Wars™ Legion White Attack Dice"},swl_defred:{name:"Legion Defense - Red",category:"Star Wars™ Legion",foreground:"#ffffff",background:["#440D19","#8A1425","#C72336","#C04551"],outline:"none",texture:"fire",description:"Star Wars™ Legion Red Defense Dice"},swl_defwhite:{name:"Legion Defense - White",category:"Star Wars™ Legion",foreground:"#000000",background:["#ffffff","#DFF4FA","#BCBCBC","#F1EDE2","#F2ECE0"],outline:"none",texture:"fire",description:"Star Wars™ Legion White Defense Dice"}};class Nw{constructor(e={}){this.colorsets=[],this.assetPath=e.assetPath}async ImageLoader(e){if(Array.isArray(e)){for(let t=0,i=e.length;t<i;t++)e[t]=await this.ImageLoader(e[t]);return e}return e.source&&e.source!=""&&(e.texture=await this.loadImage(e.source)),e.source_bump&&e.source_bump!=""&&(e.bump=await this.loadImage(e.source_bump)),e}loadImage(e){return new Promise((t,i)=>{let r=new Image;r.onload=()=>t(r),r.crossOrigin="anonymous",r.src=this.assetPath+e,r.onerror=a=>i(a)}).catch(t=>{console.error("Unable to load image texture")})}async getColorSet(e){let t,i;if(typeof e=="string"&&(t=e),typeof e=="object"&&(t=e.colorset),this.colorsets.hasOwnProperty(t))return this.colorsets[t];let r=eu[t];return i=e.texture||r.texture,r.texture=this.getTexture(i),r.texture=await this.ImageLoader(r.texture),e.material&&(r.texture.material=e.material),this.colorsets[t]=r,r}async makeColorSet(e={}){if(this.colorsets.hasOwnProperty(e.name))return this.colorsets[e.name];let t=eu.white,i=Object.assign({},t,e),r=this.getTexture(i.texture);return i.texture=await this.ImageLoader(r),e.material&&(i.texture.material=e.material),i.name.toLowerCase()==="white"&&(i.name=`${Date.now()}`),this.colorsets[i.name]=i,i}getTexture(e){if(Array.isArray(e)){let t=[];for(let i=0,r=e.length;i<r;i++)t.push(this.getTexture(e[i]));return t}return Oo.hasOwnProperty(e)?Oo[e]:Oo.none}}const kw={default:{name:"Solid Color",author:"MajorVictory",showColorPicker:!0,surface:"wood_tray",colors:{fg:"#9794ff",bg:"#0b1a3e"},cubeMap:["envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg"]},"blue-felt":{name:"Blue Felt",author:"MajorVictory",showColorPicker:!0,surface:"felt",colors:{fg:"#9794ff",bg:"#0b1a3e"},cubeMap:["envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg"]},"red-felt":{name:"Red Felt",author:"MajorVictory",showColorPicker:!0,surface:"felt",colors:{fg:"#ff9494",bg:"#4d1e1e"},cubeMap:["envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg"]},"green-felt":{name:"Green Felt",author:"MajorVictory",showColorPicker:!0,surface:"felt",colors:{fg:"#97ff94",bg:"#244d1e"},cubeMap:["envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg"]},taverntable:{name:"Old Tavern Table",author:"MajorVictory",showColorPicker:!0,surface:"wood_table",colors:{fg:"#9794ff",bg:"#0b1a3e"},cubeMap:["px.png","nx.png","py.png","ny.png","pz.png","nz.png"]},mahogany:{name:"(Mah-Hog-Any)",author:"MajorVictory",showColorPicker:!0,surface:"wood_table",colors:{fg:"#9794ff",bg:"#0b1a3e"},cubeMap:["px.png","nx.png","py.png","ny.png","pz.png","nz.png"]},stainless:{name:"Stainless Steel",author:"MajorVictory",showColorPicker:!0,surface:"metal",colors:{fg:"#9794ff",bg:"#0b1a3e"},cubeMap:["px.png","nx.png","py.png","ny.png","pz.png","nz.png"]},cyberpunk:{name:"Neo-New-Future-City",author:"MajorVictory",showColorPicker:!0,surface:"metal",colors:{fg:"#3494A6",bg:"#440B28"},cubeMap:["px.png","nx.png","py.png","ny.png","pz.png","nz.png"]},cagetown:{name:"Cage Town",author:"MajorVictory",showColorPicker:!0,surface:"wood_table",colors:{fg:"#D7A866",bg:"#282811"},cubeMap:["px.png","nx.png","py.png","ny.png","pz.png","nz.png"]}},Ow=n=>{let e;return function(){let t=this,i=arguments;e&&window.cancelAnimationFrame(e),e=window.requestAnimationFrame(function(){n.apply(t,i)})}},Bw={assetPath:"./",framerate:1/60,sounds:!1,volume:100,color_spotlight:15720405,shadows:!0,theme_surface:"green-felt",sound_dieMaterial:"plastic",theme_customColorset:null,theme_colorset:"white",theme_texture:"",theme_material:"glass",gravity_multiplier:400,light_intensity:.7,baseScale:100,strength:1,iterationLimit:1e3,onRollComplete:()=>{},onRerollComplete:()=>{},onAddDiceComplete:()=>{},onRemoveDiceComplete:()=>{}};class Uw{constructor(e,t={}){this.initialized=!1,this.container=document.querySelector(e),this.dimensions=new $e(this.container.clientWidth,this.container.clientHeight),this.adaptive_timestep=!1,this.last_time=0,this.running=!1,this.rolling=!1,this.threadid,this.display={currentWidth:null,currentHeight:null,containerWidth:null,containerHeight:null,aspect:null,scale:null},this.cameraHeight={max:null,close:null,medium:null,far:null},this.scene=new Ky,this.world=new Ew,this.dice_body_material=new Qr,this.sounds_table={},this.sounds_dice=[],this.lastSoundType="",this.lastSoundStep=0,this.lastSound=0,this.iteration,this.renderer,this.barrier,this.camera,this.light,this.light_amb,this.desk,this.box_body={},this.bodies=[],this.meshes=[],this.diceList=[],this.notationVectors=null,this.dieIndex=0,this.soundDelay=10,this.animstate="",this.selector={animate:!0,rotate:!0,intersected:null,dice:[]},Object.assign(this,Bw,t),this.DiceColors=new Nw({assetPath:this.assetPath}),this.DiceFactory=new Rh({baseScale:this.baseScale}),this.DiceFactory.setBumpMapping(!0),this.surface=kw[this.theme_surface].surface}enableShadows(){this.shadows=!0,this.renderer&&(this.renderer.shadowMap.enabled=this.shadows),this.light&&(this.light.castShadow=this.shadows),this.desk&&(this.desk.receiveShadow=this.shadows)}disableShadows(){this.shadows=!1,this.renderer&&(this.renderer.shadowMap.enabled=this.shadows),this.light&&(this.light.castShadow=this.shadows),this.desk&&(this.desk.receiveShadow=this.shadows)}async initialize(){this.renderer=new yh({antialias:!0,alpha:!0}),this.container.appendChild(this.renderer.domElement),this.renderer.shadowMap.enabled=this.shadows,this.renderer.shadowMap.type=2,this.renderer.setClearColor(0,0),this.setDimensions(this.dimensions),this.world.gravity.set(0,0,-9.8*this.gravity_multiplier),this.world.broadphase=new Mh,this.world.solver.iterations=14,this.world.allowSleep=!0,this.makeWorldBox(),this.resizeWorld(),await this.loadTheme({colorset:this.theme_colorset,texture:this.theme_texture,material:this.theme_material}).catch(e=>{throw new Error("Unable to load theme")}),this.sounds&&await this.loadSounds().catch(e=>{throw new Error("Unable to load sounds")}),this.initialized=!0,this.renderer.render(this.scene,this.camera)}makeWorldBox(){Object.keys(this.box_body).length&&(this.world.removeBody(this.box_body.desk),this.world.removeBody(this.box_body.topWall),this.world.removeBody(this.box_body.bottomWall),this.world.removeBody(this.box_body.leftWall),this.world.removeBody(this.box_body.rightWall));const e=new Qr,t=new Qr;this.world.addContactMaterial(new Kr(e,this.dice_body_material,{mass:0,friction:.6,restitution:.5})),this.world.addContactMaterial(new Kr(t,this.dice_body_material,{mass:0,friction:.6,restitution:1})),this.world.addContactMaterial(new Kr(this.dice_body_material,this.dice_body_material,{mass:0,friction:.6,restitution:.5})),this.box_body.desk=new ue({allowSleep:!1,mass:0,shape:new aa,material:e}),this.world.addBody(this.box_body.desk),this.box_body.topWall=new ue({allowSleep:!1,mass:0,shape:new aa,material:t}),this.box_body.topWall.quaternion.setFromAxisAngle(new M(1,0,0),Math.PI/2),this.box_body.topWall.position.set(0,this.display.containerHeight*.93,0),this.world.addBody(this.box_body.topWall),this.box_body.bottomWall=new ue({allowSleep:!1,mass:0,shape:new aa,material:t}),this.box_body.bottomWall.quaternion.setFromAxisAngle(new M(1,0,0),-Math.PI/2),this.box_body.bottomWall.position.set(0,-this.display.containerHeight*.93,0),this.world.addBody(this.box_body.bottomWall),this.box_body.leftWall=new ue({allowSleep:!1,mass:0,shape:new aa,material:t}),this.box_body.leftWall.quaternion.setFromAxisAngle(new M(0,1,0),-Math.PI/2),this.box_body.leftWall.position.set(this.display.containerWidth*.93,0,0),this.world.addBody(this.box_body.leftWall),this.box_body.rightWall=new ue({allowSleep:!1,mass:0,shape:new aa,material:t}),this.box_body.rightWall.quaternion.setFromAxisAngle(new M(0,1,0),Math.PI/2),this.box_body.rightWall.position.set(-this.display.containerWidth*.93,0,0),this.world.addBody(this.box_body.rightWall)}async loadTheme(e){let t;this.theme_customColorset?t=await this.DiceColors.makeColorSet(this.theme_customColorset):t=await this.DiceColors.getColorSet(e),this.DiceFactory.applyColorSet(t),this.colorData=t}async loadSounds(){let e={felt:7,wood_table:7,wood_tray:7,metal:9},t={coin:6,metal:12,plastic:15,wood:12};const i=this.colorData.texture.material.match(/wood|metal/g);if(this.sound_dieMaterial=i?this.colorData.texture.material:"plastic",!this.sounds_table.hasOwnProperty(this.surface)){this.sounds_table[this.surface]=[];let r=e[this.surface];for(let a=1;a<=r;++a){const o=await this.loadAudio(this.assetPath+"sounds/surfaces/surface_"+this.surface+a+".mp3");this.sounds_table[this.surface].push(o)}}if(!this.sounds_dice.hasOwnProperty("coin")){this.sounds_dice.coin=[];let r=t.coin;for(let a=1;a<=r;++a){const o=await this.loadAudio(this.assetPath+"sounds/dicehit/dicehit_coin"+a+".mp3");this.sounds_dice.coin.push(o)}}if(!this.sounds_dice.hasOwnProperty(this.sound_dieMaterial)){this.sounds_dice[this.sound_dieMaterial]=[];let r=t[this.sound_dieMaterial];for(let a=1;a<=r;++a){const o=await this.loadAudio(this.assetPath+"sounds/dicehit/dicehit_"+this.sound_dieMaterial+a+".mp3");this.sounds_dice[this.sound_dieMaterial].push(o)}}}loadAudio(e){return new Promise((t,i)=>{let r=new Audio;r.oncanplaythrough=()=>t(r),r.crossOrigin="anonymous",r.src=e,r.onerror=a=>i(a)}).catch(t=>{console.error("Unable to load audio")})}async updateConfig(e={}){Object.apply(this,e),this.theme_customColorset=e.theme_customColorset?e.theme_customColorset:null,e.theme_colorset&&(this.theme_colorset=e.theme_colorset),e.theme_texture&&(this.theme_texture=e.theme_texture),e.theme_material&&(this.theme_material=e.theme_material),(e.theme_colorset||e.theme_texture||e.theme_material||e.theme_customColorset)&&await this.loadTheme({colorset:this.theme_colorset,texture:this.theme_texture,material:this.theme_material})}setDimensions(e){switch(this.display.currentWidth=this.container.clientWidth/2,this.display.currentHeight=this.container.clientHeight/2,e?(this.display.containerWidth=e.x,this.display.containerHeight=e.y):(this.display.containerWidth=this.display.currentWidth,this.display.containerHeight=this.display.currentHeight),this.display.aspect=Math.min(this.display.currentWidth/this.display.containerWidth,this.display.currentHeight/this.display.containerHeight),this.display.scale=Math.sqrt(this.display.containerWidth*this.display.containerWidth+this.display.containerHeight*this.display.containerHeight)/13,this.makeWorldBox(),this.renderer.setSize(this.display.currentWidth*2,this.display.currentHeight*2),this.cameraHeight.max=this.display.currentHeight/this.display.aspect/Math.tan(10*Math.PI/180),this.cameraHeight.medium=this.cameraHeight.max/1.5,this.cameraHeight.far=this.cameraHeight.max,this.cameraHeight.close=this.cameraHeight.max/2,this.camera&&this.scene.remove(this.camera),this.camera=new si(20,this.display.currentWidth/this.display.currentHeight,1,this.cameraHeight.max*1.3),this.animstate){case"selector":this.camera.position.z=this.selector.dice.length>9?this.cameraHeight.far:this.selector.dice.length<6?this.cameraHeight.close:this.cameraHeight.medium;break;case"throw":case"afterthrow":default:this.camera.position.z=this.cameraHeight.far}this.camera.lookAt(new B(0,0,0));const t=Math.max(this.display.containerWidth,this.display.containerHeight);this.light&&this.scene.remove(this.light),this.light_amb&&this.scene.remove(this.light_amb),this.light=new ab(this.color_spotlight,this.light_intensity),this.light.position.set(-t/2,t/2,t*3),this.light.target.position.set(0,0,0),this.light.distance=t*5,this.light.angle=Math.PI/4,this.light.castShadow=this.shadows,this.light.shadow.camera.near=t/10,this.light.shadow.camera.far=t*5,this.light.shadow.camera.fov=50,this.light.shadow.bias=.001,this.light.shadow.mapSize.width=1024,this.light.shadow.mapSize.height=1024,this.scene.add(this.light),this.light_amb=new ib(16777147,6776689,this.light_intensity),this.scene.add(this.light_amb),this.desk&&this.scene.remove(this.desk);let i=new Qy;i.opacity=.5,this.desk=new Bi(new Os(this.display.containerWidth*6,this.display.containerHeight*6,1,1),i),this.desk.receiveShadow=this.shadows,this.scene.add(this.desk),this.renderer.render(this.scene,this.camera)}resizeWorld(){const e=Ow(()=>{const t=this.renderer.domElement,i=this.container.clientWidth,r=this.container.clientHeight,a=t.width!==i||t.height!==r;return a&&this.setDimensions(new $e(this.container.clientWidth,this.container.clientHeight)),a});window.addEventListener("resize",e)}vectorRand({x:e,y:t}){let i=Math.random()*Math.PI/5-Math.PI/5/2,r={x:e*Math.cos(i)-t*Math.sin(i),y:e*Math.sin(i)+t*Math.cos(i)};return r.x==0&&(r.x=.01),r.y==0&&(r.y=.01),r}getNotationVectors(e,t,i,r){let a=new Qc(e);for(let o in a.set){const s=this.DiceFactory.get(a.set[o].type);let l=a.set[o].num,c=a.set[o].op,u=a.set[o].sid,d=a.set[o].gid,h=a.set[o].glvl,m=a.set[o].func,g=a.set[o].args;for(let f=0;f<l;f++){let p=this.vectorRand(t);p.x/=r,p.y/=r;let v={x:this.display.containerWidth*(p.x>0?-1:1)*.9,y:this.display.containerHeight*(p.y>0?-1:1)*.9,z:Math.random()*200+200},_=Math.abs(p.x/p.y);_>1?v.y/=_:v.x*=_;let y=this.vectorRand(t);y.x/=r,y.y/=r;let x,w,S;s.shape!="d2"?(x={x:y.x*i,y:y.y*i,z:-10},w={x:-(Math.random()*p.y*5+s.inertia*p.y),y:Math.random()*p.x*5+s.inertia*p.x,z:0},S={x:Math.random(),y:Math.random(),z:Math.random(),a:Math.random()}):(x={x:y.x*i/10,y:y.y*i/10,z:3e3},w={x:12*s.inertia,y:1*s.inertia,z:0},S={x:1,y:1,z:Math.random(),a:Math.random()}),a.vectors.push({index:this.dieIndex++,type:s.type,op:c,sid:u,gid:d,glvl:h,func:m,args:g,pos:v,velocity:x,angle:w,axis:S})}}return a}swapDiceFace(e,t){const i=this.DiceFactory.get(e.notation.type);if(e.resultReason="forced",i.shape=="d4"){this.swapDiceFace_D4(e,t);return}i.values;let r=parseInt(e.getLastValue().value);t=parseInt(t),e.notation.type=="d10"&&r==0&&(r=10),e.notation.type=="d100"&&r==0&&(r=100),e.notation.type=="d100"&&r>0&&r<10&&(r*=10),e.notation.type=="d10"&&t==0&&(t=10),e.notation.type=="d100"&&t==0&&(t=100),e.notation.type=="d100"&&t>0&&t<10&&(t*=10);let a=i.values.indexOf(r),o=i.values.indexOf(t);if(a<0||o<0||a==o)return;let s=e.geometry.clone(),l=[],c=[],u=2;i.shape=="d10"&&(u=1);let d,h=o+u;i.shape!="d2"?(d=a+u,h=o+u):(d=a+1,h=o+1);for(var m=0,g=s.groups.length;m<g;++m){const f=s.groups[m].materialIndex;if(f==d){l.push(m);continue}if(f==h){c.push(m);continue}}if(!(l.length<=0||c.length<=0)){for(let f=0,p=c.length;f<p;f++)s.groups[c[f]].materialIndex=d;for(let f=0,p=l.length;f<p;f++)s.groups[l[f]].materialIndex=h;e.geometry=s,e.result=[]}}swapDiceFace_D4(e,t){const i=this.DiceFactory.get(e.notation.type);let r=parseInt(e.getLastValue().value);if(t=parseInt(t),!(r>=1&&r<=4))return;let a=t-r,o=e.geometry.clone();for(let s=0,l=o.groups.length;s<l;++s){const c=o.groups[s];let u=c.materialIndex;if(u!=0){for(u+=a-1;u>4;)u-=4;for(;u<1;)u+=4;c.materialIndex=u+1}}a!=0&&(a<0&&(a+=4),e.material=this.DiceFactory.createMaterials(i,0,0,!1,a)),e.geometry=o}spawnDice(e,t=!1){const{pos:i,axis:r,angle:a,velocity:o}=e;let s;if(t)s=t,s.stopped=0,this.world.removeBody(s.body);else{if(s=this.DiceFactory.create(e.type,this.colorData),!s)return;s.notation=e,s.result=[],s.stopped=0,s.castShadow=this.shadows,this.scene.add(s),this.diceList.push(s)}s.body=new ue({allowSleep:!0,sleepSpeedLimit:75,sleepTimeLimit:.9,mass:s.mass,shape:s.geometry.cannon_shape,material:this.dice_body_material}),s.body.type=ue.DYNAMIC,s.body.position.set(i.x,i.y,i.z),s.body.quaternion.setFromAxisAngle(new M(r.x,r.y,r.z),r.a*Math.PI*2),s.body.angularVelocity.set(a.x,a.y,a.z),s.body.velocity.set(o.x,o.y,o.z),s.body.linearDamping=.1,s.body.angularDamping=.1,s.body.diceShape=s.shape,s.body.sleepState=0,s.body.addEventListener("collide",this.eventCollide.bind(this)),this.world.addBody(s.body)}eventCollide({body:e,target:t}){if(this.animstate=="simulate"||!this.sounds||!e||this.volume<=0)return;let i=Date.now(),r=e.mass>0?"dice":"table";if(!((this.lastSoundStep==e.world.stepnumber||this.lastSound>i)&&r!="dice")&&!((this.lastSoundStep==e.world.stepnumber||this.lastSound>i)&&r=="dice"&&this.lastSoundType=="dice")){if(e.mass>0){let a=e.velocity.length();if(a<250)return;let o;e.diceShape==="d2"?o=this.sounds_dice.coin[Math.floor(Math.random()*this.sounds_dice.coin.length)]:o=this.sounds_dice[this.sound_dieMaterial][Math.floor(Math.random()*this.sounds_dice[this.sound_dieMaterial].length)],o&&(o.volume=Math.min(a/8e3,this.volume/100),o.play().catch(s=>{})),this.lastSoundType="dice"}else{let a=t.velocity.length();if(a<250)return;let o=this.surface,s=this.sounds_table[o],l=s[Math.floor(Math.random()*s.length)];l&&(l.volume=Math.min(a/8e3,this.volume/100),l.play().catch(c=>{})),this.lastSoundType="table"}this.lastSoundStep=e.world.stepnumber,this.lastSound=i+this.soundDelay}}checkForRethrow(e){return e.notation.func&&e.notation.func.toLowerCase(),!1}throwFinished(){const e=this.iteration>this.iterationLimit;for(let t=0,i=this.diceList.length;t<i;++t){const r=this.diceList[t],a=ue.SLEEPING;if(r.body.sleepState<a&&!e)return!1;if(r.body.sleepState==a||e){if(r.body.type===ue.KINEMATIC)continue;let o=!1;if(r.result.length==0?(r.storeRolledValue(r.resultReason),o=this.checkForRethrow(r)):r.result.length>0&&r.rerolling&&(r.rerolling=!1,r.storeRolledValue("reroll"),o=this.checkForRethrow(r)),o)return r.rerolls+=1,r.rerolling=!0,r.body.wakeUp(),r.body.type=ue.DYNAMIC,r.body.angularVelocity=new M(25,25,25),r.body.velocity=new M(0,0,3e3),!1;r.rerolling=!1,r.body.type=ue.KINEMATIC}}return!0}simulateThrow(){for(this.animstate="simulate",this.iteration=0,this.rolling=!0;!this.throwFinished(!0);)++this.iteration,this.world.step(this.framerate)}animateThrow(e,t){this.animstate="throw";let i=Date.now();this.last_time=this.last_time||i-this.framerate*1e3;let r=(i-this.last_time)/1e3;++this.iteration;let a=Math.floor(r/this.framerate);for(let o=0;o<a;o++)this.world.step(this.framerate),++this.steps;for(let o in this.scene.children){let s=this.scene.children[o];s.body!=null&&(s.position.copy(s.body.position),s.quaternion.copy(s.body.quaternion))}if(this.renderer.render(this.scene,this.camera),this.last_time=this.last_time+a*this.framerate*1e3,this.running==e&&this.throwFinished()){this.running=!1,this.rolling=!1,t&&t.call(this,this.notationVectors),this.running=Date.now(),this.animateAfterThrow(this.running);return}this.running==e&&((o,s,l,c,u)=>{!l&&r<this.framerate?setTimeout(()=>{requestAnimationFrame(()=>{o.call(this,s,c,u)})},(this.framerate-r)*1e3):requestAnimationFrame(()=>{o.call(this,s,c,u)})}).bind(this)(this.animateThrow,e,this.adaptive_timestep,t)}animateAfterThrow(e){this.animstate="afterthrow";let t=Date.now(),i=(t-this.last_time)/1e3;i>3&&(i=this.framerate),this.running=!1,this.last_time=t,this.renderer.render(this.scene,this.camera),this.running==e&&((r,a,o)=>{!o&&i<this.framerate?setTimeout(()=>{requestAnimationFrame(()=>{r.call(this,a)})},(this.framerate-i)*1e3):requestAnimationFrame(()=>{r.call(this,a)})}).bind(this)(this.animateAfterThrow,e,this.adaptive_timestep)}startClickThrow(e){this.rolling&&(this.clearDice(),this.rolling=!1);let t={x:(Math.random()*2-.5)*this.display.currentWidth,y:-(Math.random()*2-.5)*this.display.currentHeight},i=Math.sqrt(t.x*t.x+t.y*t.y)+100,r=(Math.random()+3)*i*this.strength;return this.getNotationVectors(e,t,r,i)}clearDice(){this.running=!1;let e;for(;e=this.diceList.pop();)this.scene.remove(e),e.body&&this.world.removeBody(e.body);this.renderer.render(this.scene,this.camera),setTimeout(()=>{this.renderer.render(this.scene,this.camera)},100)}getDiceResults(e){if(e!==void 0)return{type:this.diceList[e].shape,sides:parseInt(this.diceList[e].shape.substring(1)),id:e,...this.diceList[e].result.at(-1)};let t=0;const i=this.notationVectors.constant?parseInt(`${this.notationVectors.op}${this.notationVectors.constant}`):0;let r=i;return{notation:this.notationVectors.notation,sets:this.notationVectors.set.map(a=>{const o=t+a.num-1;let s=0;const l=[];for(let u=t;u<=o;u++){if(this.diceList[t].result.at(-1).reason==="remove"){t++;continue}l.push({type:a.type,sides:parseInt(a.type.substring(1)),id:t,...this.diceList[t].result.at(-1)}),s+=this.diceList[t].result.at(-1).value,t++}const c={num:a.num,type:a.type,sides:parseInt(a.type.substring(1)),rolls:l,total:s};return r+=s,c}),modifier:i,total:r}}async roll(e){if(this.notationVectors=this.startClickThrow(e),this.notationVectors)return new Promise((t,i)=>{this.rollDice(()=>{const r=this.getDiceResults();this.onRollComplete(r);const a=new CustomEvent("rollComplete",{detail:r});document.dispatchEvent(a),t(r)})})}async reroll(e){return this.rolling=!0,this.running=Date.now(),this.iteration=0,new Promise((t,i)=>{e.forEach(r=>{const a=this.diceList[r];a.rerolls+=1,a.rerolling=!0,a.body.wakeUp(),a.body.type=ue.DYNAMIC,a.body.angularVelocity=new M(25,25,25),a.body.velocity=new M(0,0,3e3)}),this.animateThrow(this.running,()=>{const r=e.map(o=>this.getDiceResults(o));this.onRerollComplete(r);const a=new CustomEvent("rerollComplete",{detail:r});document.dispatchEvent(a),t(r)})})}async add(e){let t=this.diceList.length;if(!t)return this.roll(e);let i=this.startClickThrow(e),r=[];for(let a=0,o=i.vectors.length;a<o;++a)this.spawnDice(i.vectors[a]);this.simulateThrow(),this.steps=0,this.iteration=0;for(let a=0,o=i.vectors.length;a<o;++a){const s=t+a;!this.diceList[s]||(this.spawnDice(i.vectors[a],this.diceList[s]),r.push(s))}if(i.result&&i.result.length>0)for(let a=0;a<i.result.length;a++){const o=t+a;let s=this.diceList[o];!s||s.getLastValue().value!=i.result[a]&&this.swapDiceFace(s,i.result[a])}return this.notationVectors=Qc.mergeNotation(this.notationVectors,i),new Promise((a,o)=>{const s=()=>{const l=r.map(u=>this.getDiceResults(u));this.onAddDiceComplete(l);const c=new CustomEvent("addDiceComplete",{detail:l});document.dispatchEvent(c),a(l)};this.rolling=!0,this.running=Date.now(),this.last_time=0,this.animateThrow(this.running,s)})}async remove(e){return new Promise((t,i)=>{const r=[];e.forEach(o=>{const s=this.diceList[o];s.body&&this.world.removeBody(s.body),this.scene.remove(s),s.storeRolledValue("remove"),r.push(this.getDiceResults(o))}),this.renderer.render(this.scene,this.camera),this.onRemoveDiceComplete(r);const a=new CustomEvent("removeDiceComplete",{detail:r});document.dispatchEvent(a),t(r)})}rollDice(e){if(this.notationVectors.error){e.call(this);return}this.clearDice();for(let t=0,i=this.notationVectors.vectors.length;t<i;++t)this.spawnDice(this.notationVectors.vectors[t]);this.simulateThrow(),this.steps=0,this.iteration=0;for(let t=0,i=this.diceList.length;t<i;++t)!this.diceList[t]||this.spawnDice(this.notationVectors.vectors[t],this.diceList[t]);if(this.notationVectors.result&&this.notationVectors.result.length>0)for(let t=0;t<this.notationVectors.result.length;t++){let i=this.diceList[t];!i||i.getLastValue().value!=this.notationVectors.result[t]&&this.swapDiceFace(i,this.notationVectors.result[t])}this.rolling=!0,this.running=Date.now(),this.last_time=0,this.animateThrow(this.running,e)}}var Hw=de('<div id="dice-box" class="fixed w-full h-[100vh] z-20 pointer-events-none"></div>');function Gw(n,e){Ne(e,!0);const[t,i]=dt(),r=()=>Ce(Qu,"$rollDice",t),a=()=>Ce(Rr,"$discord",t);let o;function s(){!o||r().formula===""||o.roll(r().formula)}function l(d){const h=d.sets[0],m=Number(a().weaponAttackMod.split("+").join("")),g=m>0?`+${m}`:m,f=`${h.num}${h.type}${g} = [${h.total}] -> ${h.total+m}`,v=`${d.notation.substring(5)} = ${d.total-h.total}`;return`
 attack: ${f} 
 damage: ${v}`}function c(d){return d.sets.map(g=>g.rolls.map(p=>`[${p.value}]`)).join(" ")}_s(()=>{r().formula&&s()}),qi(()=>{o=new Uw("#dice-box",{theme_customColorset:{background:["#00ffcb","#ff6600","#1d66af","#7028ed","#c4c427","#d81128"],foreground:"#ffffff",texture:"marble",material:"metal"},light_intensity:1,gravity_multiplier:600,baseScale:100,strength:2,onRollComplete:d=>{console.log(d),l(d);const h=`${d.notation} = ${c(d)} -> ${d.total}`,m=a().isWeaponRoll?l(d):h;Np(a().title,m),setTimeout(()=>{o.clearDice(),Fp()},2e3)}}),o.initialize().catch(d=>console.error(d))});var u=Hw();re(n,u),ke(),i()}var Ww=de('<main class="relative bg-origin-border bg-repeat-y min-h-screen bg-fixed"><!> <div id="Grid" class="max-w-[1200px] w-full m-auto px-2 md:px-4 grid grid-cols-4 md:grid-cols-10 character-grid-rows gap-x-2 md:gap-x-3 pt-2 md:pt-4"><div class="col-start-1 row-start-1 md:row-span-1"><!></div> <div id="characterName" class="row-start-1 col-start-2 md:col-start-2 col-span-3 md:col-span-4 row-span-2 self-center -mr-3.5"><!></div> <div id="attributes" class="col-start-1 row-start-5 col-span-4 md:col-start-1 lg:col-start-1 md:col-span-2 lg:col-span-1 md:row-start-3 pb-1 flex flex-col justify-between md:pt-3"><!></div> <div class="col-start-1 md:col-start-6 col-span-4 md:col-span-5 row-start-3 md:row-start-1 row-span-2 card py-3! mb-3 md:mb-0"><!></div> <div class="col-start-1 col-span-4 row-start-8 mt-4 md:col-start-3 lg:col-start-2 md:col-span-3 md:row-start-3 md:my-4"><!></div> <div class="hidden lg:block col-start-2 col-span-3 row-start-7 row-span-7 mb-4 card"><!></div> <div class="col-start-1 col-span-4 row-start-12 row-span-10 mb-4 md:col-start-6 lg:col-start-5 md:col-span-5 lg:col-span-4 md:row-start-3 md:row-span-16 md:mb-9 lg:mb-4 lg:row-span-11 md:my-4"><!></div> <div class="col-start-1 col-span-2 row-start-23 mb-4 md:mb-0 md:mt-4 md:col-start-3 md:col-span-3 md:row-start-7 md:row-span-4 lg:col-start-9 lg:col-span-2 lg:row-start-3 lg:row-span-4"><!></div> <div class="col-start-3 col-span-2 row-start-23 mb-4 md:my-4 lg:mb-4 md:col-start-3 md:col-span-3 md:row-start-12 lg:col-start-9 lg:col-span-2 lg:row-start-8 lg:row-span-6"><!></div></div> <!> <!></main>');function Vw(n,e){Ne(e,!1);const[t,i]=dt(),r=()=>Ce(Ee,"$character",t);qi(()=>{window.addEventListener("beforeunload",jl)}),Zu(()=>{window.removeEventListener("beforeunload",jl)}),hi();var a=Ww(),o=G(a);Gw(o,{});var s=K(o,2),l=G(s),c=G(l);Yg(c,{});var u=K(l,2),d=G(u);Pp(d,{});var h=K(u,2),m=G(h);Gp(m,{});var g=K(h,2),f=G(g);Xp(f,{});var p=K(g,2),v=G(p);uf(v,{});var _=K(p,2),y=G(_);eh(y,{});var x=K(_,2),w=G(x);hm(w,{});var S=K(x,2),T=G(S);mm(T,{});var b=K(S,2),E=G(b);Om(E,{});var D=K(s,2);Lg(D,{});var I=K(D,2);Ig(I,{}),Ze(()=>ll(a,`background-image: url(${r().bg}); background-size: 100vw auto;`)),re(n,a),ke(),i()}Jd(Vw,{target:document.getElementById("app")});
